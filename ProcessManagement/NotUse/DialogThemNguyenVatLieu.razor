@using ProcessManagement.Commons
@using ProcessManagement.Services.SQLServer
@using Radzen.Blazor
@using Radzen
@using ProcessManagement.Models

@inject DialogService DialogService
@inject NotificationService NotificationService
@inject SQLServerServices SQLServerServices

<RadzenStack Gap="0" Style="height: 100%; width: 100%; margin: 0" Orientation="Orientation.Vertical" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Start">
    <RadzenStack Style="height: contain; width: 100%; padding: 0;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
        <RadzenText Text="THÊM MỚI NGUYÊN VẬT LIỆU" Style="font-size: 20px; font-weight: bold; color: black"></RadzenText>
    </RadzenStack>

    <RadzenCard Variant="Variant.Flat" Style="height: 90%; width: 100%; border-radius: 5px; padding: 0; ">
        <RadzenRow Gap="10px" Style="height: 100%; width: 100%; border-top: var(--rz-grid-cell-border); padding: 0;">
            <RadzenColumn Size="12" SizeMD="4" Style="height: 100%; width: 100%; border-right: var(--rz-grid-cell-border)">
                <RadzenStack Gap="0" Style="height: 100%; width: 100%; padding: 10px; padding-right: 10px" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End">
                    <RadzenRadioButtonList @bind-Value="AddMode" TValue="int" Orientation=Orientation.Vertical>
                        <Items>
                            <RadzenRadioButtonListItem Text="Thêm tự động theo danh sách" Value="1"></RadzenRadioButtonListItem>
                            <RadzenRadioButtonListItem Text="Thêm NVL từ mã QR" Value="2"></RadzenRadioButtonListItem>
                        </Items>
                    </RadzenRadioButtonList>
                    <RadzenCard Visible="@(AddMode == 1)" class="rz-shadow-5" Variant="Variant.Filled" Style="height: contain; width: 100%; background-color: white; border-radius: 5px;">
                        <RadzenStack Style="height: 100%; width: 100%;" Gap="0" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Style="height: contain; width: 100%; border-bottom: var(--rz-grid-cell-border);">
                                <RadzenStack Style="width: 30%; height: contain; padding-left: 10px" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                                    <RadzenText Text="Nhập loại NL" Style="font-size: 14px; font-weight: 600;"></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 70%; height: contain; padding: 10px; border-left: var(--rz-grid-cell-border); border-right: var(--rz-grid-cell-border); " AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenTextBox @bind-Value="@(autoAddNVL.LoaiNL)" Style="font-size: 16px; height: contain; border-radius: 0; border-color: Highlight; border-width: 1px; width: 100% "></RadzenTextBox>
                                </RadzenStack>
                            </RadzenStack>

                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Style="height: contain; width: 100%; border-bottom: var(--rz-grid-cell-border);">
                                <RadzenStack Style="width: 30%; height: contain; padding-left: 10px" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                                    <RadzenText Text="Nhập mã sản phẩm" Style="font-size: 14px; font-weight: 600;"></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 70%; height: contain; padding: 10px; border-left: var(--rz-grid-cell-border); border-right: var(--rz-grid-cell-border); " AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenTextBox @bind-Value="@(autoAddNVL.MaSP)" Style="font-size: 16px; height: contain; border-radius: 0; border-color: Highlight; border-width: 1px; width: 100% "></RadzenTextBox>
                                </RadzenStack>
                            </RadzenStack>

                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Style="height: contain; width: 100%; border-bottom: var(--rz-grid-cell-border);">
                                <RadzenStack Style="width: 30%; height: contain; padding-left: 10px" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                                    <RadzenText Text="Chọn Lot NL" Style="font-size: 14px; font-weight: 600;"></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 70%; height: contain; padding: 10px; border-left: var(--rz-grid-cell-border); border-right: var(--rz-grid-cell-border); " AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenDropDown Value="autoAddNVL.LotNL" ValueChanged="@(async (args) => { await OnLotNVLValueChanged(args);})" TValue="string"
                                                    Data=@autoAddNVL.GetLotNLList() Style="height: contain; width: 100%; border-radius: 0; border-width: 1px; font-size: 16px; border-color: Highlight ">
                                    </RadzenDropDown>
                                </RadzenStack>
                            </RadzenStack>

                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Style="height: contain; width: 100%; border-bottom: var(--rz-grid-cell-border);">
                                <RadzenStack Style="width: 30%; height: contain; padding-left: 10px" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                                    <RadzenText Text="Nhập dãy ký tự đầu" Style="font-size: 14px; font-weight: 600; font-weight: 600;"></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 70%; height: contain; padding: 10px; border-left: var(--rz-grid-cell-border); border-right: var(--rz-grid-cell-border); " AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenTextBox @bind-Value="@(autoAddNVL.FistMaQL)" Style="font-size: 16px; height: contain; border-radius: 0; border-color: Highlight; border-width: 1px; width: 100% "></RadzenTextBox>
                                </RadzenStack>
                            </RadzenStack>

                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Style="height: contain; width: 100%; border-bottom: var(--rz-grid-cell-border);">
                                <RadzenStack Style="width: 30%; height: contain; padding-left: 10px" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                                    <RadzenText Text="Nhập số bắt đầu" Style="font-size: 14px; font-weight: 600;"></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 70%; height: contain; padding: 10px; border-left: var(--rz-grid-cell-border); border-right: var(--rz-grid-cell-border); " AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenNumeric TValue="int" @bind-Value="@autoAddNVL.StartMaQLnum" Min="0" Max="100000"
                                                   Style="font-size: 16px; height: contain; border-radius: 0; border-color: Highlight; border-width: 1px; width: 100%" />
                                </RadzenStack>
                            </RadzenStack>

                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Style="height: contain; width: 100%; border-bottom: var(--rz-grid-cell-border);">
                                <RadzenStack Style="width: 30%; height: contain; padding-left: 10px" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                                    <RadzenText Text="Nhập số kết thúc" Style="font-size: 14px; font-weight: 600;"></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 70%; height: contain; padding: 10px; border-left: var(--rz-grid-cell-border); border-right: var(--rz-grid-cell-border); " AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenNumeric TValue="int" @bind-Value="@autoAddNVL.EndMaQLnum" Min="0" Max="100000"
                                                   Style="font-size: 16px; height: contain; border-radius: 0; border-color: Highlight; border-width: 1px; width: 100%" />
                                </RadzenStack>
                            </RadzenStack>

                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Style="height: contain; width: 100%; border-bottom: var(--rz-grid-cell-border);">
                                <RadzenStack Style="width: 30%; height: contain; padding-left: 10px" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                                    <RadzenText Text="Nhập số lượng mỗi NVL" Style="font-size: 14px; font-weight: 600;"></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 70%; height: contain; padding: 10px; border-left: var(--rz-grid-cell-border); border-right: var(--rz-grid-cell-border); " AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenNumeric TValue="int" @bind-Value="@autoAddNVL.SoluongMoithung" Min="0" Max="100000"
                                                   Style="font-size: 16px; height: contain; border-radius: 0; border-color: Highlight; border-width: 1px; width: 100%" />
                                </RadzenStack>
                            </RadzenStack>

                            <RadzenStack Gap="15px" Style="height: contain; width: 100%; padding-top: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                <RadzenButton Click="@(() => OnCreateAutoNewNVL())" Style="width: 120px; color: white; border-radius: 0; background-color: Highlight" Icon="add" Text="Tạo" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Variant="Variant.Filled" />
                                <RadzenButton Click="@(() => OnSaveListNVLtoDB())" Style="width: contain; height: 80%; color: white; background-color: green" Icon="save" Text="Xác nhận thêm" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Variant="Variant.Filled" />
                            </RadzenStack>
                        </RadzenStack>
                    </RadzenCard>
                </RadzenStack>
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="8" Style="height: 100%; width: 100%;">
                <DialogReviewAutoAddListNVLs DanhSachNVLs="@DanhSachNVLs"></DialogReviewAutoAddListNVLs>
            </RadzenColumn>
        </RadzenRow>
    </RadzenCard>
    <RadzenStack Gap="10px" Style="height: contain; width: 100%; padding-left: 10px; padding-top: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End">
        @* <RadzenButton Style="width: contain; height: 80%; color: white; background-color: green" Icon="save" Text="Xác nhận thêm" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Variant="Variant.Filled" Click="@(() => OnAddNewNVL())" /> *@
        <RadzenButton Style="width: contain; height: 80%; color: white; background-color: darkred" Icon="close" Text="Thoát" Size="ButtonSize.Small" Variant="Variant.Flat" Click="@(() => OnCancelAddnewNVL())" />
    </RadzenStack>
</RadzenStack>

@code {

    [Parameter]
    public int DisplayMode { get; set; } = Common.DispMode1;
    [Parameter]
    public SanPham? TargetSP { get; set; }
    [Parameter]
    public List<NVL>? DanhSachNVLs { get; set; }
    private NVL NewNVL = new();
    private AutoAddNVL autoAddNVL = new();
    private int AddMode = 1;

    protected override Task OnInitializedAsync()
    {
        if (TargetSP != null)
        {
            autoAddNVL.LoaiNL = TargetSP.MaSP.Value?.ToString() ?? string.Empty;
            autoAddNVL.MaSP = TargetSP.TenSanPham.Value?.ToString() ?? string.Empty;
        }

        return base.OnInitializedAsync();
    }

    private void OnCancelAddnewNVL()
    {
        DialogService.Close();
    }

    private async Task OnLotNVLValueChanged(string lotNVL)
    {
        autoAddNVL.LotNL = lotNVL;

        //List<NVL> nVLs = SQLServerServices.GetlistNVLperLot(lotNVL);

        List<NVL> nVLs = SQLServerServices.GetlistNVL();

        string? lastmaquanlyNVL = nVLs.LastOrDefault()?.MaQuanLy?.Value?.ToString();

        try
        {
            autoAddNVL.FistMaQL = lastmaquanlyNVL?.Substring(0, 11) ?? string.Empty;

            autoAddNVL.StartMaQLnum = int.Parse(lastmaquanlyNVL?.Substring(11) ?? "0") + 1;
        }
        catch (Exception er)
        {
            await DialogService.Alert($"{er.Message}", "<strong><span style='color: red'>Error!</span></strong>", new AlertOptions() { OkButtonText = "OK", ShowClose = true });
        }
    }

    private async Task OnCreateAutoNewNVL()
    {
        if (autoAddNVL.FistMaQL == string.Empty || autoAddNVL.EndMaQLnum == 0 || autoAddNVL.LotNL == string.Empty || autoAddNVL.SoluongMoithung == 0
            || autoAddNVL.EndMaQLnum < autoAddNVL.StartMaQLnum || autoAddNVL.LoaiNL == string.Empty || autoAddNVL.MaSP == string.Empty)
        {
            await DialogService.Alert($"Chưa nhập đầy đủ thông tin!", "<strong><span style='color: red'>Error!</span></strong>", new AlertOptions() { OkButtonText = "OK", ShowClose = true });

            return;
        }

        DanhSachNVLs = autoAddNVL.CreateListNVLs();
    }

    private async Task OnSaveListNVLtoDB()
    {
        //Common.RaiseClickSaveEvent();
        if (DanhSachNVLs != null && DanhSachNVLs.Count > 0)
        {
            await OnAddNewListNVLtoDB();
        }
        else await DialogService.Alert($"Danh sách NVL chưa được tạo!", "<strong><span style='color: red'>Error!</span></strong>", new AlertOptions() { OkButtonText = "OK", ShowClose = true });
    }

    private async Task OnAddNewListNVLtoDB()
    {
        bool? comfirm = await DialogService.Confirm("Lưu danh sách NVL này vào database?", "Xác nhận", new ConfirmOptions() { OkButtonText = "OK", CancelButtonText = "Hủy", ShowClose = false });

        if (!comfirm.Value) { return; }

        int result = -1; string error = string.Empty;

        if (DanhSachNVLs != null && DanhSachNVLs.Count > 0)
        {
            foreach (var nvl in DanhSachNVLs)
            {
                (result, error) = SQLServerServices.InsertNewNguyenvatlieu(nvl);

                if (result == -1)
                {
                    await DialogService.Alert($"{error}", "<strong><span style='color: red'>Error!</span></strong>", new AlertOptions() { OkButtonText = "OK", ShowClose = true });

                    break;
                }
            }
        }

        if (result != -1)
        {
            ShowNotification("Thêm mới NVL thành công!", NotificationSeverity.Success, 2000);
        }
    }

    // private async Task OnAddNewNVL() // NOT USE
    // {
    //     bool? comfirm = await DialogService.Confirm("Thêm nguyên vật liệu này?", "Xác nhận", new ConfirmOptions() { OkButtonText = "OK", CancelButtonText = "Hủy", ShowClose = false });

    //     if (comfirm.Value)
    //     {
    //         foreach (var property in NewNVL.GetPropertiesValues())
    //         {
    //             if (property.Name != Common.NVLID && property.Name != Common.SoLuongXuat && property.Name != Common.NgayXuat && property.Name != Common.GhiChu)
    //             {
    //                 if (property.Value == null)
    //                 {
    //                     ShowNotification("Hãy nhập đầy đủ thông tin!", NotificationSeverity.Warning, 2000);

    //                     return;
    //                 }
    //             }
    //         }

    //         (int result, string error) = SQLServerServices.InsertNewNguyenvatlieu(NewNVL);

    //         if (result > 0)
    //         {
    //             ShowNotification("Thêm mới NVL thành công!", NotificationSeverity.Success, 2000);
    //         }
    //         else
    //         {
    //             await DialogService.Alert($"{error}", "<strong><span style='color: red'>Error!</span></strong>", new AlertOptions() { OkButtonText = "OK", ShowClose = true });
    //         }
    //     }
    // }

    private void OnCellRender(DataGridCellRenderEventArgs<NVL> args)
    {
        if (args.Column.Property.Contains("ID"))
        {
            args.Attributes.Add("style", $"font-weight: bold;");
        }
    }

    // Notification
    void ShowNotification(string message, NotificationSeverity notifytype, double time)
    {
        NotificationMessage notify = new NotificationMessage
            {
                Style = "position: fixed; top: 0; right: 0;",
                Severity = notifytype,
                Summary = message,
                Duration = time
            };

        NotificationService.Notify(notify);
    }
}


@* <RadzenColumn Size="12" SizeMD="8" Style="height: 100%; width: 100%; padding: 15px;">
    <RadzenText Text="Thông tin nguyên vật liệu" Style="color: darkred; font-weight: 500; height: contain; width: contain"></RadzenText>
    <RadzenCard Variant="Variant.Flat" Style="min-height: 300px; width: 100%; padding: 10px; overflow: scroll ">
        <RadzenStack Style="height: 100%; width: 100%; padding: 10px;" Gap="15px" Orientation="Orientation.Vertical">
            @{
                List<Propertyy>? nvlproperties = NewNVL.GetPropertiesValues();

                if (nvlproperties != null)
                {
                    foreach (var property in nvlproperties)
                    {
                        if (property.Name != Common.NVLID && property.Name != Common.SoLuongXuat && property.Name != Common.NgayXuat)
                        {
                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start" Style="height: contain; width: 100%; padding-bottom: 5px; border-bottom: var(--rz-grid-cell-border);">
                                <RadzenStack Style="width: 20%;">
                                    <RadzenText Text="@property.Name" Style="font-size: 18px; font-weight: 600; height: contain; width: 100% "></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 80%; padding-left: 20px; border-left: var(--rz-grid-cell-border);">
                                    @if (property.Type == typeof(string))
                                    {
                                        <RadzenTextBox Placeholder="@($"*Nhập {property.Name}")" Value="@property.Value?.ToString()" ValueChanged="@((args) => { property.Value = args; } )"
                                                       Style="font-size: 16px; height: contain; border-color: Highlight; border-width: 1px; margin-bottom: 10px; width: 100% "></RadzenTextBox>
                                    }
                                    else if (property.Type == typeof(int))
                                    {
                                        <RadzenNumeric Placeholder="@($"*Nhập {property.Name}")" TValue="int" Value="@int.Parse(property.Value?.ToString()?? "0")" Min="0" Max="100000" ValueChanged="@((args) => { property.Value = args; })"
                                                       Style="font-size: 16px; height: contain; border-color: Highlight; border-width: 1px; margin-bottom: 10px; width: 100%" />
                                    }
                                    else if (property.Type == typeof(DateTime))
                                    {
                                        <RadzenDatePicker Placeholder="@($"*Chọn {property.Name}")" TValue="DateTime"
                                                          ValueChanged="@((args) => { property.Value = args; })"
                                                          ShowTime="false" HourFormat="12" DateFormat="@Common.DayTimeFormatnoTime" AllowInput="false"
                                                          Name="DatePicker" Style="width: 100%; margin-bottom: 10px; font-size: 16px"></RadzenDatePicker>
                                    }
                                </RadzenStack>
                            </RadzenStack>
                        }
                    }
                }
            }
        </RadzenStack>
    </RadzenCard>
</RadzenColumn> *@