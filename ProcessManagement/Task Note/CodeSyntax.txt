
/// Filter list of khsx base on range of day
            DSKHSXs_base.Where(khsx =>
            {
                if (khsx.NgayTao != null)
                {
                    // Try to convert NgayTao to DateTime
                    if (DateTime.TryParse(khsx.NgayTao.ToString(), out DateTime resultDate))
                    {
                        return resultDate >= startDate && resultDate <= endDate;
                    }
                }
                return false; // Skip if NgayTao is null or can't be converted
            })
            .ToList();

/// Grouping
        var groupedKQGC = dsKQGCs
            .GroupBy(k =>
            {
                return new
                {
                    NgayGC = DateTime.TryParse(k.SubMitDay.Value?.ToString(), out DateTime submitday) ? submitday.Date.ToShortDateString() : string.Empty,
                    Ca = k.CaLamViec.Value,
                    MMID = k.MMID.Value,
                    NCID = k.NCID.Value,
                    NVIDs = k.NVIDs.Value
                };
            })
            .Select(g => new
            {
                Key = g.Key,
                Items = g.ToList()
            });

///  Grouping for KeypairValue
            var nvids = propertyy.Value?.ToString()?.Trim().Split(",");

            if (nvids != null)
            {
                results = dsachNhanViens
                        .Where(item => item.NVID.Value != null && nvids.Contains(item.NVID.Value?.ToString()?.Trim()))
                        .Select(item => new KeyValuePair<string, string>(
                            item.NVID.Value?.ToString() ?? string.Empty,
                            $"{item.MaNhanVien.Value?.ToString()?.Trim()} ({item.GetThongTinNhanVienByName("Tên nhân viên").GiaTri.Value?.ToString()?.Trim()})"
                        ))
                        .Where(x => !string.IsNullOrEmpty(x.Value) && !string.IsNullOrEmpty(x.Key))
                        .Distinct();
            }