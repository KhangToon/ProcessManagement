@using ProcessManagement.Commons
@using ProcessManagement.Models
@using ProcessManagement.Models.KHSXs
@using ProcessManagement.Models.QLCDOAN
@using ProcessManagement.Pages.KehoachSX.DongThung.Dialogs
@using ProcessManagement.Pages.Manager_NVL.Dialogs
@using ProcessManagement.Services.SQLServer
@using Radzen.Blazor
@using Radzen

@inject NotificationService NotificationService
@inject DialogService DialogService
@inject SQLServerServices SQLServerServices
@inject TooltipService TooltipService
@inject NavigationManager NavigationManager

<style>
    .rz-grid-table {
        width: unset;
    }
</style>

<RadzenStack Gap="5" Style="height: 100%; width: 100%;">
    <!--Header-->
    <RadzenStack Style="width: 100%; padding-bottom: 5px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
        <RadzenStack Style="height: contain; width: 100%; background-color: var(--rz-success-lighter); padding: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
            <RadzenText Text="QUẢN LÝ CÔNG ĐOẠN" Style="color: green; font-weight: 600; font-size: 20px"></RadzenText>
        </RadzenStack>
    </RadzenStack>

    <!--Body-->
    <!--Datagrid-->
    <RadzenDataGrid class="rz-grid-table" Data="@(DSachResultPerLOTKHSX)" TItem="ResultPerLOTKHSX" IsLoading="@isLoading"
                    EmptyText="Danh sách LOT NVL trống." Style="overflow: scroll; max-width: 100%; max-height: 700px"
                    ShowColumnTitleAsTooltip="true" ShowCellDataAsTooltip="true"
                    AllowFiltering="false" FilterMode="FilterMode.Simple" AllowColumnResize=true AllowVirtualization=true
                    AllowPaging="false" AllowSorting="false" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                    ShowPagingSummary="true" PagingSummaryFormat="@pagingSummaryFormat" PagerPosition="PagerPosition.Bottom"
                    GridLines="DataGridGridLines.Both" Density="Density.Compact"
                    HeaderCellRender="@(args => {args.Attributes.Add("style", $"background-color: rgba(58, 71, 77); padding-left: 10px; padding-right: 10px");})"
                    CellRender="@OnCellRender" FooterCellRender="@HeaderFooterCellRender" Value="@DatagridSeleted" ValueChanged="@((args) => OnDatagridSelectChanged(args))">

        <HeaderTemplate>
            <RadzenStack Gap="10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                <!--Button Reload-->
                <RadzenButton Text="Reload" Style="border-radius: 20px; min-width: 100px;" Click="@(async() => { await LoadDSachLOTofKHSX(TargetKHSX.KHSXID.Value, 300); })"
                              IsBusy="@isLoading" BusyText=" Loading..." Icon="autorenew" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" />
                <RadzenButton Visible="@(isexpandingAll)" Text="Đóng tất cả" Style="border-radius: 20px; min-width: 100px;" Click="@(() => { isexpandingAll = false; SetExpandingAll(isexpandingAll);})"
                              Icon="chevron_left" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" />
                <RadzenButton Visible="@(!isexpandingAll)" Text="Mở tất cả" Style="border-radius: 20px; min-width: 100px;" Click="@(() => { isexpandingAll = true; SetExpandingAll(isexpandingAll);})"
                              Icon="chevron_right" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" />

            </RadzenStack>
        </HeaderTemplate>
        <Columns>
            @if (DSachResultPerLOTKHSX.Count > 0)
            {
                <!--STT-->
                <RadzenDataGridColumn Width="40px" Frozen="true"
                                      TItem="ResultPerLOTKHSX" Title="STT"
                                      Property="STT" TextAlign="TextAlign.Center">
                    <HeaderTemplate>
                        <span style="font-weight: 600; font-size: 15px; color: white">STT</span>
                    </HeaderTemplate>
                    <Template Context="lotrow">
                        <span style="font-weight: bold;">@(DSachResultPerLOTKHSX.IndexOf(lotrow) + 1)</span>
                    </Template>
                    <FooterTemplate>
                        <RadzenText Text="TOTAL" Style="color: black; font-size: 18px; height: contain; font-weight: 600;"></RadzenText>
                    </FooterTemplate>
                </RadzenDataGridColumn>

                <!--MaSP-->
                <RadzenDataGridColumn Width="100px" Frozen="true" TItem="ResultPerLOTKHSX" Title="Mã SP"
                                      Property="masp" TextAlign="TextAlign.Center">
                    <HeaderTemplate>
                        <span style="font-weight: 600; font-size: 15px; color: white;">Mã SP</span>
                    </HeaderTemplate>
                    <Template Context="lotrow">
                        <RadzenStack Style="width: contain; height: contain" Gap="10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                            <RadzenText Text="@($"{lotrow.MaSP?.ToString()?? "_"}")" Style="font-size: 15px; min-width: 100px; height: contain; font-weight: 500"></RadzenText>
                            <RadzenButton Visible="false" Click="@(() => OnOpenQR_ImageDialog(lotrow.MaSP?.ToString() ?? string.Empty, "Mã sản phẩm"))" Icon="qr_code" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Shade="Shade.Lighter" Variant="Variant.Flat"
                                          Style="font-size: 17px; font-weight: 600; height: contain; min-height: contain; width: contain;" />
                        </RadzenStack>
                    </Template>
                </RadzenDataGridColumn>

                <!--MaQuanLy-->
                <RadzenDataGridColumn Width="150px" TItem="ResultPerLOTKHSX" Title="Mã quản lý" Frozen="true"
                                      Property="maquanly" TextAlign="TextAlign.Center">
                    <HeaderTemplate>
                        <span style="font-weight: 600; font-size: 15px; color: white;">Mã quản lý</span>
                    </HeaderTemplate>
                    <Template Context="lotrow">
                        <RadzenStack Style="width: contain; height: contain" Gap="10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                            <RadzenText Text="@($"{lotrow.MaQuanLyLot?.ToString()?? "_"}")" Style="font-size: 15px; min-width: 150px; height: contain; font-weight: 500"></RadzenText>
                            <RadzenButton Click="@(() => OnOpenQR_ImageDialog(lotrow.MaQuanLyLot?.ToString() ?? string.Empty, "Mã quản lý"))" Icon="qr_code" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Shade="Shade.Lighter" Variant="Variant.Flat"
                                          Style="font-size: 17px; font-weight: 600; height: contain; min-height: contain; width: contain;" />
                            <RadzenButton Click="@(() => NavigateToPhieuXDCD(lotrow))" Icon="print" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Shade="Shade.Lighter" Variant="Variant.Flat"
                                          Style="font-size: 17px; font-weight: 600; height: contain; min-height: contain; width: contain;" />
                        </RadzenStack>
                    </Template>
                </RadzenDataGridColumn>

                <!--SoLuong-->
                <RadzenDataGridColumn Width="60px" Frozen="true" TItem="ResultPerLOTKHSX" Title="Số lượng"
                                      Property="soluong" TextAlign="TextAlign.Center">
                    <HeaderTemplate>
                        <span style="font-weight: 600; font-size: 15px; color: white;">Số lượng</span>
                    </HeaderTemplate>
                    <Template Context="lotrow">
                        <RadzenText Text="@($"{lotrow.SLperLOT?.ToString()?? "_"}")" Style="font-size: 15px; min-width: 60px; height: contain; font-weight: 500"></RadzenText>
                    </Template>
                    <FooterTemplate>
                        <RadzenText Text="@((DSachResultPerLOTKHSX.Sum(lot => int.TryParse(lot.SLperLOT?.ToString(), out int numperlot)? numperlot : 0).ToString()))" Style="color: black; font-size: 18px; height: contain; font-weight: 600;"></RadzenText>
                    </FooterTemplate>
                </RadzenDataGridColumn>

                @foreach (var cdoancolumn in TargetKHSX.DSachCongDoans)
                {
                    int maxindexColumn = GetMaxIndexColumnCDoan(cdoancolumn.NCID.Value);

                    string tencongdoan = cdoancolumn.TenCongDoan.Value?.ToString() ?? string.Empty;
                    <RadzenDataGridColumn Resizable=true TItem="ResultPerLOTKHSX" Title="@tencongdoan"
                                          TextAlign="TextAlign.Center">
                        <HeaderTemplate>
                            <RadzenStack Gap="30px" Style="width: 100%; height: 100%" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Orientation="Orientation.Horizontal">
                                <RadzenText @onclick="@(() => SetCongDoanExpand(cdoancolumn))" Text="@tencongdoan" Style="font-size: 17px; height: contain; font-weight: 600; padding: 5px; color: white; cursor: pointer"></RadzenText>
                                <RadzenButton Click="@( async() => {cdoancolumn.isExpandColumn = false;})" Visible="@(cdoancolumn.isExpandColumn)" Icon="chevron_left" Text="Đóng" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Shade="Shade.Light" Variant="Variant.Flat"
                                              Style="font-size: 15px; height: contain; min-height: contain; width: contain;" />
                                <RadzenButton Click="@( async() => {cdoancolumn.isExpandColumn = true;})" Visible="@(!cdoancolumn.isExpandColumn)" Icon="chevron_right" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Shade="Shade.Light" Variant="Variant.Flat"
                                              Style="font-size: 15px; height: contain; min-height: contain; width: contain;" />
                            </RadzenStack>
                        </HeaderTemplate>
                        <Columns>
                            @{
                                @if (cdoancolumn.isExpandColumn)
                                {
                                    <RadzenDataGridColumn Resizable=true TItem="ResultPerLOTKHSX" Title="Công đoạn"
                                                          TextAlign="TextAlign.Center">
                                        <HeaderTemplate>
                                            <span style="font-weight: 600; font-size: 15px; color: black; padding-left: 10px; padding-right: 10px">Công đoạn</span>
                                        </HeaderTemplate>
                                        <Template Context="lotrow">
                                            <RadzenText Text="@tencongdoan" Style="font-size: 15px; height: contain; font-weight: 600; padding: 5px"></RadzenText>
                                        </Template>
                                    </RadzenDataGridColumn>

                                    foreach (var resultIndex in cdoancolumn.GenerateListColumnIndex(maxindexColumn))
                                    {
                                        <RadzenDataGridColumn Resizable=true TItem="ResultPerLOTKHSX" Title="Ca"
                                                              TextAlign="TextAlign.Center">
                                            <HeaderTemplate>
                                                <span style="font-weight: 600; font-size: 15px; color: black; padding-left: 10px; padding-right: 10px">Ca</span>
                                            </HeaderTemplate>
                                            <Template Context="lotrow">
                                                <RadzenText Text="@(lotrow.GetCaLamViec(cdoancolumn.NCID.Value, resultIndex)?.ToString())" Style="font-size: 15px; height: contain; font-weight: 600"></RadzenText>
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn Resizable=true TItem="ResultPerLOTKHSX" Title="Ngày gia công"
                                                              TextAlign="TextAlign.Center">
                                            <HeaderTemplate>
                                                <span style="font-weight: 600; font-size: 15px; color: black; padding-left: 10px; padding-right: 10px">Ngày gia công</span>
                                            </HeaderTemplate>
                                            <Template Context="lotrow">
                                                <RadzenText Text="@(lotrow.GetNgayGC(cdoancolumn.NCID.Value, resultIndex)?.ToString())" Style="font-size: 15px; height: contain; font-weight: 500"></RadzenText>
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn Resizable=true TItem="ResultPerLOTKHSX" Title="Nhân viên"
                                                              TextAlign="TextAlign.Center">
                                            <HeaderTemplate>
                                                <span style="font-weight: 600; font-size: 15px; color: black; padding-left: 10px; padding-right: 10px">Nhân viên</span>
                                            </HeaderTemplate>
                                            <Template Context="lotrow">
                                                <RadzenText Text="@(GetColumnValueByID(lotrow.GetNhanVien(cdoancolumn.NCID.Value, resultIndex)?.ToString(), KetQuaGC.KQGCDBName.NVIDs))" Style="font-size: 15px; height: contain; font-weight: 500;"></RadzenText>
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn Resizable=true TItem="ResultPerLOTKHSX" Title="OK"
                                                              TextAlign="TextAlign.Center">
                                            <HeaderTemplate>
                                                <span style="font-weight: 600; font-size: 15px; color: black; padding-left: 10px; padding-right: 10px">OK</span>
                                            </HeaderTemplate>
                                            <Template Context="lotrow">
                                                <RadzenText Text="@(lotrow.GetSLOK(cdoancolumn.NCID.Value, resultIndex)?.ToString())" Style="font-size: 15px; height: contain; font-weight: 500"></RadzenText>
                                            </Template>
                                            <FooterTemplate>
                                                <RadzenText Text="@(((DSachResultPerLOTKHSX.Sum(lot => int.TryParse(lot.GetSLOK(cdoancolumn.NCID.Value, resultIndex)?.ToString(), out int sumok)? sumok : 0)).ToString()))"
                                                            Style="color: black; font-size: 18px; height: contain; min-width: 50px; font-weight: 600;"></RadzenText>
                                            </FooterTemplate>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn Resizable=true TItem="ResultPerLOTKHSX" Title="NG"
                                                              TextAlign="TextAlign.Center">
                                            <HeaderTemplate>
                                                <span style="font-weight: 600; font-size: 15px; color: red; padding-left: 10px; padding-right: 10px">NG</span>
                                            </HeaderTemplate>
                                            <Template Context="lotrow">
                                                <RadzenText Text="@(lotrow.GetSLNG(cdoancolumn.NCID.Value, resultIndex)?.ToString())" Style="font-size: 15px; height: contain; font-weight: 500"></RadzenText>
                                            </Template>
                                            <FooterTemplate>
                                                <RadzenText Text="@(((DSachResultPerLOTKHSX.Sum(lot => int.TryParse(lot.GetSLNG(cdoancolumn.NCID.Value, resultIndex)?.ToString(), out int sumng)? sumng : 0)).ToString()))"
                                                            Style="color: black; font-size: 18px; height: contain; min-width: 50px; font-weight: 600;"></RadzenText>
                                            </FooterTemplate>
                                        </RadzenDataGridColumn>
                                    }

                                    <!--Tong-->
                                    <RadzenDataGridColumn Width="60px" Frozen="true" TItem="ResultPerLOTKHSX" Title="Tổng"
                                                          TextAlign="TextAlign.Center">
                                        <HeaderTemplate>
                                            <span style="font-weight: 700; font-size: 15px; color: black; padding-left: 10px; padding-right: 10px">Tổng</span>
                                        </HeaderTemplate>
                                        <Columns>
                                            <!--TongOK-->
                                            <RadzenDataGridColumn Resizable=true TItem="ResultPerLOTKHSX" Title="OK"
                                                                  TextAlign="TextAlign.Center">
                                                <HeaderTemplate>
                                                    <span style="font-weight: 700; font-size: 15px; color: black; padding-left: 10px; padding-right: 10px">OK</span>
                                                </HeaderTemplate>
                                                <Template Context="lotrow">
                                                    @{
                                                        var targetkqgc = lotrow.TargetKQGC(cdoancolumn.NCID.Value);

                                                        <RadzenText Visible="@((targetkqgc.TotalOK + targetkqgc.TotalNG) > 0)" Text="@(targetkqgc.TotalOK.ToString())" Style="font-size: 15px; height: contain; color: darkgreen; font-weight: 600"></RadzenText>
                                                    }
                                                </Template>
                                                <FooterTemplate>
                                                    <RadzenText Text="@((DSachResultPerLOTKHSX.Sum(lot => lot.TargetKQGC(cdoancolumn.NCID.Value).TotalOK).ToString()))" Style="color: black; font-size: 18px; height: contain; min-width: 50px; font-weight: 600;"></RadzenText>
                                                </FooterTemplate>
                                            </RadzenDataGridColumn>
                                            <!--TongNG-->
                                            <RadzenDataGridColumn Resizable=true TItem="ResultPerLOTKHSX" Title="NG"
                                                                  TextAlign="TextAlign.Center">
                                                <HeaderTemplate>
                                                    <span style="font-weight: 700; font-size: 15px; color: red; padding-left: 10px; padding-right: 10px">NG</span>
                                                </HeaderTemplate>
                                                <Template Context="lotrow">
                                                    @{
                                                        var targetkqgc = lotrow.TargetKQGC(cdoancolumn.NCID.Value);

                                                        if ((targetkqgc.TotalOK + targetkqgc.TotalNG) > 0)
                                                        {
                                                            <RadzenText Visible="@(targetkqgc.TotalNG > 0)" Text="@(targetkqgc.TotalNG.ToString())" Style="font-size: 15px; color: red; height: contain; font-weight: 600"></RadzenText>
                                                            <RadzenText Visible="@(targetkqgc.TotalNG == 0)" Text="@(targetkqgc.TotalNG.ToString())" Style="font-size: 15px; height: contain; font-weight: 600"></RadzenText>
                                                        }
                                                    }
                                                </Template>
                                                <FooterTemplate>
                                                    <RadzenText Text="@((DSachResultPerLOTKHSX.Sum(lot => lot.TargetKQGC(cdoancolumn.NCID.Value).TotalNG).ToString()))" Style="color: red; font-size: 18px; height: contain; min-width: 50px; font-weight: 600;"></RadzenText>
                                                </FooterTemplate>
                                            </RadzenDataGridColumn>
                                        </Columns>
                                    </RadzenDataGridColumn>
                                }
                                else if (cdoancolumn.isExpandColumn == false)
                                {
                                    <!--Tong-->
                                    <RadzenDataGridColumn Width="60px" Frozen="true" TItem="ResultPerLOTKHSX" Title="Tổng"
                                                          TextAlign="TextAlign.Center">
                                        <HeaderTemplate>
                                            <span style="font-weight: 700; font-size: 15px; color: black; padding-left: 10px; padding-right: 10px">Tổng</span>
                                        </HeaderTemplate>
                                        <Columns>
                                            <!--TongOK-->
                                            <RadzenDataGridColumn Resizable=true TItem="ResultPerLOTKHSX" Title="OK"
                                                                  TextAlign="TextAlign.Center">
                                                <HeaderTemplate>
                                                    <span style="font-weight: 700; font-size: 15px; color: black; padding-left: 10px; padding-right: 10px">OK</span>
                                                </HeaderTemplate>
                                                <Template Context="lotrow">
                                                    @{
                                                        var targetkqgc = lotrow.TargetKQGC(cdoancolumn.NCID.Value);

                                                        <RadzenText Visible="@((targetkqgc.TotalOK + targetkqgc.TotalNG) > 0)" Text="@(targetkqgc.TotalOK.ToString())" Style="font-size: 15px; height: contain; color: darkgreen; font-weight: 600"></RadzenText>
                                                    }
                                                </Template>
                                                <FooterTemplate>
                                                    <RadzenText Text="@((DSachResultPerLOTKHSX.Sum(lot => lot.TargetKQGC(cdoancolumn.NCID.Value).TotalOK).ToString()))" Style="color: black; font-size: 18px; height: contain; min-width: 50px; font-weight: 600;"></RadzenText>
                                                </FooterTemplate>
                                            </RadzenDataGridColumn>
                                            <!--TongNG-->
                                            <RadzenDataGridColumn Resizable=true TItem="ResultPerLOTKHSX" Title="NG"
                                                                  TextAlign="TextAlign.Center">
                                                <HeaderTemplate>
                                                    <span style="font-weight: 700; font-size: 15px; color: red; padding-left: 10px; padding-right: 10px">NG</span>
                                                </HeaderTemplate>
                                                <Template Context="lotrow">
                                                    @{
                                                        var targetkqgc = lotrow.TargetKQGC(cdoancolumn.NCID.Value);

                                                        if ((targetkqgc.TotalOK + targetkqgc.TotalNG) > 0)
                                                        {
                                                            <RadzenText Visible="@(targetkqgc.TotalNG > 0)" Text="@(targetkqgc.TotalNG.ToString())" Style="font-size: 15px; color: red; height: contain; font-weight: 600"></RadzenText>
                                                            <RadzenText Visible="@(targetkqgc.TotalNG == 0)" Text="@(targetkqgc.TotalNG.ToString())" Style="font-size: 15px; height: contain; font-weight: 600"></RadzenText>
                                                        }
                                                    }
                                                </Template>
                                                <FooterTemplate>
                                                    <RadzenText Text="@((DSachResultPerLOTKHSX.Sum(lot => lot.TargetKQGC(cdoancolumn.NCID.Value).TotalNG).ToString()))" Style="color: red; font-size: 18px; height: contain; min-width: 50px; font-weight: 600;"></RadzenText>
                                                </FooterTemplate>
                                            </RadzenDataGridColumn>
                                        </Columns>
                                    </RadzenDataGridColumn>
                                }
                            }
                        </Columns>
                    </RadzenDataGridColumn>

                    <!--Danh gia-->
                    <RadzenDataGridColumn Width="60px" TItem="ResultPerLOTKHSX" Title="Đánh giá"
                                          TextAlign="TextAlign.Center">
                        <HeaderTemplate>
                            <span style="font-weight: 600; font-size: 15px; color: white;">Đánh giá</span>
                        </HeaderTemplate>
                        <Template Context="lotrow">
                            @{
                                var targetkqgc = lotrow.TargetKQGC(cdoancolumn.NCID.Value);
                            }
                            <RadzenButton Visible="@(targetkqgc.DanhGia == 0)" Text="FALSE" ButtonStyle="ButtonStyle.Danger" Shade="Shade.Dark" Size="ButtonSize.Small" Variant="Variant.Flat" Style="font-size: 15px; font-weight: 600; width: 100%; cursor: default"></RadzenButton>
                            <RadzenButton Visible="@(targetkqgc.DanhGia == 1)" Text="TRUE" ButtonStyle="ButtonStyle.Success" Shade="Shade.Light" Size="ButtonSize.Small" Variant="Variant.Flat" Style="font-size: 15px; width: 100%; font-weight: 600; cursor: default"></RadzenButton>
                            <RadzenText Visible="@(targetkqgc.DanhGia == 2)" Text="_" Style="font-size: 15px; height: contain; font-weight: 600"></RadzenText>
                        </Template>
                        <FooterTemplate>
                            <RadzenText Text="@(((DSachResultPerLOTKHSX.Any(lot => lot.TargetKQGC(cdoancolumn.NCID.Value).DanhGia == 0 || lot.TargetKQGC(cdoancolumn.NCID.Value).DanhGia == 2))? "FALSE" : "TRUE"))"
                                        Style="color: black; font-size: 18px; height: contain; min-width: 50px; font-weight: 600;"></RadzenText>
                        </FooterTemplate>
                    </RadzenDataGridColumn>
                }

                <!--DongThung-->
                <RadzenDataGridColumn Resizable=true TItem="ResultPerLOTKHSX" Title="Thùng thành phẩm" TextAlign="TextAlign.Center">
                    <HeaderTemplate>
                        <RadzenText Text="Thùng thành phẩm" Style="font-size: 17px; height: contain; font-weight: 600; padding: 5px; color: white; cursor: pointer"></RadzenText>
                    </HeaderTemplate>
                    <Columns>
                        @foreach (var index in ResultPerLOTKHSX.GenerateListColumnIndex(MaxThungTP))
                        {
                            <!--ID thung-->
                            <RadzenDataGridColumn Resizable=true TItem="ResultPerLOTKHSX" Title="ID thùng"
                                                  TextAlign="TextAlign.Center">
                                <HeaderTemplate>
                                    <span style="font-weight: 700; font-size: 15px; color: black; padding-left: 10px; padding-right: 10px">ID thùng</span>
                                </HeaderTemplate>
                                <Template Context="lotrow">
                                    <RadzenText Text="@(lotrow.ThungTPhams.ElementAtOrDefault(index)?.IDThung.Value?.ToString())" Style="font-size: 16px; color: darkblue; height: contain; font-weight: 600"></RadzenText>
                                </Template>
                                <FooterTemplate>

                                </FooterTemplate>
                            </RadzenDataGridColumn>
                            <!--So luong-->
                            <RadzenDataGridColumn Resizable=true TItem="ResultPerLOTKHSX" Title="Số lượng"
                                                  TextAlign="TextAlign.Center">
                                <HeaderTemplate>
                                    <span style="font-weight: 700; font-size: 15px; color: black; padding-left: 10px; padding-right: 10px">Số lượng</span>
                                </HeaderTemplate>
                                <Template Context="lotrow">
                                    <RadzenText Text="@(lotrow.ThungTPhams.ElementAtOrDefault(index)?.SoLuong.Value?.ToString())" Style="font-size: 15px; height: contain; font-weight: 500"></RadzenText>
                                </Template>
                                <FooterTemplate>
                                </FooterTemplate>
                            </RadzenDataGridColumn>
                        }
                    </Columns>
                </RadzenDataGridColumn>

                <!--Button DongThung-->
                <RadzenDataGridColumn Resizable=true TItem="ResultPerLOTKHSX" Title="Đóng thùng" TextAlign="TextAlign.Center">
                    <HeaderTemplate>
                        <RadzenText Text="Đóng thùng" Style="font-size: 15px; height: contain; font-weight: 600; color: white; padding: 5px;"></RadzenText>
                    </HeaderTemplate>
                    <Template Context="lotrow">
                        <RadzenButton Disabled="@(!lotrow.IsLastCDoanDone)" Visible="@(!lotrow.IsCreatedThungTP)" Text="Đóng thùng"
                                      Click="@(async () => await OpenDialogAsignSPforNVL(lotrow))" ButtonStyle="ButtonStyle.Secondary" Icon="add" Shade="Shade.Light" Size="ButtonSize.Small" Variant="Variant.Flat" Style="font-size: 15px; width: 100%; font-weight: 500; background-color: Highlight"></RadzenButton>
                        <RadzenButton Disabled="@(!lotrow.IsLastCDoanDone)" Visible="@(lotrow.IsCreatedThungTP)" Text="Đã đóng thùng"
                                      Click="@(async () => await OpenDialogAsignSPforNVL(lotrow))" ButtonStyle="ButtonStyle.Success" Icon="check" Shade="Shade.Default" Size="ButtonSize.Small" Variant="Variant.Flat" Style="font-size: 15px; width: 100%; font-weight: 500;"></RadzenButton>
                    </Template>
                </RadzenDataGridColumn>

                @if (true)
                {
                    int totalAllOK = 0;
                    int totalAllNG = 0;

                    <!--TONG OK-->
                    <RadzenDataGridColumn Resizable=true TItem="ResultPerLOTKHSX" Title="TỔNG OK" TextAlign="TextAlign.Center">
                        <HeaderTemplate>
                            <RadzenText Text="TỔNG OK" Style="font-size: 17px; height: contain; font-weight: 600; color: white; padding: 5px;"></RadzenText>
                        </HeaderTemplate>
                        <Template Context="lotrow">
                            @{
                                totalAllOK = lotrow.GetTotalOKAllCDoan();
                                totalAllNG = lotrow.GetTotalNGAllCDoan();
                            }
                            <RadzenText Text="@($"{totalAllOK}")" Style="font-size: 16px; color: green; height: contain; font-weight: 600"></RadzenText>
                        </Template>
                        <FooterTemplate>
                            <RadzenText Text="@(DSachResultPerLOTKHSX.Sum(lot => lot.GetTotalOKAllCDoan()).ToString())"
                                        Style="color: darkgreen; font-size: 18px; height: contain; min-width: 50px; font-weight: 600;"></RadzenText>
                        </FooterTemplate>
                    </RadzenDataGridColumn>

                    <!--TONG NG-->
                    <RadzenDataGridColumn Resizable=true TItem="ResultPerLOTKHSX" Title="TỔNG NG" TextAlign="TextAlign.Center">
                        <HeaderTemplate>
                            <RadzenText Text="TỔNG NG" Style="font-size: 17px; height: contain; font-weight: 600; color: white; padding: 5px;"></RadzenText>
                        </HeaderTemplate>
                        <Template Context="lotrow">
                            <RadzenText Visible="@(totalAllNG > 0)" Text="@($"{totalAllNG}")" Style="font-size: 16px; color: red; height: contain; font-weight: 600"></RadzenText>
                            <RadzenText Visible="@(totalAllNG == 0 && totalAllOK > 0 && lotrow.IsLastCDoanDone)" Text="@($"{totalAllNG}")" Style="font-size: 16px; color: darkgreen; height: contain; font-weight: 600"></RadzenText>
                        </Template>
                        <FooterTemplate>
                            <RadzenText Text="@(DSachResultPerLOTKHSX.Sum(lot => lot.GetTotalNGAllCDoan()).ToString())"
                                        Style="color: red; font-size: 18px; height: contain; min-width: 50px; font-weight: 600;"></RadzenText>
                        </FooterTemplate>
                    </RadzenDataGridColumn>

                    <!--TRANG THAI-->
                    <RadzenDataGridColumn Resizable=true TItem="ResultPerLOTKHSX" Title="TỔNG NG" TextAlign="TextAlign.Center">
                        <HeaderTemplate>
                            <RadzenText Text="TRẠNG THÁI" Style="font-size: 17px; height: contain; font-weight: 600; color: white; padding: 5px;"></RadzenText>
                        </HeaderTemplate>
                        <Template Context="lotrow">
                            <RadzenButton Visible="@(!(lotrow.IsLastCDoanDone && lotrow.IsCreatedThungTP))" ButtonStyle="ButtonStyle.Warning" Size="ButtonSize.Small" Shade="Shade.Darker" Variant="Variant.Text" Text="Processing" Style="font-size: 16px; height: contain; font-weight: 500"></RadzenButton>
                            <RadzenButton Visible="@(lotrow.IsLastCDoanDone && lotrow.IsCreatedThungTP)" ButtonStyle="ButtonStyle.Success" Size="ButtonSize.Small" Shade="Shade.Light" Variant="Variant.Flat" Icon="check" Text="Completed" Style="font-size: 16px; height: contain; font-weight: 500"></RadzenButton>
                        </Template>
                    </RadzenDataGridColumn>
                }
            }
        </Columns>
    </RadzenDataGrid>
</RadzenStack>

@code {
    [Parameter]
    public KHSX TargetKHSX { get; set; } = new();

    private IList<ResultPerLOTKHSX>? DatagridSeleted;
    private ResultPerLOTKHSX SelectedRow = new();
    private bool isLoading = false;
    private string pagingSummaryFormat = "Displaying page {0} of {1} <b>(total {2} records)</b>";
    private bool isexpandingAll = false;

    private int MaxThungTP = 2;

    private List<KHSX_LOT> DSLOTKHSXs = new();

    private List<ResultPerLOTKHSX> DSachResultPerLOTKHSX = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadDSachLOTofKHSX(TargetKHSX.KHSXID.Value, 0);

        await base.OnInitializedAsync();
    }

    private void SetExpandingAll(bool setExpanding)
    {
        foreach (var cd in TargetKHSX.DSachCongDoans)
        {
            cd.isExpandColumn = setExpanding;
        }
    }

    // Get so luong toi da cua column resultCalamviec/perCongdoan
    private int GetMaxIndexColumnCDoan(object? cdid)
    {
        int defaultmaxindex = 2;

        var maxindex = DSachResultPerLOTKHSX.Max(rs => rs.TargetKQGC(cdid).ResultCalamviecs.Count());

        return (maxindex > defaultmaxindex) ? maxindex : defaultmaxindex;
    }

    // Get max index of ThungTP in all results
    private int GetMaxIndexThungTP()
    {
        int defaultmaxindex = 2;

        var maxindex = DSachResultPerLOTKHSX.Max(rs => rs.ThungTPhams.Count());

        return (maxindex > defaultmaxindex) ? maxindex : defaultmaxindex;
    }


    private bool revisiblepage = false;
    private async Task ReVisiblePage()
    {
        revisiblepage = true;
        StateHasChanged();
        await Task.Delay(1);
        revisiblepage = false;
        StateHasChanged();
    }

    private void SetCongDoanExpand(NguyenCongofKHSX congdoanColumn)
    {
        if (congdoanColumn.isExpandColumn)
        {
            congdoanColumn.isExpandColumn = false;
        }
        else congdoanColumn.isExpandColumn = true;
    }

    private async Task LoadDSachLOTofKHSX(object? khsxid, int delay)
    {
        await Task.Run(async () =>
        {
            if (isLoading == false)
            {
                isLoading = true;

                List<KHSX_LOT> dsLots = new();

                Dictionary<string, object?> parameters = new Dictionary<string, object?>() { { KHSX_LOT.DBName.KHSXID, khsxid } };
                (var resultdslots, string getError) = SQLServerServices.GetListLOT_khsx(parameters);

                if (resultdslots != null && resultdslots.Any())
                {
                    var resultDistinct = resultdslots.DistinctBy(lot => lot.MaQuanLyLot.Value?.ToString()?.Trim()).ToList();

                    dsLots = resultDistinct;
                }

                await Task.Delay(delay);

                DSLOTKHSXs = dsLots;

                // Load KQGC perLOTKHSX
                DSachResultPerLOTKHSX = await LoadKQGCperLOTofKHSX(dsLots, TargetKHSX.KHSXID.Value);

                isLoading = false;
            }
        });
    }

    // private class ResultPerLOTKHSX
    // {
    //     public object? MaSP { get; set; }
    //     public object? MaQuanLyLot { get; set; }
    //     public object? SLperLOT { get; set; }

    //     public bool isLastCDoanDone = true;

    //     public List<KQGCperCDOANofLOTKHSX> dsachKQGCperCDOAN { get; set; } = new();

    //     public List<ThungTPham> thungTPhams { get; set; } = new(); // danh sach thung thanh pham cua moi LOT

    //     // public int GetMaxColumnIndex() // get max column of lot result in dsachKQGCperCDOAN
    //     // {
    //     //     int maxindex = dsachKQGCperCDOAN.MaxBy(kqgc => kqgc.ResultCalamviecs.Count)?.ResultCalamviecs.Count ?? 2;

    //     //     return maxindex;
    //     // }

    //     public KQGCperCDOANofLOTKHSX TargetKQGC(object? cdid)
    //     {
    //         KQGCperCDOANofLOTKHSX targetKQ = dsachKQGCperCDOAN.FirstOrDefault(rs => rs.TargetLOT.NCID.Value?.ToString()?.Trim() == cdid?.ToString()?.Trim()) ?? new();
    //         return targetKQ;
    //     }

    //     public object? GetCaLamViec(object? cdid, int caindex)
    //     {
    //         object calamviec = "_";

    //         KQGCperCDOANofLOTKHSX targetKQ = dsachKQGCperCDOAN.FirstOrDefault(rs => rs.TargetLOT.NCID.Value?.ToString()?.Trim() == cdid?.ToString()?.Trim()) ?? new();

    //         calamviec = Common.GetElementOrNew(targetKQ.ResultCalamviecs, caindex).Ca ?? "_";

    //         return calamviec;
    //     }

    //     public object? GetNhanVien(object? cdid, int caindex)
    //     {
    //         object? nhanvien = null;

    //         KQGCperCDOANofLOTKHSX targetKQ = dsachKQGCperCDOAN.FirstOrDefault(rs => rs.TargetLOT.NCID.Value?.ToString()?.Trim() == cdid?.ToString()?.Trim()) ?? new();

    //         nhanvien = Common.GetElementOrNew(targetKQ.ResultCalamviecs, caindex).NhanVien ?? null;

    //         return nhanvien;
    //     }

    //     public object? GetNgayGC(object? cdid, int caindex)
    //     {
    //         object ngayGC = "_";

    //         KQGCperCDOANofLOTKHSX targetKQ = dsachKQGCperCDOAN.FirstOrDefault(rs => rs.TargetLOT.NCID.Value?.ToString()?.Trim() == cdid?.ToString()?.Trim()) ?? new();

    //         ngayGC = Common.GetElementOrNew(targetKQ.ResultCalamviecs, caindex).NgayGiaCong ?? "_";

    //         return ngayGC;
    //     }

    //     public object? GetSLOK(object? cdid, int caindex)
    //     {
    //         object slok = 0;

    //         KQGCperCDOANofLOTKHSX targetKQ = dsachKQGCperCDOAN.FirstOrDefault(rs => rs.TargetLOT.NCID.Value?.ToString()?.Trim() == cdid?.ToString()?.Trim()) ?? new();

    //         slok = Common.GetElementOrNew(targetKQ.ResultCalamviecs, caindex).SLOK ?? 0;

    //         return slok;
    //     }

    //     public object? GetSLNG(object? cdid, int caindex)
    //     {
    //         object slng = 0;

    //         KQGCperCDOANofLOTKHSX targetKQ = dsachKQGCperCDOAN.FirstOrDefault(rs => rs.TargetLOT.NCID.Value?.ToString()?.Trim() == cdid?.ToString()?.Trim()) ?? new();

    //         slng = Common.GetElementOrNew(targetKQ.ResultCalamviecs, caindex).SLNG ?? 0;

    //         return slng;
    //     }
    // }

    // Convert ID to stringValue

    private string GetColumnValueByID(object? id, string colName)
    {
        string value = string.Empty;

        if (colName == KetQuaGC.KQGCDBName.NVIDs)
        {
            string ids = id?.ToString()?.Trim() ?? string.Empty;

            if (!string.IsNullOrEmpty(ids))
            {
                List<string> nvids = ids.Split(",").ToList();

                value = string.Join(", ", nvids
                        .Select(nvid => (SQLServerServices.GetNhanVienbyID(nvid).GetThongTinNhanVienByName("Tên nhân viên")).GiaTri.Value?.ToString() ?? string.Empty)
                        .Where(name => !string.IsNullOrEmpty(name)))
                        .Trim(',');
            }
            else value = "_";
        }
        else if (colName == KetQuaGC.KQGCDBName.NGIDs)
        {
            string ids = id?.ToString()?.Trim() ?? string.Empty;

            if (!string.IsNullOrEmpty(ids))
            {
                List<string> ngids = ids.Split(",").ToList();

                value = string.Join(", ", ngids
                        .Select(ngid => SQLServerServices.GetNoiDungNGbyID(ngid))
                        .Where(name => !string.IsNullOrEmpty(name)))
                        .Trim(',');
            }
        }

        return value;
    }


    // Load kqgc per CDoan for dsachLOTKHSX
    private async Task<List<ResultPerLOTKHSX>> LoadKQGCperLOTofKHSX(List<KHSX_LOT> lOTs, object? khsxid)
    {
        List<ResultPerLOTKHSX> resultPerLOTKHSXs = new();

        foreach (var lot in lOTs)
        {
            ResultPerLOTKHSX resultPerLOTKHSX = new() { MaSP = TargetKHSX.TargetSanPham?.SP_MaSP.Value, MaQuanLyLot = lot.MaQuanLyLot.Value, SLperLOT = lot.SLLOT.Value };

            Dictionary<string, object?> pars = new();
            pars.Add($"{KHSX_LOT.DBName.KHSXID}", khsxid);
            pars.Add($"{KHSX_LOT.DBName.MaQuanLyLot}", lot.MaQuanLyLot.Value);

            // Get list CD per LOT ( 1 maquanlyLot with nhieu congdoan)
            (List<KHSX_LOT> dsCDOANperLOTKHSX, string error) = SQLServerServices.GetListLOT_khsx(pars);

            List<KQGCperCDOANofLOTKHSX> dsachKQGCperCDOAN = new();

            foreach (var (index, cdperlot) in dsCDOANperLOTKHSX.Select((item, idx) => (idx, item)))
            {
                // Get lastest kqgc
                var rekQGCperLOTofKHSX = dsachKQGCperCDOAN.LastOrDefault() ?? null;

                // Get kqgc targetLOT with all CDoan
                KQGCperCDOANofLOTKHSX kQGCperLOTofKHSX = new(cdperlot, rekQGCperLOTofKHSX);

                dsachKQGCperCDOAN.Add(kQGCperLOTofKHSX);
            }

            // Asign dsachKQGCperCDOAN for resultPerLOTKHSX
            resultPerLOTKHSX.DsachKQGCperCDOAN = dsachKQGCperCDOAN;

            // Asign IsDoneLastCDoan
            resultPerLOTKHSX.IsLastCDoanDone = resultPerLOTKHSX.DsachKQGCperCDOAN.LastOrDefault()?.DanhGia == 1;

            resultPerLOTKHSX.ThungTPhams = await LoadDSachThungTPhams(TargetKHSX.KHSXID.Value, resultPerLOTKHSX.MaQuanLyLot);

            int numofThungTP = resultPerLOTKHSX.ThungTPhams.Count();

            if (numofThungTP > MaxThungTP)
            {
                MaxThungTP = numofThungTP;
            }

            // Asign IsCreatedThungTP
            resultPerLOTKHSX.IsCreatedThungTP = resultPerLOTKHSX.ThungTPhams.Any();

            resultPerLOTKHSXs.Add(resultPerLOTKHSX);
        }

        return resultPerLOTKHSXs;
    }

    private async Task<List<ThungTPham>> LoadDSachThungTPhams(object? khsxid, object? maquanlylot)
    {
        return await Task.Run(() =>
        {
            var thungTPhams = SQLServerServices.GetListThungTPhams(new Dictionary<string, object?>() { { KHSX_LOT.DBName.KHSXID, khsxid }, { KHSX_LOT.DBName.MaQuanLyLot, maquanlylot } }).thungTPhams;

            return thungTPhams;
        });
    }

    // Open dialog DongThung
    private async Task OpenDialogAsignSPforNVL(ResultPerLOTKHSX? resultPerLOTKHSX)
    {
        if (resultPerLOTKHSX != null && resultPerLOTKHSX.IsLastCDoanDone)
        {
            var results = await DialogService.OpenAsync<DialogCreateThungTPham>(null, new Dictionary<string, object>() { { "TargetLotResult", resultPerLOTKHSX }, { "TargetKHSX", TargetKHSX } },
            new DialogOptions() { ShowTitle = false, Width = "50%", Height = "80%", Resizable = true, Draggable = true, ShowClose = false, Style = "background-color: while; border-radius: 10px; padding: 0px;" });

            if (results != null)
            {
                await LoadDSachLOTofKHSX(TargetKHSX.KHSXID.Value, 300);
            }
        }
    }

    private void NavigateToPhieuXDCD(ResultPerLOTKHSX selectRow)
    {
        _ = int.TryParse(TargetKHSX?.KHSXID.Value?.ToString(), out int khsxid) ? khsxid : 0;

        var url = $"phieu-xac-dinh-cong-doan?khsxid={khsxid}&lot={selectRow.MaQuanLyLot}";

        NavigationManager.NavigateTo(url);
    }

    // Datagrid selected changed event
    private void OnDatagridSelectChanged(IList<ResultPerLOTKHSX> selected)
    {
        DatagridSeleted = selected;

        var fistItemSelected = DatagridSeleted.FirstOrDefault();

        if (fistItemSelected != null)
        {
            SelectedRow = fistItemSelected;
        }
    }

    // Open QRIDLOT Image dialog
    private async Task OnOpenQR_ImageDialog(object content, string header)
    {
        await DialogService.OpenAsync<DialogQR_Image>(null, new Dictionary<string, object>() { { "CONTENT", content }, { "HEADER", header } },
        new DialogOptions() { CloseDialogOnEsc = true, CloseDialogOnOverlayClick = true, ShowTitle = true, Width = "contain", Height = "contain", Resizable = true, Draggable = true, ShowClose = true, Style = "background-color: while; border-radius: 10px; padding: 0px;" });
    }

    // Datagrid cellrender
    private void OnCellRender(DataGridCellRenderEventArgs<ResultPerLOTKHSX> args)
    {
        if (args.Column.Title.Contains("ID"))
        {
            args.Attributes.Add("style", $"font-weight: bold;");
        }
    }

    void HeaderFooterCellRender(DataGridCellRenderEventArgs<ResultPerLOTKHSX> args)
    {
        if (args.Column.Title == "STT")
        {
            args.Attributes.Add("colspan", 3);
        }
    }

    // Tooltip
    void ShowToolTip(ElementReference elementReference, TooltipPosition position, string content, int delay, int duration = 500)
    {
        TooltipOptions options = new TooltipOptions() { Position = position, CloseTooltipOnDocumentClick = true, Delay = delay, Style = "background-color: black" };

        TooltipService.Open(elementReference, content, options);
    }
}
