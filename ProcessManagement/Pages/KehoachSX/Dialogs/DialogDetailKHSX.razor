@using ProcessManagement.Commons
@using ProcessManagement.Models.KHO_NVL
@using ProcessManagement.Models.KHO_NVL.XuatKho
@using ProcessManagement.Models.KHSXs
@using ProcessManagement.Models.QLCDOAN
@using ProcessManagement.Pages.Manager_NVL.Dialogs
@using ProcessManagement.Pages.Manager_NguyenCong.Dialogs
@using ProcessManagement.Pages.Manager_SanPham.Dialogs
@using ProcessManagement.Services.SQLServer
@using Radzen.Blazor
@using Radzen
@using ProcessManagement.Models

@inject DialogService DialogService
@inject NotificationService NotificationService
@inject SQLServerServices SQLServerServices
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<RadzenStack Gap="0" Style="width: 100%; height: contain; background-color: white" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
    <RadzenRow Style="width: 100%;">
        <RadzenColumn Size="12" SizeMD="4" Style="width: 100%; height: contain;">
            <RadzenStack Style="height: 100%; width: 100%; padding-right: 15px;" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                <RadzenCard Variant="Variant.Flat" Style="width: 100%; height: 100%; padding: 15px; padding-top: 10px; border-radius: 10px;">
                    <RadzenStack Gap="0px" Style="width: 100%; height: 100%; padding: 0" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                        <RadzenStack Style="width: 100%; height: contain; border-bottom: var(--rz-grid-cell-border); padding-bottom: 10px" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                            <RadzenText Style="color: darkred; font-weight: 600; font-size: 16px; font-style: initial" Text="Thông tin kế hoạch sản xuất"></RadzenText>
                        </RadzenStack>
                        <RadzenStack Gap="10px" Style="width: 100%; height: contain; padding: 10px" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                            <!--LSX Code-->
                            <RadzenStack Gap="0" Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                <RadzenStack Style="width: 45%; height: contain; padding-right: 10px" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                                    <RadzenText Text="Mã KHSX" Style="font-size: 15px; font-weight: 600;"></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 55%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End">
                                    <RadzenText Text="@SelectKHSX?.MaLSX.Value?.ToString()" Style="font-size: 16px; font-weight: 600; height: contain; color: red"></RadzenText>
                                </RadzenStack>
                            </RadzenStack>

                            <!--Ngày tạo-->
                            <RadzenStack Gap="0" Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                <RadzenStack Style="width: 45%; height: contain; padding-right: 10px" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                                    <RadzenText Text="Ngày tạo" Style="font-size: 15px; font-weight: 600;"></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 55%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.End">
                                    <RadzenText Text="@SelectKHSX?.NgayTao.Value?.ToString()" Style="font-size: 16px; font-weight: 600; height: contain; color: rgba(58,71,77)"></RadzenText>
                                </RadzenStack>
                            </RadzenStack>

                            <!--Ten SP-->
                            <RadzenStack Gap="0" Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                <RadzenStack Style="width: 45%; height: contain; padding-right: 10px" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                                    <RadzenText Text="Tên sản phẩm" Style="font-size: 15px; font-weight: 600;"></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 55%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.End">
                                    <RadzenText Text="@SelectKHSX?.TargetSanPham?.SP_TenSanPham.Value?.ToString()" Style="font-size: 16px; font-weight: 600; height: contain; color: darkblue"></RadzenText>
                                </RadzenStack>
                            </RadzenStack>

                            <!--Ma SP-->
                            <RadzenStack Gap="0" Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                <RadzenStack Style="width: 45%; height: contain; padding-right: 10px" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                                    <RadzenText Text="Mã sản phẩm" Style="font-size: 15px; font-weight: 600;"></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 55%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.End">
                                    <RadzenText Text="@SelectKHSX?.TargetSanPham?.SP_MaSP.Value?.ToString()" Style="font-size: 16px; font-weight: 600; height: contain; color: darkblue"></RadzenText>
                                </RadzenStack>
                            </RadzenStack>

                            <!--Số lượng Sản phẩm SX-->
                            <RadzenStack Gap="0" Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                <RadzenStack Style="width: 45%; height: contain; padding-right: 10px" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                                    <RadzenText Text="Số lượng PO (sản phẩm)" Style="font-size: 15px; font-weight: 600;"></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 55%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End">
                                    <RadzenText Text="@($"{SelectKHSX?.SLSanPhamPO.Value?.ToString()} (SP)")" Style="font-size: 16px; font-weight: 600; height: contain; color: rgba(58,71,77)"></RadzenText>
                                </RadzenStack>
                            </RadzenStack>

                            <!--Tỉ lệ lỗi-->
                            <RadzenStack Gap="0" Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                <RadzenStack Style="width: 45%; height: contain; padding-right: 10px" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                                    <RadzenText Text="Tỉ lệ lỗi" Style="font-size: 15px; font-weight: 600;"></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 55%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End">
                                    <RadzenText Text="@($"{SelectKHSX?.TileLoi.Value?.ToString()} (%)")" Style="font-size: 16px; font-weight: 600; height: contain; color: rgba(58,71,77)"></RadzenText>
                                </RadzenStack>
                            </RadzenStack>

                            <RadzenStack Gap="10px" Style="width: 100%; height: contain; padding-top: 10px; padding-bottom: 10px; border-top: var(--rz-grid-cell-border); border-bottom: var(--rz-grid-cell-border)" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                <!--Định mức-->
                                <RadzenStack Gap="0" Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenStack Style="width: 45%; height: contain; padding-right: 10px" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                                        <RadzenText Text="Số lượng sản xuất" Style="font-size: 15px; font-weight: 600;"></RadzenText>
                                    </RadzenStack>
                                    <RadzenStack Style="width: 55%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End">
                                        <RadzenText Text="@($"{SelectKHSX?.SLSanPhamSX.Value?.ToString()} (SP)")" Style="font-size: 16px; font-weight: 600; height: contain; color: rgba(58,71,77)"></RadzenText>
                                    </RadzenStack>
                                </RadzenStack>

                                <!--Số lượng bổ sung-->
                                <RadzenStack Visible="@(ExTraPhieuXKhos.Count > 0)" Gap="0" Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenStack Style="width: 45%; height: contain; padding-right: 10px" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                                        <RadzenText Text="Số lượng bổ sung" Style="font-size: 15px; font-weight: 600; color: green"></RadzenText>
                                    </RadzenStack>
                                    <RadzenStack Style="width: 55%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End">
                                        <RadzenText Text="@($"+ {SLExTraPXKho} (SP)")" Style="font-size: 16px; font-weight: 700; height: contain; color: green"></RadzenText>
                                    </RadzenStack>
                                </RadzenStack>

                                <RadzenStack Visible="@(ExTraPhieuXKhos.Count > 0)" Gap="0" Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenStack Style="width: 45%; height: contain; padding-right: 10px" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                                        <RadzenText Text="Tổng cộng" Style="font-size: 15px; font-weight: 600; color: green"></RadzenText>
                                    </RadzenStack>
                                    <RadzenStack Style="width: 55%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End">
                                        @{
                                            int.TryParse(SelectKHSX?.SLSanPhamSX.Value?.ToString(), out int slsp);
                                        }
                                        <RadzenText Text="@($"{slsp + SLExTraPXKho} (SP)")" Style="font-size: 16px; font-weight: 700; height: contain; color: green"></RadzenText>
                                    </RadzenStack>
                                </RadzenStack>

                                <!--Số Lot-->
                                <RadzenStack Gap="0" Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenStack Style="width: 45%; height: contain; padding-right: 10px" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                                        <RadzenText Text="Số lượng lot" Style="font-size: 15px; font-weight: 600;"></RadzenText>
                                    </RadzenStack>
                                    <RadzenStack Style="width: 55%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End">
                                        <RadzenText Text="@($"{SelectKHSX?.DSLOT_KHSXs.Count()} (LOT)")" Style="font-size: 16px; font-weight: 600; height: contain; color: rgba(58,71,77)"></RadzenText>
                                    </RadzenStack>
                                </RadzenStack>

                                <!--Range ma quan ly-->
                                <RadzenStack Gap="0" Style="width: 100%; height: contain;" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenStack Style="width: 100%; height: contain; padding-right: 10px" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                                        <RadzenText Text="Mã quản lý LOT" Style="font-size: 15px; font-weight: 600;"></RadzenText>
                                    </RadzenStack>
                                    <RadzenStack Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End">
                                        <RadzenText Text="@($"{SelectKHSX?.DSLOT_KHSXs.FirstOrDefault()?.MaQuanLyLot.Value} --> {SelectKHSX?.DSLOT_KHSXs.LastOrDefault()?.MaQuanLyLot.Value}")"
                                                    Style="color: darkred; font-weight: 600; font-size: 16px"></RadzenText>
                                    </RadzenStack>
                                </RadzenStack>
                            </RadzenStack>

                            <RadzenStack Orientation="Orientation.Vertical" Style="height: contain; width: 100%; padding: 10px; padding-left: 0; padding-right: 0" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                @{
                                    if (PXKofKHSX.isReturnedNVL)
                                    {
                                        <RadzenButton Click="@(() => CopyToClipboard(PXKofKHSX.maPNKreturnNVL))" Icon="warning" Text="@($"NVL đã được trả lại vào kho - Mã phiếu: {PXKofKHSX.maPNKreturnNVL}")" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Danger" Variant="Variant.Filled" Shade="Shade.Darker"
                                                      Style="height: contain; width: 100%; font-size: 14px; " />
                                    }
                                    else
                                    {
                                        <!--Chua tao phieu xuat kho-->
                                        <RadzenStack Visible="@(PXKofKHSX.PXKID.Value == null)" Style="height: contain; width: 100%; padding: 0px" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                            <RadzenAlert Text="Chưa tạo phiếu xuất kho NVL cho KHSX" Style="width: contain; height: 100%; font-size: 14px; padding: 2px; padding-left: 10px; padding-right: 10px; margin: 0" AlertStyle="AlertStyle.Warning" AllowClose="false" Variant="Variant.Flat" Size="AlertSize.Small" Shade="Shade.Dark"></RadzenAlert>
                                        </RadzenStack>
                                        <!--Chua tao phieu xuat kho-->
                                        <RadzenButton Visible="@(PXKofKHSX.PXKID.Value == null)" Click="OnOpenDialogCreatePhieuXuatKho" Icon="add_circle" Text="Tạo phiếu xuất kho NVL" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Primary" Variant="Variant.Filled" Shade="Shade.Dark"
                                                      Style="height: contain; width: 100%; font-size: 14px;" />

                                        <!--Da tao phieu xuat kho/ Da chi dinh vi tri NVL/ Chua hoan thanh xuat kho-->
                                        <RadzenStack Visible="@(PXKofKHSX.PXKID.Value != null && PXKofKHSX.isChiDinhDuSLXuatKho && !PXKofKHSX.isPXKDoneXuatKho)" Style="height: contain; width: 100%; padding: 0px" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                            <RadzenAlert Text="Chưa hoàn thành xuất kho NVL cho KHSX" Style="width: contain; height: 100%; font-size: 14px; padding: 2px; padding-left: 10px; padding-right: 10px; margin: 0" AlertStyle="AlertStyle.Warning" AllowClose="false" Variant="Variant.Flat" Size="AlertSize.Small" Shade="Shade.Dark"></RadzenAlert>
                                        </RadzenStack>
                                        <!--Da tao phieu xuat kho/ Da chi dinh vi tri NVL/ Chua hoan thanh xuat kho-->
                                        <RadzenButton Visible="@(PXKofKHSX.PXKID.Value != null && PXKofKHSX.isChiDinhDuSLXuatKho && !PXKofKHSX.isPXKDoneXuatKho)" Icon="upload" Click="@(() => NavigateToHandlePhieuXuatKho(PXKofKHSX.PXKID.Value))" Text="@($"Tiến hành xuất kho NVL ({PXKofKHSX.MaPhieuXK.Value?.ToString()})")" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Primary" Variant="Variant.Filled" Shade="Shade.Dark"
                                                      Style="height: contain; width: 100%; font-size: 14px;" />

                                        <!--Da tao phieu xuat kho/ Da chi dinh vi tri NVL/ Da hoan thanh xuat kho-->
                                        <RadzenStack Visible="@(PXKofKHSX.PXKID.Value != null && PXKofKHSX.isChiDinhDuSLXuatKho && PXKofKHSX.isPXKDoneXuatKho)" Style="height: contain; width: 100%; padding: 0px" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                            <RadzenAlert Text="Đã xuất kho NVL cho kế hoạch sản xuất" Style="width: contain; height: 100%; font-size: 14px; padding: 2px; padding-left: 10px; padding-right: 10px; margin: 0" AlertStyle="AlertStyle.Success" AllowClose="false" Variant="Variant.Flat" Size="AlertSize.Small" Shade="Shade.Light"></RadzenAlert>
                                        </RadzenStack>
                                        <!--Da tao phieu xuat kho/ Da tao phieu xuat kho/ Da hoan thanh xuat kho -->
                                        <RadzenButton Visible="@(PXKofKHSX.PXKID.Value != null && PXKofKHSX.isChiDinhDuSLXuatKho && PXKofKHSX.isPXKDoneXuatKho)" Icon="visibility" Click="@(() => OnOpenDialogXemPhieuXuatKho("Xem phiếu xuất kho NVL", PXKofKHSX))" Text="@($"Xem phiếu xuất kho NVL {PXKofKHSX.MaPhieuXK.Value?.ToString()}")" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Primary" Variant="Variant.Filled" Shade="Shade.Dark"
                                                      Style="height: contain; width: 100%; font-size: 14px;" />


                                        if (ExTraPhieuXKhos.Any())
                                        {
                                            foreach (var extPXK in ExTraPhieuXKhos)
                                            {
                                                <!--Da tao phieu xuat kho/ Da chi dinh vi tri NVL/ Chua hoan thanh xuat kho-->
                                                <RadzenStack Visible="@(extPXK.PXKID.Value != null && extPXK.isChiDinhDuSLXuatKho && extPXK.isPhieuBSungAddedLOTNVL && !extPXK.isPXKDoneXuatKho)" Style="height: contain; width: 100%; padding: 0px" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                    <RadzenAlert Text="Chưa hoàn thành bổ sung NVL cho KHSX" Style="width: contain; height: 100%; font-size: 14px; padding: 2px; padding-left: 10px; padding-right: 10px; margin: 0" AlertStyle="AlertStyle.Warning" AllowClose="false" Variant="Variant.Flat" Size="AlertSize.Small" Shade="Shade.Dark"></RadzenAlert>
                                                </RadzenStack>
                                                <!--Da tao phieu xuat kho/ Da chi dinh vi tri NVL/ Chua hoan thanh xuat kho-->
                                                <RadzenButton Visible="@(extPXK.PXKID.Value != null && extPXK.isChiDinhDuSLXuatKho && extPXK.isPhieuBSungAddedLOTNVL && !extPXK.isPXKDoneXuatKho)" Icon="upload" Click="@(() => NavigateToHandlePhieuXuatKho(extPXK.PXKID.Value))"
                                                              Text="@($"Tiến hành bổ sung NVL ({extPXK.MaPhieuXK.Value?.ToString()})")" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Primary" Variant="Variant.Filled" Shade="Shade.Dark"
                                                              Style="height: contain; width: 100%; font-size: 14px;" />

                                                <!--Da tao phieu xuat kho/ Da chi dinh vi tri NVL/ Da hoan thanh xuat kho-->
                                                <RadzenStack Visible="@(extPXK.PXKID.Value != null && extPXK.isChiDinhDuSLXuatKho && extPXK.isPXKDoneXuatKho)" Style="height: contain; width: 100%; padding: 0px" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                    <RadzenAlert Text="Đã xuất kho NVL cho kế hoạch sản xuất" Style="width: contain; height: 100%; font-size: 14px; padding: 2px; padding-left: 10px; padding-right: 10px; margin: 0" AlertStyle="AlertStyle.Success" AllowClose="false" Variant="Variant.Flat" Size="AlertSize.Small" Shade="Shade.Light"></RadzenAlert>
                                                </RadzenStack>
                                                <!--Da tao phieu xuat kho/ Da tao phieu xuat kho/ Da hoan thanh xuat kho -->
                                                <RadzenButton Visible="@(extPXK.PXKID.Value != null && extPXK.isChiDinhDuSLXuatKho && extPXK.isPXKDoneXuatKho)" Icon="visibility" Click="@(() => OnOpenDialogXemPhieuXuatKho("Xem phiếu bổ sung NVL", extPXK))"
                                                              Text="@($"Xem phiếu bổ sung NVL {extPXK.MaPhieuXK.Value?.ToString()}")" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Primary" Variant="Variant.Filled" Shade="Shade.Dark"
                                                              Style="height: contain; width: 100%; font-size: 14px;" />

                                                <RadzenStack Visible="@(extPXK.PXKID.Value != null && extPXK.isChiDinhDuSLXuatKho && !extPXK.isPXKDoneXuatKho && !extPXK.isPhieuBSungAddedLOTNVL)" Style="height: contain; width: 100%; padding: 0px" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                    <RadzenAlert Text="Chưa tạo mã quản lý cho NVL bổ sung" Style="width: contain; height: 100%; font-size: 14px; padding: 2px; padding-left: 10px; padding-right: 10px; margin: 0" AlertStyle="AlertStyle.Warning" AllowClose="false" Variant="Variant.Flat" Size="AlertSize.Small" Shade="Shade.Light"></RadzenAlert>
                                                </RadzenStack>

                                                <RadzenButton Visible="@(extPXK.PXKID.Value != null && extPXK.isChiDinhDuSLXuatKho && !extPXK.isPXKDoneXuatKho && !extPXK.isPhieuBSungAddedLOTNVL)" Icon="add"
                                                              Text="@($"Tạo mã quản lý cho NVL bổ sung")" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Primary" Variant="Variant.Filled" Shade="Shade.Lighter"
                                                              Click="@(async() => await OnOpenDialogGenerateLotforNVLbosung(extPXK))" Style="height: contain; width: 100%; font-size: 14px; font-weight: 600" />
                                            }
                                        }

                                        <!-- Bo sung NVL cho KHSX -->
                                        <RadzenButton Visible="@(ExTraPhieuXKhos.All(expxk => expxk.isPXKDoneXuatKho && expxk.isChiDinhDuSLXuatKho && expxk.isPhieuBSungAddedLOTNVL) && PXKofKHSX.PXKID.Value != null && PXKofKHSX.isChiDinhDuSLXuatKho && PXKofKHSX.isPXKDoneXuatKho)" Icon="add"
                                                      Text="Bổ sung nguyên vật liệu" Click="OnOpenDialogCreatePhieuBoSungNVL"
                                                      Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Primary" Variant="Variant.Filled" Shade="Shade.Lighter"
                                                      Style="height: contain; width: 100%; font-size: 14px; font-weight: 600" />
                                    }

                                }
                            </RadzenStack>
                            <!--Danh sach nguyen lieu da chon-->
                            <RadzenStack Gap="10px" Orientation="Orientation.Vertical" Style=" height: contain; width: 100%; padding: 0px;" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Start">
                                <RadzenCard Variant="Variant.Filled" Style="height: contain; width: 100%; padding: 10px;">
                                    <RadzenStack Gap="10px" Orientation="Orientation.Vertical" Style=" height: contain; width: 100%; padding: 0px; " AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                        <RadzenStack Gap="20px" Style="height: contain; width: 100%; background-color: var(--rz-success-lighter); padding: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                            <RadzenText Text="Nguyên vật liệu của kế hoạch sản xuất" Style="color: green; font-weight: 500; font-size: 16px"></RadzenText>
                                        </RadzenStack>
                                        <RadzenStack Gap="20px" Style="height: contain; width: 100%; padding: 10px; padding-top: 0px; padding-bottom: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                            <RadzenText Text="@($"Số lượng xuất kho:")" Style="color: black; font-weight: 600; font-size: 16px"></RadzenText>
                                            <RadzenText Text="@($"{SelectKHSX?.DSachNVLofKHSXs?.Sum(nvl => (int.TryParse(nvl.DinhMuc.Value?.ToString(), out int dm) ? dm : 0)) ?? 0} (PCS)")" Style="color: black; font-weight: 600; font-size: 16px"></RadzenText>
                                        </RadzenStack>
                                        <RadzenRow Gap="10px" Style="width: 100%; height: contain;">
                                            <RadzenColumn Size="12" SizeMD="12" Style="width: 100%; height: 100%;">
                                                <RadzenStack Gap="10px" Orientation="Orientation.Vertical" Style="height: 100%; width: 100%;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                    <RadzenStack Gap="0" Orientation="Orientation.Vertical" Style=" height: contain; width: 100%;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                        <RadzenCard Variant="Variant.Flat" Style="width: 100%; height: 100%; padding: 5px; padding-right: 0">
                                                            <RadzenStack Style="width: 100%; height: contain" Gap="10px" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                <RadzenStack Style="width: 5%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                    <RadzenText Text="#" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                                                </RadzenStack>
                                                                <RadzenStack Style="width: 40%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                    <RadzenText Text="Tên vật liệu" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                                                </RadzenStack>
                                                                <RadzenStack Style="width: 30%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                    <RadzenText Text="Số lượng" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                                                </RadzenStack>
                                                                <RadzenStack Style="width: 30%; height: contain; " AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                    <RadzenText Text="Ngày xuất" Style="font-size: 14px; font-weight: 600; height: contain;"></RadzenText>
                                                                </RadzenStack>
                                                            </RadzenStack>
                                                        </RadzenCard>
                                                    </RadzenStack>

                                                    <RadzenStack Gap="10px" Orientation="Orientation.Vertical" Style=" height: 90%; width: 100%;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                        @foreach (var nvlinfor in nVLInfors)
                                                        {
                                                            <RadzenCard Variant="Variant.Outlined" Style="width: 100%; height: contain; padding: 5px; padding-right: 0px; background-color: white">
                                                                <RadzenStack Style="width: 100%; height: 100%" Gap="10px" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                    <RadzenStack Style="width: 5%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                        <RadzenText Text="@((nVLInfors.IndexOf(nvlinfor) + 1).ToString())" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                                                    </RadzenStack>
                                                                    <RadzenStack Style="width: 40%; height: contain; border-left: var(--rz-grid-cell-border); border-right: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                        <RadzenText Text="@($"{nvlinfor.NVLofPXK.TargetNgLieu.TenNVL.Value}")" Style="color: darkblue; font-weight: 600; font-size: 14px"></RadzenText>
                                                                    </RadzenStack>
                                                                    <RadzenStack Style="width: 30%; height: contain; " Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                        <RadzenText Text="@($"{nvlinfor.NVLofPXK.NVLXKSoLuongAll.Value} (pcs)")" Style="font-size: 16px; font-weight: 600; height: contain; color: rgba(58,71,77)"></RadzenText>
                                                                    </RadzenStack>
                                                                    <RadzenStack Style="width: 30%; height: contain; border-left: var(--rz-grid-cell-border);" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                        <RadzenText Text="@($"{nvlinfor.LXK.NgayXuatKho.Value}")" onclick=@(() => OnOpenDialogXemPhieuXuatKho("Thông tin xuất kho nguyên vật liệu", nvlinfor.TargetPXK)) Style="font-size: 14px; font-weight: 600; height: contain; color: Highlight; text-decoration: underline; cursor: pointer"></RadzenText>
                                                                    </RadzenStack>
                                                                </RadzenStack>
                                                            </RadzenCard>
                                                        }

                                                    </RadzenStack>
                                                </RadzenStack>
                                            </RadzenColumn>
                                        </RadzenRow>
                                    </RadzenStack>
                                </RadzenCard>
                            </RadzenStack>
                        </RadzenStack>
                    </RadzenStack>
                </RadzenCard>
            </RadzenStack>
        </RadzenColumn>
        <RadzenColumn Size="12" SizeMD="5" Style="width: 100%; height: contain; padding-top: 40px">
            <RadzenStack Style="height: 5%; width: 100%; padding-bottom: 5px" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                <RadzenText Text="@($"Danh sách LOT nguyên vật liệu ({SelectKHSX?.DSLOT_KHSXs.Count ?? 0} LOT)")" Style="color: black; font-style: italic; font-weight: 600; font-size: 16px"></RadzenText>
            </RadzenStack>
            <RadzenStack Gap="10px" Orientation="Orientation.Vertical" Style=" height: 95%; width: 100%; padding: 10px; border-top: var(--rz-grid-cell-border);" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Start">
                <!--Lot detail-->
                <RadzenStack Visible="false" Gap="10px" Orientation="Orientation.Vertical" Style="height: contain; width: 100%;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                    <RadzenStack Gap="0" Orientation="Orientation.Vertical" Style=" height: contain; width: 100%;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                        <RadzenCard Variant="Variant.Flat" Style="width: 100%; height: 100%; padding: 5px; padding-right: 0px;">
                            <RadzenStack Style="width: 100%; height: contain" Gap="0" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                <RadzenStack Style="width: 30%; height: contain; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenText Text="Ngày nhập kho" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 25%; height: contain; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenText Text="Lot chẳn" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 25%; height: contain; padding-left: 10px; padding-right: 10px" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenText Text="Lot lẻ" Style="color: black; font-size: 14px; font-weight: 600; height: contain;"></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 20%; height: contain; " AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenText Text="Tổng" Style="color: black; font-size: 14px; font-weight: 600; height: contain;"></RadzenText>
                                </RadzenStack>
                            </RadzenStack>
                        </RadzenCard>
                    </RadzenStack>

                    <RadzenStack Gap="10px" Orientation="Orientation.Vertical" Style=" height: 90%; width: 100%;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                        @foreach (var lotkhsx in DetailLotKHSXes)
                        {
                            <RadzenCard Variant="Variant.Outlined" Style="width: 100%; height: contain; padding: 5px; padding-right: 0px; background-color: white">
                                <RadzenStack Style="width: 100%; height: 100%" Gap="10px" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenStack Style="width: 30%; height: contain; border-right: var(--rz-grid-cell-border); padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                        <RadzenText Text="@lotkhsx.NgayNhapKho?.ToString()" Style="color: darkblue; font-weight: 600; font-size: 14px"></RadzenText>
                                    </RadzenStack>
                                    <RadzenStack Gap="10px" Style="width: 25%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                        <RadzenText Visible="@(lotkhsx.SLLotChan > 0)" Text="@($"{lotkhsx.SLLotChan.ToString()} LOT")" Style="font-size: 14px; font-weight: 600; height: contain; color: rgba(58,71,77)"></RadzenText>
                                        <RadzenText Visible="@(lotkhsx.SLLotChan > 0)" Text="@($"{lotkhsx.SLperLotChan.ToString()} PCS")" Style="font-size: 14px; font-weight: 600; height: contain; color: rgba(58,71,77)"></RadzenText>
                                    </RadzenStack>
                                    <RadzenStack Gap="10px" Style="width: 25%; height: contain; border-left: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                        <RadzenText Visible="@(lotkhsx.SLLotLe > 0)" Text="@($"{lotkhsx.SLLotLe.ToString()} LOT")" Style="font-size: 14px; font-weight: 600; height: contain; color: rgba(58,71,77)"></RadzenText>
                                        <RadzenText Visible="@(lotkhsx.SLLotLe > 0)" Text="@($"{lotkhsx.SLperLotLe.ToString()} PCS")" Style="font-size: 14px; font-weight: 600; height: contain; color: rgba(58,71,77)"></RadzenText>
                                    </RadzenStack>
                                    <RadzenStack Gap="10px" Style="width: 20%; height: contain; border-left: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                        <RadzenText Text="@($"{(lotkhsx.SLLotChan*lotkhsx.SLperLotChan + lotkhsx.SLLotLe*lotkhsx.SLperLotLe).ToString()} PCS")" Style="font-size: 14px; font-weight: 600; height: contain; color: rgba(58,71,77)"></RadzenText>
                                    </RadzenStack>
                                </RadzenStack>
                            </RadzenCard>
                        }
                    </RadzenStack>
                </RadzenStack>

                <!--LOT List-->
                <RadzenCard Variant="Variant.Flat" Style="width: 100%; height: 100%; padding: 5px;">
                    <RadzenStack Gap="0" Orientation="Orientation.Vertical" Style=" height: 100%; width: 100%;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                        <RadzenStack Gap="0" Orientation="Orientation.Vertical" Style=" height: contain; width: 100%; padding-right: 10px" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                            <RadzenCard Variant="Variant.Flat" Style="width: 100%; height: 100%; padding: 5px;">
                                <RadzenStack Style="width: 100%; height: contain;" Gap="0" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenStack Style="width: 5%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                        <RadzenText Text="#" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                    </RadzenStack>
                                    <RadzenStack Style="width: 35%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                        <RadzenText Text="Mã quản lý" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                    </RadzenStack>
                                    <RadzenStack Style="width: 15%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                        <RadzenText Text="Số lượng" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                    </RadzenStack>
                                    <RadzenStack Style="width: 15%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                        <RadzenText Text="Nguyên liệu" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                    </RadzenStack>
                                    <RadzenStack Style="width: 15%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                        <RadzenText Text="Nhập kho" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                    </RadzenStack>
                                    <RadzenStack Style="width: 15%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                        <RadzenText Text="Xuất kho" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                    </RadzenStack>
                                </RadzenStack>
                            </RadzenCard>
                        </RadzenStack>

                        <RadzenStack Gap="10px" Orientation="Orientation.Vertical" Style=" height: contain; width: 100%; max-height: 500px; overflow-y: scroll" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                            @{
                                List<KHSX_LOT>? listlotnvl;

                                if (TargetMQLLot == null)
                                {
                                    listlotnvl = SelectKHSX?.DSLOT_KHSXs;
                                }
                                else listlotnvl = TargetKHSX_LOTs;
                            }
                            @if (listlotnvl != null)
                            {
                                @foreach (var lot in listlotnvl)
                                {
                                    <RadzenCard Variant="Variant.Outlined" Style="width: 100%; height: 100%; padding: 5px; background-color: white">
                                        <RadzenStack Style="width: 100%; height: contain" Gap="10px" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                            <RadzenStack Style="width: 5%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                <RadzenText Text="@((listlotnvl.IndexOf(lot) + 1).ToString())" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                            </RadzenStack>
                                            <RadzenStack Style="width: 35%; height: contain; background-color: beige" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                <RadzenText Text="@lot.MaQuanLyLot.Value?.ToString()" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                            </RadzenStack>
                                            <RadzenStack Style="width: 15%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                <RadzenText Text="@($"{lot.SLLOT.Value} (pcs)")" Style="color: darkgreen; font-weight: 600; font-size: 14px"></RadzenText>
                                            </RadzenStack>
                                            <RadzenStack Style="width: 15%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                <RadzenText Text="@($"{lot.TargetNVL.MaNVL.Value}")" Style="color: darkblue; font-weight: 600; font-size: 14px"></RadzenText>
                                            </RadzenStack>
                                            <RadzenStack Style="width: 15%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                <RadzenText Text="@($"{lot.NgayNhapKho.Value}")" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                            </RadzenStack>
                                            <RadzenStack Style="width: 15%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                <RadzenText Text="@($"{lot.NgayXuatKho.Value}")" Style="color: darkred; font-weight: 600; font-size: 14px"></RadzenText>
                                            </RadzenStack>
                                        </RadzenStack>
                                    </RadzenCard>
                                }
                            }
                        </RadzenStack>
                    </RadzenStack>
                </RadzenCard>
            </RadzenStack>
        </RadzenColumn>
        <RadzenColumn Size="12" SizeMD="3" Style="width: 100%; height: contain; padding-top: 40px">
            <RadzenStack Style="height: 5%; width: 100%; padding-bottom: 5px" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                <RadzenText Text="@($"Nguyên công sản xuất ({SelectKHSX?.DSachCongDoans.Count ?? 0})")" Style="color: black; font-style: italic; font-weight: 600; font-size: 16px"></RadzenText>
            </RadzenStack>
            <RadzenStack Gap="10px" Orientation="Orientation.Vertical" Style=" height: 95%; width: 100%; padding: 10px; border-top: var(--rz-grid-cell-border);" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Start">
                <RadzenCard Variant="Variant.Filled" Style="height: contain; width: 100%; padding: 10px;">
                    <RadzenStack Gap="10px" Orientation="Orientation.Vertical" Style=" height: 100%; width: 100%; padding: 0px; " AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                        <RadzenStack Visible="@(SelectKHSX?.TileLoi.Value != null && TargetMQLLot == null)" Gap="20px" Style="height: contain; width: 100%; background-color: var(--rz-success-lighter); padding: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                            <RadzenText Text="Tỉ lệ lỗi cho phép: " Style="color: green; font-weight: 500; font-size: 16px"></RadzenText>
                            <RadzenText Text="@($"{SelectKHSX?.TileLoi.Value?.ToString()} %")" Style="color: darkred; font-weight: 500; font-size: 16px"></RadzenText>
                            <RadzenText Text="~" Style="color: darkred; font-weight: 500; font-size: 16px"></RadzenText>
                            @{
                                int slloikhsx = (int.TryParse(SelectKHSX?.SLSanPhamSX.Value?.ToString(), out int slsx) ? slsx : 0) - (int.TryParse(SelectKHSX?.SLSanPhamPO.Value?.ToString(), out int slpo) ? slpo : 0);
                            }
                            <RadzenText Text="@($"{slloikhsx} (sản phẩm)")" Style="color: darkred; font-weight: 500; font-size: 16px"></RadzenText>
                        </RadzenStack>
                        <RadzenRow Gap="10px" Style="width: 100%; height: 80%;">
                            <RadzenColumn Size="12" SizeMD="12" Style="width: 100%; height: 100%;">
                                <RadzenStack Visible="@(TargetMQLLot == null)" Gap="10px" Orientation="Orientation.Vertical" Style="height: contain; width: 100%;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                    <RadzenStack Gap="0" Orientation="Orientation.Vertical" Style=" height: contain; width: 100%;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                        <RadzenCard Variant="Variant.Flat" Style="width: 100%; height: 100%; padding: 5px;">
                                            <RadzenStack Style="width: 100%; height: contain" Gap="0" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                <RadzenStack Style="width: 5%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                    <RadzenText Text="#" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                                </RadzenStack>
                                                <RadzenStack Style="width: 50%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                    <RadzenText Text="Nguyên công" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                                </RadzenStack>
                                                <RadzenStack Style="width: 45%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                    <RadzenText Text="SL lỗi cho phép" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                                </RadzenStack>
                                            </RadzenStack>
                                        </RadzenCard>
                                    </RadzenStack>

                                    <RadzenStack Gap="10px" Orientation="Orientation.Vertical" Style=" height: contain; width: 100%;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                        @{
                                            var dsnguyencong = SelectKHSX?.DSachCongDoans;
                                        }
                                        @if (dsnguyencong != null)
                                        {
                                            @foreach (var nguyencong in dsnguyencong)
                                            {
                                                <RadzenCard Variant="Variant.Outlined" Style="width: 100%; height: contain; padding: 5px; padding-right: 0px; background-color: white">
                                                    <RadzenStack Style="width: 100%; height: 100%" Gap="10px" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                        <RadzenStack Style="width: 5%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                            <RadzenText Text="@((dsnguyencong.IndexOf(nguyencong) + 1).ToString())" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                                        </RadzenStack>
                                                        <RadzenStack Style="width: 50%; height: contain; border-left: var(--rz-grid-cell-border); border-right: var(--rz-grid-cell-border); padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                            <RadzenText Text="@nguyencong.TenCongDoan.Value?.ToString()" Style="color: darkblue; font-weight: 600; font-size: 14px"></RadzenText>
                                                        </RadzenStack>
                                                        <RadzenStack Style="width: 45%; height: contain; " Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                            <RadzenText Text="@($"{nguyencong.SoluongNG?.Value?.ToString()} (pcs)")" Style="font-size: 16px; font-weight: 600; height: contain; color: rgba(58,71,77)"></RadzenText>
                                                        </RadzenStack>
                                                    </RadzenStack>
                                                </RadzenCard>
                                            }
                                        }
                                    </RadzenStack>
                                </RadzenStack>

                                <RadzenStack Visible="@(TargetMQLLot != null)" Gap="10px" Orientation="Orientation.Vertical" Style="height: 100%; width: 100%;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                    <RadzenStack Gap="0" Orientation="Orientation.Vertical" Style=" height: contain; width: 100%;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                        <RadzenCard Variant="Variant.Flat" Style="width: 100%; height: 100%; padding: 5px;">
                                            <RadzenStack Style="width: 100%; height: contain" Gap="0" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                <RadzenStack Style="width: 5%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                    <RadzenText Text="#" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                                </RadzenStack>
                                                <RadzenStack Style="width: 50%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                    <RadzenText Text="Nguyên công" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                                </RadzenStack>
                                                <RadzenStack Style="width: 20%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                    <RadzenText Text="SL OK" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                                </RadzenStack>
                                                <RadzenStack Style="width: 20%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                    <RadzenText Text="SL NG" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                                </RadzenStack>
                                            </RadzenStack>
                                        </RadzenCard>
                                    </RadzenStack>

                                    <RadzenStack Gap="10px" Orientation="Orientation.Vertical" Style=" height: contain; width: 100%;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                        @{
                                            var dsnguyencong = SelectKHSX?.DSachCongDoans;
                                        }
                                        @if (dsnguyencong != null)
                                        {
                                            @foreach (var nguyencong in dsnguyencong)
                                            {
                                                <RadzenCard Variant="Variant.Outlined" Style="width: 100%; height: contain; padding: 5px; padding-right: 0px; background-color: white">
                                                    <RadzenStack Style="width: 100%; height: 100%" Gap="10px" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                        @{
                                                            var targetNC = ResultPerLOTKHSXes.FirstOrDefault()?.DsachKQGCperCDOAN.Where(cd => cd.TargetLOT.NCID.Value?.ToString() == nguyencong.NCID.Value?.ToString()).ToList();
                                                        }
                                                        <RadzenStack Style="width: 5%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                            <RadzenText Text="@((dsnguyencong.IndexOf(nguyencong) + 1).ToString())" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                                        </RadzenStack>
                                                        <RadzenStack Style="width: 50%; height: contain; border-left: var(--rz-grid-cell-border); border-right: var(--rz-grid-cell-border); padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                            <RadzenText Text="@nguyencong.TenCongDoan.Value?.ToString()" Style="color: darkblue; font-weight: 600; font-size: 14px"></RadzenText>
                                                        </RadzenStack>
                                                        <RadzenStack Style="width: 20%; height: contain; border-right: var(--rz-grid-cell-border); padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                            <RadzenText Text="@($"{targetNC?.Sum(rs => rs.TotalOK)} (pcs)")" Style="font-size: 16px; font-weight: 600; height: contain; color: rgba(58,71,77)"></RadzenText>
                                                        </RadzenStack>
                                                        <RadzenStack Style="width: 20%; height: contain; " Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                            <RadzenText Text="@($"{targetNC?.Sum(rs => rs.TotalNG)} (pcs)")" Style="font-size: 16px; font-weight: 600; height: contain; color: rgba(58,71,77)"></RadzenText>
                                                        </RadzenStack>
                                                    </RadzenStack>
                                                </RadzenCard>
                                            }
                                        }
                                    </RadzenStack>
                                </RadzenStack>
                            </RadzenColumn>
                        </RadzenRow>
                    </RadzenStack>
                </RadzenCard>
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
    <RadzenStack Visible="@(IsNotDialog == false)" Gap="10px" Style="width: 100%; padding-top: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End">
        <RadzenButton Style="width: contain; color: white; background-color: darkred" Icon="close" Text="Thoát" Size="ButtonSize.Small" Variant="Variant.Flat" Click="@(() => DialogService.Close())" />
    </RadzenStack>
</RadzenStack>

@code {
    [Parameter]
    public KHSX? SelectKHSX { get; set; }

    [Parameter]
    public bool IsNotDialog { get; set; } = false;

    [Parameter]
    public KHSX_LOT? TargetMQLLot { get; set; }

    private List<KHSX_LOT> TargetKHSX_LOTs = new();

    private List<ResultPerLOTKHSX> ResultPerLOTKHSXes = new();

    private PhieuXuatKho PXKofKHSX = new();

    private List<PhieuXuatKho> ExTraPhieuXKhos = new(); // danh sach PXK bo sung

    private List<DetailLotKHSX> DetailLotKHSXes = new();

    private int SLExTraPXKho = 0;

    private class NVLInfor
    {
        public PhieuXuatKho TargetPXK { get; set; } = new();
        public NVLofPhieuXuatKho NVLofPXK { get; set; } = new();
        public LenhXuatKho LXK { get; set; } = new();
    }

    private List<NVLInfor> nVLInfors = new();

    protected async override Task OnInitializedAsync()
    {
        await ReloadCurrentKHSX(SelectKHSX?.KHSXID.Value);

        DetailLotKHSXes = GetListDetailLotKHSXs();

        SLExTraPXKho = ExTraPhieuXKhos?.Sum(pxk => pxk.DSNVLofPXKs.Sum(nvl => int.TryParse(nvl.NVLXKSoLuongAll.Value?.ToString(), out int dm) ? dm : 0)) ?? 0;

        await base.OnInitializedAsync();
    }

    protected async override Task OnParametersSetAsync()
    {
        if (PXKofKHSX.PXKID.Value == null)
        {
            PXKofKHSX = SQLServerServices.GetPhieuXuatKhoByID(SelectKHSX?.PXKID.Value);

            // BSUNGNVL
            Dictionary<string, object?> pars = new Dictionary<string, object?>() { { Common.KHSXID, SelectKHSX?.KHSXID.Value } };
            pars.Add(Common.IsPhieuBoSungNVL, 1);

            ExTraPhieuXKhos = SQLServerServices.GetListPhieuXuatKhos(pars).phieuxuatkhos;

            // if (ExTraPhieuXKhos.Any())
            // {
            //     ExTraPhieuXKhos.RemoveAll(pxk => pxk.MaPhieuXK.Value?.ToString()?.Trim() == PXKofKHSX.MaPhieuXK.Value?.ToString()?.Trim());
            // }
            // BSUNGNVL
        }

        await base.OnParametersSetAsync();
    }

    private List<DetailLotKHSX> GetListDetailLotKHSXs()
    {
        List<object?> nvlids = SelectKHSX?.DSLOT_KHSXs.DistinctBy(lot => lot.NVLID.Value?.ToString()).Select(rs => rs.NVLID.Value).ToList() ?? new();

        List<object?> khsxlotids = new();

        foreach (var nvlid in nvlids)
        {
            var results = SelectKHSX?.DSLOT_KHSXs.Where(lot => lot.NVLID.Value?.ToString() == nvlid?.ToString()).ToList();

            if (results != null && results.Any())
            {
                var nnks = results.DistinctBy(lot => lot.NgayNhapKho.Value?.ToString()).Select(rs => rs.KHSXLOTID.Value).ToList() ?? new();

                if (nnks != null && nnks.Any())
                {
                    khsxlotids.AddRange(nnks);
                }
            }
        }

        List<object?> ngaynhapkhos = SelectKHSX?.DSLOT_KHSXs.DistinctBy(lot => lot.NgayNhapKho.Value?.ToString()).Select(rs => rs.NgayNhapKho.Value).ToList() ?? new();



        _ = int.TryParse(SelectKHSX?.SLperLotChan.Value?.ToString(), out int slperlotchan) ? slperlotchan : 0;

        List<DetailLotKHSX> detailLotKHSXes = new();

        foreach (var nnk in ngaynhapkhos)
        {
            if (nnk != null)
            {
                var results = SelectKHSX?.DSLOT_KHSXs.Where(lot => lot.NgayNhapKho.Value?.ToString() == nnk.ToString()).ToList();

                if (results != null)
                {
                    int sllotchan = results.Where(lot => (int.TryParse(lot.SLLOT.Value?.ToString(), out int sllot) ? sllot : 0) == slperlotchan).Count();

                    int sllotle = results.Count() - sllotchan;

                    int sllperlotle = results.Sum(lot => (int.TryParse(lot.SLLOT.Value?.ToString(), out int sllot) ? sllot : 0)) - sllotchan * slperlotchan;

                    DetailLotKHSX detailLotKHSX = new()
                        {
                            NgayNhapKho = nnk,
                            SLLotChan = sllotchan,
                            SLLotLe = sllotle,
                            SLperLotChan = slperlotchan,
                            SLperLotLe = sllperlotle
                        };

                    detailLotKHSXes.Add(detailLotKHSX);
                }
            }
        }

        return detailLotKHSXes;
    }

    private async Task ReloadCurrentKHSX(object? currentKHSXid)
    {
        SelectKHSX = SQLServerServices.GetKHSXbyID(currentKHSXid);

        if (TargetMQLLot != null) // Inmode search with mqllot
        {
            TargetKHSX_LOTs = SelectKHSX.DSLOT_KHSXs.Where(lot => lot.MaQuanLyLot.Value?.ToString()?.Trim() == TargetMQLLot.MaQuanLyLot.Value?.ToString()?.Trim()).ToList();

            ResultPerLOTKHSXes = await LoadKQGCperLOTofKHSX(TargetKHSX_LOTs, SelectKHSX.KHSXID.Value);
        }

        if (SelectKHSX?.KHSXID.Value != null)
        {
            // Kiem tra trang thai lay NVL cua KHSX
            // Load thong tin phieu xuat kho cua KHSX
            PXKofKHSX = SQLServerServices.GetPhieuXuatKhoByID(SelectKHSX.PXKID.Value);

            // BSUNGNVL
            Dictionary<string, object?> pars = new Dictionary<string, object?>() { { Common.KHSXID, SelectKHSX.KHSXID.Value } };
            pars.Add(Common.IsPhieuBoSungNVL, 1);

            // Chon PTraKho chua return
            ExTraPhieuXKhos = SQLServerServices.GetListPhieuXuatKhos(pars).phieuxuatkhos.Where(pxk => pxk.isReturnedNVL == false).ToList();

            // BSUNGNVL


            // LAY THONG TIN NVL TU PHIEU XUAT KHO
            nVLInfors = new();

            foreach (var nvlofpxk in PXKofKHSX.DSNVLofPXKs)
            {
                NVLInfor nVLInfor = new() { TargetPXK = PXKofKHSX, NVLofPXK = nvlofpxk, LXK = nvlofpxk.DSLenhXKs.FirstOrDefault() ?? new() };

                nVLInfors.Add(nVLInfor);
            }

            foreach (var pxkbsung in ExTraPhieuXKhos)
            {
                foreach (var nvlofpxk in pxkbsung.DSNVLofPXKs)
                {
                    NVLInfor nVLInfor = new() { TargetPXK = pxkbsung, NVLofPXK = nvlofpxk, LXK = nvlofpxk.DSLenhXKs.FirstOrDefault() ?? new() };

                    nVLInfors.Add(nVLInfor);
                }
            }
        }
        else SelectKHSX = new();
    }


    int MaxThungTP = 2;
    // Load kqgc per CDoan for dsachLOTKHSX
    private async Task<List<ResultPerLOTKHSX>> LoadKQGCperLOTofKHSX(List<KHSX_LOT> lOTs, object? khsxid)
    {
        List<ResultPerLOTKHSX> resultPerLOTKHSXs = new();

        int orginMaxThungTP = 1;

        foreach (var lot in lOTs)
        {
            ResultPerLOTKHSX resultPerLOTKHSX = new() { MaSP = SelectKHSX?.TargetSanPham?.SP_MaSP.Value, MaQuanLyLot = lot.MaQuanLyLot.Value, SLperLOT = lot.SLLOT.Value };

            Dictionary<string, object?> pars = new();
            pars.Add($"{KHSX_LOT.DBName.KHSXID}", khsxid);
            pars.Add($"{KHSX_LOT.DBName.MaQuanLyLot}", lot.MaQuanLyLot.Value);

            // Get list CD per LOT ( 1 maquanlyLot with nhieu congdoan)
            (List<KHSX_LOT> dsCDOANperLOTKHSX, string error) = SQLServerServices.GetListLOT_khsx(pars);

            List<KQGCperCDOANofLOTKHSX> dsachKQGCperCDOAN = new();

            foreach (var (index, cdperlot) in dsCDOANperLOTKHSX.Select((item, idx) => (idx, item)))
            {
                // Get lastest kqgc
                var rekQGCperLOTofKHSX = dsachKQGCperCDOAN.LastOrDefault() ?? null;

                // Get kqgc targetLOT with all CDoan
                KQGCperCDOANofLOTKHSX kQGCperLOTofKHSX = new(cdperlot, rekQGCperLOTofKHSX);

                dsachKQGCperCDOAN.Add(kQGCperLOTofKHSX);
            }

            // Asign dsachKQGCperCDOAN for resultPerLOTKHSX
            resultPerLOTKHSX.DsachKQGCperCDOAN = dsachKQGCperCDOAN;

            // Asign IsDoneLastCDoan
            resultPerLOTKHSX.IsLastCDoanDone = resultPerLOTKHSX.DsachKQGCperCDOAN.LastOrDefault()?.DanhGia == 1;

            resultPerLOTKHSX.PartOfThungTPhams = await LoadDSachThungTPhams(SelectKHSX?.KHSXID.Value, resultPerLOTKHSX.MaQuanLyLot);

            int numofThungTP = resultPerLOTKHSX.PartOfThungTPhams.Count();

            if (numofThungTP > orginMaxThungTP)
            {
                orginMaxThungTP = numofThungTP;
            }

            // Asign IsCreatedThungTP
            resultPerLOTKHSX.IsCreatedPartOfThungTP = resultPerLOTKHSX.PartOfThungTPhams.Any();

            resultPerLOTKHSXs.Add(resultPerLOTKHSX);
        }

        // Gan max thung TP
        MaxThungTP = orginMaxThungTP;

        return resultPerLOTKHSXs;
    }

    private async Task<List<PartOfThungTPham>> LoadDSachThungTPhams(object? khsxid, object? maquanlylot)
    {
        return await Task.Run(() =>
        {
            var thungTPhams = SQLServerServices.GetListPartOfThungTPs(new Dictionary<string, object?>() { { KHSX_LOT.DBName.KHSXID, khsxid }, { KHSX_LOT.DBName.MaQuanLyLot, maquanlylot } }).thungTPhams;

            return thungTPhams;
        });
    }

    private async Task OnOpenDialogXemChitietNVL(NguyenVatLieu nguyenVatLieu)
    {
        await DialogService.OpenAsync<DialogDetailsNguyenVatLieu>(null, new Dictionary<string, object>() { { "NgVLieu", nguyenVatLieu } },
        new DialogOptions() { ShowTitle = false, Width = "50%", Height = "contain", Resizable = false, Draggable = false, ShowClose = false, Style = "background-color: while; border-radius: 10px; padding: 0px" });
    }

    private NguyenVatLieu GetNguyenVatLieu(NVLofKHSX nVLofKHSX)
    {
        int nvlid = int.TryParse(nVLofKHSX.NVLID.Value?.ToString(), out int id) ? id : 0;

        var nguyenvatlieu = SQLServerServices.GetNguyenVatLieuByID_MultipleTask(nvlid);

        return nguyenvatlieu;
    }

    // Tao phieu xuat kho dialog
    private async Task OnOpenDialogCreatePhieuXuatKho()
    {
        if (SelectKHSX?.DSachNVLofKHSXs.Count > 0)
        {
            int stt_pxk = (((PXKofKHSX.PNKID.Value != null) ? 1 : 0) + ExTraPhieuXKhos.Count()) + 1; // next index of PXK

            await DialogService.OpenAsync<Manager_NVL.XuatKho.DialogCreate_PhieuXuatKho>(null, new Dictionary<string, object>() { { "STT_PXK", stt_pxk }, { "DSNVLofKHSX", SelectKHSX.DSachNVLofKHSXs }, { "CreatedWithKHSX", true }, { "KHSX", SelectKHSX } },
            new DialogOptions() { ShowTitle = false, Width = "100%", Height = "100%", Resizable = true, Draggable = true, ShowClose = false, Style = "background-color: while; border-radius: 10px; padding: 0px;" });

            await ReloadCurrentKHSX(SelectKHSX.KHSXID.Value);
        }
    }

    // Xem phieu xuat kho dialog
    private async Task OnOpenDialogXemPhieuXuatKho(string tilte, PhieuXuatKho phieuXuatKho)
    {
        if (SelectKHSX?.DSachNVLofKHSXs.Count > 0)
        {
            await DialogService.OpenAsync<Manager_NVL.XuatKho.PhieuXuatKhoDetails>(tilte, new Dictionary<string, object>() { { "PXK", phieuXuatKho } },
            new DialogOptions() { ShowTitle = true, Width = "contain", Height = "contain", Resizable = true, Draggable = true, ShowClose = true, Style = "background-color: while; border-radius: 10px; padding: 0px;" });

            await ReloadCurrentKHSX(SelectKHSX.KHSXID.Value);
        }
    }

    // Tao phieu bo sung NVL dialog
    private async Task OnOpenDialogCreatePhieuBoSungNVL()
    {
        if (SelectKHSX?.DSachNVLofKHSXs.Count > 0)
        {
            int stt_pxk = (((PXKofKHSX.PNKID.Value != null) ? 1 : 0) + ExTraPhieuXKhos.Count()) + 1; // next index of PXK

            // Xu ly trung NVLofKHSXs

            await DialogService.OpenAsync<BoSungNVL.DialogPhieuBoSungNVL>(null, new Dictionary<string, object>() { { "STT_PXK", stt_pxk }, { "DSNVLofKHSX", SelectKHSX.DSachNVLofKHSXs }, { "CreatedWithKHSX", true }, { "KHSX", SelectKHSX } },
            new DialogOptions() { ShowTitle = false, Width = "100%", Height = "100%", Resizable = true, Draggable = true, ShowClose = false, Style = "background-color: while; border-radius: 10px; padding: 0px;" });

            await ReloadCurrentKHSX(SelectKHSX.KHSXID.Value);
        }
    }

    private async Task OnOpenDialogGenerateLotforNVLbosung(PhieuXuatKho extraPXK)
    {
        if (SelectKHSX != null)
        {
            await DialogService.OpenAsync<BoSungNVL.DialogGenerateKHSX_bosung>(null, new Dictionary<string, object>() { { "ExTraPXK", extraPXK }, { "TargetKHSX", SelectKHSX } },
            new DialogOptions() { ShowTitle = false, Width = "100%", Height = "100%", Resizable = true, Draggable = true, ShowClose = false, Style = "background-color: while; border-radius: 10px; padding: 0px;" });

            await ReloadCurrentKHSX(SelectKHSX.KHSXID.Value);
        }
    }

    // Navigate to handlephieuxuatkho page
    private void NavigateToHandlePhieuXuatKho(object? pxkid)
    {
        _ = int.TryParse(SelectKHSX?.KHSXID.Value?.ToString(), out int khsxid) ? khsxid : 0;
        Common.SelectedPXKID = pxkid;
        var url = $"khomanagement?khsxid={khsxid}&tabindxex={4}";
        NavigationManager.NavigateTo(url);
    }

    private async Task CopyToClipboard(string content)
    {
        try
        {
            // Try modern Clipboard API first
            await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", content);

            NotificationService.Notify(new NotificationMessage
                {
                    Severity = NotificationSeverity.Success,
                    Summary = "Copied!",
                    Detail = $"{content}",
                    Duration = 4000
                });
        }
        catch (JSException)
        {
            try
            {
                // Fallback method
                await JSRuntime.InvokeVoidAsync("fallbackCopyToClipboard", content);

                NotificationService.Notify(new NotificationMessage
                    {
                        Severity = NotificationSeverity.Success,
                        Summary = "Fallback Copied!",
                        Detail = $"{content}",
                        Duration = 4000
                    });
            }
            catch (Exception)
            {
                NotificationService.Notify(new NotificationMessage
                    {
                        Severity = NotificationSeverity.Error,
                        Summary = "Error",
                        Detail = "Failed to copy text",
                        Duration = 3000
                    });
            }
        }
    }

}
