@using ProcessManagement.Commons
@using ProcessManagement.Models.KHO_NVL
@using ProcessManagement.Models.SANPHAM
@using ProcessManagement.Services.SQLServer
@using Radzen.Blazor
@using Radzen
@using ProcessManagement.Models

@inject DialogService DialogService
@inject NotificationService NotificationService
@inject TooltipService TooltipService
@inject SQLServerServices SQLServerServices

<RadzenCard Variant="Variant.Filled" Style="height: 100%; width: 100%; padding: 10px;">
    <RadzenStack Gap="10px" Orientation="Orientation.Vertical" Style=" height: 100%; width: 100%; padding: 0px; padding-bottom: 10px " AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
        <RadzenStack Gap="20px" Style="height: contain; width: 100%; padding: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
            <RadzenText Text="Chỉ định số lượng nguyên liệu sản xuất" Style="color: darkgreen; font-weight: 600; font-size: 18px"></RadzenText>
        </RadzenStack>

        <!--Chi dinh so luong san pham-->
        <RadzenStack Gap="20px" Style="height: contain; width: 100%; background-color: var(--rz-success-lighter); padding: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
            <!--Loai NVL-->
            <RadzenStack Gap="10px" Style="width: contain; height: contain;" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                <RadzenText Text="Loại nguyên liệu" Style="color: black; font-weight: 600; font-size: 16px"></RadzenText>
                <RadzenDropDown AllowFiltering="true" AllowClear="true" Placeholder="* chọn loại nguyên liệu" Disabled="(DsachloaiNVLs?.Count == 0 || DsachloaiNVLs == null)" TValue="string" Style="width: 100%; height: contain; font-size: 14px; font-weight: 600"
                                Value="selectLoaiNVL?.TenLoaiNVL.Value?.ToString()"
                                Data=@(DsachloaiNVLs?.Select(lnvl => lnvl.TenLoaiNVL.Value?.ToString()?.Trim()) ?? Enumerable.Empty<string>())
                                Change="@(args =>
                                        {
                                            selectLoaiNVL = DsachloaiNVLs?.FirstOrDefault(lnvl => lnvl.TenLoaiNVL.Value?.ToString()?.Trim() == args?.ToString());
                                            DsachNVLs = LoadListNguyenVatLieu(selectLoaiNVL);
                                            selectNguyenVL = null; // reset selected NVL
                                            selectSanPham = new(); // reset selected SP
                                            DsachSPs = new(); // reset dsach SP
                                            generLot.NewKHSX.TargetSanPham = null;
                                            generLot.NewKHSX.TargetNVL = null;
                                        })">
                </RadzenDropDown>
            </RadzenStack>

            <!--Ten NVL-->
            <RadzenStack Gap="10px" Style="width: contain; height: contain;" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                <RadzenText Text="Tên nguyên liệu" Style="color: black; font-weight: 600; font-size: 16px"></RadzenText>
                <RadzenDropDown AllowFiltering="true" AllowClear="true" Placeholder="* chọn nguyên liệu" TValue="string" Style="width: 100%; height: contain; font-size: 14px; font-weight: 600"
                                Value="selectNguyenVL?.MaNVL.Value?.ToString()"
                                Data=@(LoadListNguyenVatLieu(selectLoaiNVL)?.Select(nvl => nvl.MaNVL.Value?.ToString()?.Trim()) ?? Enumerable.Empty<string>())
                                Change="@(args =>
                                        {
                                            selectNguyenVL = DsachNVLs?.FirstOrDefault(nvl => nvl.MaNVL.Value?.ToString()?.Trim() == args?.ToString());
                                            DsachSPs = LoadDSachSanPham(selectNguyenVL);
                                            selectSanPham = new(); // reset selected SanPham
                                            generLot.NewKHSX.TargetSanPham = null;
                                            generLot.NewKHSX.TargetNVL = null;
                                        })">
                </RadzenDropDown>
            </RadzenStack>

            <!--Loai SP-->
            <RadzenStack Gap="10px" Style="width: contain; height: contain;" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                <RadzenText Text="Chỉ định sản phẩm" Style="color: black; font-weight: 600; font-size: 16px"></RadzenText>
                <RadzenDropDown AllowFiltering="true" AllowClear="true" Placeholder="* chọn sản phẩm" Disabled="(DsachSPs?.Count == 0 || DsachSPs == null)" TValue="string" Style="width: 100%; height: contain; font-size: 14px; font-weight: 600"
                                Value="selectSanPham?.SP_MaSP.Value?.ToString()"
                                Data=@(DsachSPs?.Select(sp => sp.SP_MaSP.Value?.ToString()?.Trim()) ?? Enumerable.Empty<string>())
                                Change="@(args =>
                                        {
                                            selectSanPham = DsachSPs?.FirstOrDefault(sp => sp.SP_MaSP.Value?.ToString()?.Trim() == args?.ToString()?.Trim()) ?? new();
                                            generLot.isGenerateListLotOK = false;
                                            generLot.isCheckSLNVLisOK = false;
                                            generLot.ResetDefault();
                                        })">
                </RadzenDropDown>
            </RadzenStack>

            <!--So luong san xuat-->
            <RadzenStack Gap="10px" Style="width: contain; height: contain;" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                <RadzenText Text="Số lượng cần sản xuất" Style="color: black; font-weight: 600; font-size: 16px"></RadzenText>
                <RadzenNumeric TValue="int" TextAlign=TextAlign.Center
                               Min="0" Max="999999"
                               Value="@(generLot.SLSanPhamSX)"
                               ValueChanged="@((args) => { OnNumOfSanPhamChanged(args); })"
                               Style="--rz-input-font-size: 18px; font-weight: 600; height: 35px; border-width: 1px; width: contain" />
            </RadzenStack>
        </RadzenStack>

        <RadzenRow Gap="10px" Style="width: 100%; height: 100%;">
            <!--Danh sach nguyen lieu cua san pham-->
            <RadzenColumn Size="12" SizeMD="12" Style="width: 100%; height: 100%; padding-right: 10px;">
                <!--Danh sach nguyen lieu cua san pham-->
                <RadzenStack Visible="@(selectSanPham.DanhSachNVLs.Count > 0)" Style="height: 100%; width: 100%; padding: 5px; padding-left: 10px; padding-right: 10px;" Gap="5px" Orientation="Orientation.Vertical">
                    <RadzenStack Style="width: 100%; height: 100%; padding: 0" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                        <RadzenCard Variant="Variant.Outlined" Style="height: 100%; width: 100%; padding: 10px; margin-bottom: 10px">
                            <RadzenStack Gap="5px" Orientation="Orientation.Vertical" Style=" height: contain; width: 100%; padding: 0px;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">

                                <RadzenStack Gap="20px" Style="height: contain; width: 100%; padding: 5px; padding-top: 0px; padding-left: 0px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                                    <RadzenText Text="Danh sách nguyên liệu của sản phẩm" Style="color: black; font-weight: 500; font-size: 16px"></RadzenText>
                                </RadzenStack>

                                <!--Header-->
                                <RadzenStack Gap="5px" Orientation="Orientation.Vertical" Style=" height: contain; width: 100%; padding-right: 0;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                    <RadzenCard Variant="Variant.Flat" Style="width: 100%; height: contain; padding: 5px; padding-right: 0px; background-color: rgb(58, 71, 77)">
                                        <RadzenStack Style="width: 100%; height: contain; " Gap="10px" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                            <RadzenStack Style="width: 3%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                <RadzenText Text="#" Style="color: white; font-weight: 500; font-size: 14px"></RadzenText>
                                            </RadzenStack>
                                            <RadzenStack Style="width: 15%; height: contain; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                <RadzenText Text="Tên NVL" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                            </RadzenStack>
                                            <RadzenStack Style="width: 15%; height: contain; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                <RadzenText Text="Loại NVL" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                            </RadzenStack>
                                            <RadzenStack Style="width: 15%; height: contain; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                <RadzenText Text="Tồn kho" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                            </RadzenStack>
                                            <RadzenStack Style="width: 15%; height: contain; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                <RadzenText Text="NVL/1SP" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                            </RadzenStack>
                                            <RadzenStack Style="width: 15%; height: contain; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                <RadzenText Text="Số lượng PO" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                            </RadzenStack>
                                            <RadzenStack Style="width: 15%; height: contain; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                <RadzenText Text="Tỉ lệ lỗi cho phép (%)" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                            </RadzenStack>
                                            <RadzenStack Style="width: 15%; height: contain; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                <RadzenText Text="Số lượng NVL" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                            </RadzenStack>
                                            <RadzenStack Style="width: 10%; height: contain; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                <RadzenText Text="Chi tiết" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                            </RadzenStack>
                                        </RadzenStack>
                                    </RadzenCard>
                                </RadzenStack>

                                <RadzenStack Style="width: 100%; height: contain" Gap="10px" Orientation=Orientation.Vertical AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                    @foreach (var nvlofsp in selectSanPham.DanhSachNVLs)
                                    {
                                        var dsvitri = ReDefineDSLenhXK(nvlofsp.TargetNgLieu.DSViTri.Where(vt => (int.TryParse(vt.VTNVLSoLuong.Value?.ToString(), out int slvt) ? slvt : 0) > 0).ToList());

                                        nvlofsp.TargetNgLieu.DSViTri = dsvitri;

                                        int slxuatkhodapick = dsvitri.Select(vt => vt.SLTake).Sum();

                                        <RadzenCard Variant="Variant.Outlined" Style="width: 100%; height: contain; padding: 0px; padding-top: 5px; padding-bottom: 5px; background-color: white">
                                            <!--Thong tin take-->
                                            <RadzenStack Style="width: 100%; height: contain;" Gap="10px" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                <RadzenStack Style="width: 3%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                    <RadzenText Text="@($"{(selectSanPham.DanhSachNVLs.IndexOf(nvlofsp) + 1).ToString()}")" Style="color: gray; font-weight: 600; font-size: 14px"></RadzenText>
                                                </RadzenStack>

                                                <!--Ten NVL-->
                                                <RadzenStack Style="width: 15%; height: contain; border-left: var(--rz-grid-cell-border); border-right: var(--rz-grid-cell-border); padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                    <RadzenStack Style="height: contain; min-height: 35px; width: 100%; border-radius: 5px; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                        <RadzenText Text="@($"{nvlofsp.TargetNgLieu.MaNVL.Value?.ToString()}")" Style="color: darkblue; font-weight: 600; font-size: 15px"></RadzenText>
                                                    </RadzenStack>
                                                </RadzenStack>

                                                <!--Loai NVL-->
                                                <RadzenStack Style="width: 15%; height: contain; border-right: var(--rz-grid-cell-border); padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                    <RadzenStack Style="height: contain; min-height: 35px; width: 100%; border-radius: 5px; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                        <RadzenText Text="@($"{nvlofsp.TargetNgLieu.LoaiNVL?.TenLoaiNVL.Value?.ToString()}")" Style="color: black; font-weight: 600; font-size: 15px"></RadzenText>
                                                    </RadzenStack>
                                                </RadzenStack>

                                                <!--Ton kho-->
                                                <RadzenStack Style="width: 15%; height: contain; border-right: var(--rz-grid-cell-border); padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                    <RadzenStack Style="height: contain; min-height: 35px; width: 100%; border-radius: 5px; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                        @{
                                                            int tonkho = nvlofsp.TargetNgLieu.TonKho;
                                                            if (tonkho == 0)
                                                            {
                                                                <RadzenText Text="@($"{nvlofsp.TargetNgLieu.TonKho} ({nvlofsp.TargetNgLieu.DonViTinh.Value?.ToString()})")" Style="color: red; font-weight: 600; font-size: 16px"></RadzenText>

                                                            }
                                                            else
                                                            {
                                                                <RadzenText Text="@($"{nvlofsp.TargetNgLieu.TonKho} ({nvlofsp.TargetNgLieu.DonViTinh.Value?.ToString()})")" Style="color: black; font-weight: 600; font-size: 16px"></RadzenText>
                                                            }
                                                        }
                                                    </RadzenStack>
                                                </RadzenStack>

                                                <!--Quy cach-->
                                                <RadzenStack Style="width: 15%; height: contain; border-right: var(--rz-grid-cell-border); padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                    <RadzenStack Style="height: contain; min-height: 35px; width: 100%; border-radius: 5px; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                        <RadzenText Text="@($"{nvlofsp.QuyCach.Value?.ToString()} ({nvlofsp.TargetNgLieu.DonViTinh.Value?.ToString()})")" Style="color: black; font-weight: 600; font-size: 16px"></RadzenText>
                                                    </RadzenStack>
                                                </RadzenStack>

                                                <!--So luong SX-->
                                                <RadzenStack Style="width: 15%; height: contain; border-right: var(--rz-grid-cell-border); padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                    <RadzenStack Style="height: contain; min-height: 35px; width: 100%; border-radius: 5px; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">

                                                        @if (!nvlofsp.isEditingSoluong)
                                                        {
                                                            if (nvlofsp.TargetNgLieu.TonKho == 0 || nvlofsp.allsoLuongcanLay > nvlofsp.TargetNgLieu.TonKho || nvlofsp.allsoLuongcanLay == 0)
                                                            {
                                                                <RadzenText Text="@($"{(nvlofsp.allsoLuongcanLay)} ({nvlofsp.TargetNgLieu.DonViTinh.Value?.ToString()})")" Style="color: red; font-weight: 600; font-size: 16px"></RadzenText>
                                                            }
                                                            else
                                                            {
                                                                <RadzenText Text="@($"{(nvlofsp.allsoLuongcanLay)} ({nvlofsp.TargetNgLieu.DonViTinh.Value?.ToString()})")" Style="color: black; font-weight: 600; font-size: 16px"></RadzenText>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <RadzenNumeric TValue="int" TextAlign=TextAlign.Center
                                                                           Min="0" Max="999999"
                                                                           Value="@(nvlofsp.allsoLuongcanLay)"
                                                                           ValueChanged="@((args) => { nvlofsp.allsoLuongcanLay = args; })"
                                                                           Style="--rz-input-font-size: 16px; color: red; font-weight: 600; height: 35px; border-width: 1px; width: contain;" />
                                                        }

                                                        <RadzenButton Visible="false" Icon="@((nvlofsp.isEditingSoluong)? "check" : "edit")" Variant="@((nvlofsp.isEditingSoluong)? Variant.Flat : Variant.Text)"
                                                                      Click="(() => {nvlofsp.isEditingSoluong = !nvlofsp.isEditingSoluong;})"
                                                                      ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Shade="@((nvlofsp.isEditingSoluong)? Shade.Lighter : Shade.Darker)" Style="border-radius: 5px; --rz-icon-size: 18px; height: 35px; width: 35px" />
                                                    </RadzenStack>
                                                </RadzenStack>

                                                <!--Ti le loi-->
                                                <RadzenStack Style="width: 15%; height: contain; border-right: var(--rz-grid-cell-border); padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                    <RadzenStack Style="height: contain; min-height: 35px; width: 100%; border-radius: 5px; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                        <RadzenNumeric Visible="false" TValue="int" TextAlign=TextAlign.Center
                                                                       Min="0" Max="999999"
                                                                       Value="@(nvlofsp.slloichophep)" Step="1"
                                                                       ValueChanged="@((args) => { nvlofsp.slloichophep = args; GetDinhMucSX(nvlofsp);})"
                                                                       Style="--rz-input-font-size: 16px; color: red; font-weight: 600; height: 35px; border-width: 1px; width: 80%;" />

                                                        <RadzenNumeric TValue="double" TextAlign=TextAlign.Center
                                                                       Min="0" Max="100"
                                                                       Value="@(nvlofsp.tileloi)" Step="0.1"
                                                                       ValueChanged="@((args) => { nvlofsp.tileloi = args; GetDinhMucSX(nvlofsp);})"
                                                                       Style="--rz-input-font-size: 16px; color: red; font-weight: 600; height: 35px; border-width: 1px; width: 80%;" />

                                                        <RadzenText Visible="false" Text="@($"{nvlofsp.tileloi} (%)")" Style="color: black; font-weight: 600; font-size: 16px"></RadzenText>
                                                    </RadzenStack>
                                                </RadzenStack>

                                                <!--Dinh muc-->
                                                <RadzenStack Style="width: 15%; height: contain; border-right: var(--rz-grid-cell-border); padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                    <RadzenStack Style="height: contain; min-height: 35px; width: 100%; border-radius: 5px; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                        @if (nvlofsp.TargetNgLieu.TonKho == 0 || nvlofsp.allsoLuongcanLay > nvlofsp.TargetNgLieu.TonKho || nvlofsp.dinhmuc > nvlofsp.TargetNgLieu.TonKho || nvlofsp.allsoLuongcanLay == 0)
                                                        {
                                                            <RadzenText Text="@($"{nvlofsp.dinhmuc} ({nvlofsp.TargetNgLieu.DonViTinh.Value?.ToString()})")" Style="color: red; font-weight: 600; font-size: 18px"></RadzenText>
                                                        }
                                                        else
                                                        {
                                                            <RadzenText Text="@($"{nvlofsp.dinhmuc} ({nvlofsp.TargetNgLieu.DonViTinh.Value?.ToString()})")" Style="color: darkgreen; font-weight: 600; font-size: 18px"></RadzenText>
                                                        }
                                                    </RadzenStack>
                                                </RadzenStack>

                                                <RadzenStack Style="width: 10%; height: contain; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                    <RadzenText Text="(Chi tiết)" @onclick="@(() => OnOpenDialogXemChitietNVL(nvlofsp.TargetNgLieu))" Style="font-size: 14px; font-weight: 600; height: contain; color: Highlight; font-style: italic; cursor: pointer"></RadzenText>
                                                </RadzenStack>
                                            </RadzenStack>

                                            <!--Danh sach vi tri-->
                                            <RadzenStack Style="width: 100%; height: contain; padding: 0" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                <RadzenCard Variant="Variant.Flat" Style="height: contain; width: 100%; padding: 10px; padding-right: 0">
                                                    <RadzenStack Gap="5px" Orientation="Orientation.Vertical" Style=" height: contain; width: 100%; padding: 0px;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">

                                                        <RadzenStack Gap="20px" Style="height: contain; width: 100%; padding: 5px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                                                            <RadzenStack Gap="10px" Style="height: contain; width: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                <RadzenText Text="Danh sách vị trí của NVL trong kho" Style="color: black; font-weight: 500; font-size: 16px"></RadzenText>
                                                            </RadzenStack>
                                                        </RadzenStack>

                                                        <RadzenStack Gap="5px" Orientation="Orientation.Vertical" Style=" height: contain; width: 100%; padding-right: 0; max-height: 250px; overflow-y: scroll" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                            <RadzenCard Variant="Variant.Flat" Style="width: 100%; height: contain; padding: 5px; padding-right: 0px; border-radius: 0; background-color: var(--rz-primary-light)">
                                                                <RadzenStack Style="width: 100%; height: 100%; " Gap="10px" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                                    <RadzenStack Style="width: 3%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                        <RadzenText Text="#" Style="color: white; font-weight: 500; font-size: 14px"></RadzenText>
                                                                    </RadzenStack>
                                                                    <RadzenStack Style="width: 15%; height: contain; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                        <RadzenText Text="Mã vị trí" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                                                    </RadzenStack>
                                                                    <RadzenStack Style="width: 10%; height: contain; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                        <RadzenText Text="LOT" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                                                    </RadzenStack>
                                                                    <RadzenStack Style="width: 15%; height: contain; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                        <RadzenText Text="Số lượng" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                                                    </RadzenStack>
                                                                    <RadzenStack Style="width: 15%; height: contain; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                        <RadzenText Text="Ngày nhập" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                                                    </RadzenStack>
                                                                    <RadzenStack Style="width: 15%; height: contain; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                        <RadzenText Text="Số lượng xuất" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                                                    </RadzenStack>
                                                                    <RadzenStack Style="width: 25%; height: contain; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                        <RadzenButton Visible="@(slxuatkhodapick < nvlofsp.dinhmuc || slxuatkhodapick == 0)" Icon="warning" Text="@($"Số lượng chỉ định {slxuatkhodapick}/{nvlofsp.dinhmuc}")" ButtonStyle="ButtonStyle.Warning" Size="ButtonSize.Small" Shade="Shade.Light" Variant="Variant.Flat"
                                                                                      Style="border-radius: 5px; --rz-icon-size: 18px; min-height: 35px; width: contain; cursor: default; color: rgba(58, 71, 77); font-weight: 600" />
                                                                        <RadzenButton Visible="@(slxuatkhodapick == nvlofsp.dinhmuc && slxuatkhodapick > 0)" Icon="check" Text="@($"Đã chỉ định {slxuatkhodapick}/{nvlofsp.dinhmuc}")" ButtonStyle="ButtonStyle.Success" Size="ButtonSize.Small" Shade="Shade.Light" Variant="Variant.Flat"
                                                                                      Style="border-radius: 5px; min-height: 35px; width: contain; cursor: default;" />

                                                                    </RadzenStack>
                                                                </RadzenStack>
                                                            </RadzenCard>

                                                            @if (dsvitri != null && dsvitri.Count > 0)
                                                            {
                                                                @foreach (var vitri in dsvitri)
                                                                {
                                                                    int index = dsvitri.IndexOf(vitri);
                                                                    int SLnvlhiencoTaivitri = int.TryParse(vitri.VTNVLSoLuong.Value?.ToString(), out int slhc) ? slhc : 0;

                                                                    <RadzenCard Variant="Variant.Outlined" Style="width: 100%; height: contain; padding: 3px; padding-right: 0px; background-color: white">
                                                                        <RadzenStack Style="width: 100%; height: contain;" Gap="10px" Orientation=Orientation.Vertical AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                            <RadzenStack Style="width: 100%; height: 100%" Gap="10px" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                                                <RadzenStack Style="width: 3%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                                    <RadzenText Text="@($"{(dsvitri.IndexOf(vitri) + 1).ToString()}")" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                                                                </RadzenStack>
                                                                                <RadzenStack Style="width: 15%; height: contain; border-left: var(--rz-grid-cell-border); border-right: var(--rz-grid-cell-border); padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                                    <RadzenStack Style="height: contain; min-height: 35px; width: 100%; border-radius: 5px; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                                        <RadzenText Text="@($"{vitri.VitriInfor.MaViTri.Value?.ToString()}")" Style="color: rgba(58, 71, 77); font-weight: 600; font-size: 18px"></RadzenText>
                                                                                    </RadzenStack>
                                                                                </RadzenStack>
                                                                                <RadzenStack Style="width: 10%; height: contain; border-right: var(--rz-grid-cell-border); padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                                    <RadzenStack Style="height: contain; min-height: 35px; width: 100%; border-radius: 5px; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                                        <RadzenText Text="@($"{vitri.LotVitri.Value?.ToString()}")" Style="color: rgba(58, 71, 77); font-weight: 600; font-size: 18px"></RadzenText>
                                                                                    </RadzenStack>
                                                                                </RadzenStack>
                                                                                <RadzenStack Style="width: 15%; height: contain; padding: 0px; border-right: var(--rz-grid-cell-border); padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                                    <RadzenStack Style="height: contain; min-height: 35px; width: 100%; border-radius: 5px; padding: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                                        <RadzenText Text="@($"{SLnvlhiencoTaivitri.ToString()}")" Style="color: rgba(58, 71, 77); font-weight: 600; font-size: 18px"></RadzenText>
                                                                                    </RadzenStack>
                                                                                </RadzenStack>
                                                                                <RadzenStack Style="width: 15%; height: contain; padding: 0px; border-right: var(--rz-grid-cell-border); padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                                    <RadzenStack Style="height: contain; min-height: contain; min-height: 35px; width: 100%; border-radius: 5px; padding: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                                        <RadzenText Text="@(vitri.NgayNhapKho.Value?.ToString())" Style="color: rgba(58, 71, 77); font-weight: 600; font-size: 18px"></RadzenText>
                                                                                    </RadzenStack>
                                                                                </RadzenStack>
                                                                                <RadzenStack Style="width: 15%; height: contain; padding: 0px; border-right: var(--rz-grid-cell-border); padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                                    <RadzenStack Style="height: contain; min-height: 35px; width: 100%; border-radius: 5px; padding: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                                        <RadzenText Text="@($"{vitri.SLTake.ToString()}")" Style="color: rgba(58, 71, 77); font-weight: 600; font-size: 18px"></RadzenText>
                                                                                    </RadzenStack>
                                                                                </RadzenStack>
                                                                                <RadzenStack Style="width: 25%; height: contain; min-height: 35px; padding: 0" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                                    <RadzenCheckBox Disabled="@(!vitri.isAllowselect)" Value="@vitri.isPicked"
                                                                                                    Change="@( async () => {await OnLXKPicked(vitri, slxuatkhodapick, nvlofsp); })"
                                                                                                    TValue="bool" Name="@($"cbb{vitri.LotVitri}{vitri.VitriInfor.MaViTri.Value}{index}")" Style="width: 25px; height: 25px" />
                                                                                </RadzenStack>
                                                                            </RadzenStack>
                                                                        </RadzenStack>
                                                                    </RadzenCard>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <RadzenStack Style="width: 100%; height: contain; " Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                    <RadzenText Text="Nguyên liệu chưa được nhập kho" Style="font-size: 16px; font-weight: 500; height: contain; color: red"></RadzenText>
                                                                </RadzenStack>
                                                            }
                                                        </RadzenStack>

                                                    </RadzenStack>
                                                </RadzenCard>
                                            </RadzenStack>
                                        </RadzenCard>


                                    }
                                </RadzenStack>
                            </RadzenStack>
                        </RadzenCard>
                    </RadzenStack>
                </RadzenStack>
            </RadzenColumn>
        </RadzenRow>
    </RadzenStack>
    <RadzenStack Gap="10px" Style="height: contain; width: 100%; padding-top: 10px; border-top: var(--rz-grid-cell-border) " Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
        <RadzenButton Disabled="@(!IsAllowXacNhan() || (selectSanPham.DanhSachNVLs.Any(nvlofsp => nvlofsp.isPickNVLok == false)))" Style="width: 120px;" Icon="check" Text="Xác nhận" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Primary" Shade="Shade.Dark" Variant="Variant.Flat" Click="@(() => OnXacNhan())" />
        <RadzenButton Style="width: 120px;" Icon="close" Text="Thoát" ButtonStyle="ButtonStyle.Primary" Shade="Shade.Dark" Size="ButtonSize.Small" Variant="Variant.Flat" Click="@(() => DialogService.Close(null))" />
    </RadzenStack>
</RadzenCard>

@code {
    [Parameter]
    public GenerateLot_V3 generLot { get; set; } = new();

    private List<DanhMucNVL>? DsachDanhmucNVL;
    private DanhMucNVL? SelectDanhmuc;

    private List<LoaiNVL>? DsachloaiNVLs;
    private LoaiNVL? selectLoaiNVL;

    private List<NguyenVatLieu>? DsachNVLs;
    private NguyenVatLieu? selectNguyenVL;

    private List<SanPham>? DsachSPs = new();
    private SanPham selectSanPham = new();

    protected override Task OnInitializedAsync()
    {
        DsachDanhmucNVL = LoadListDanhmucNguyenVatLieu();

        SelectDanhmuc = DsachDanhmucNVL?.FirstOrDefault(dm => dm.TenDanhMuc.Value?.ToString()?.Trim() == Common.DanhMucNguyenLieuGiaCong);

        DsachloaiNVLs = LoadListLoaiNguyenVatLieu(SelectDanhmuc);

        if (!string.IsNullOrEmpty(generLot.NewKHSX.TargetNVL?.NVLID.Value?.ToString()))
        {
            selectNguyenVL = generLot.NewKHSX.TargetNVL ?? new();

            selectLoaiNVL = selectNguyenVL.LoaiNVL;

            DsachNVLs = LoadListNguyenVatLieu(selectLoaiNVL);

            selectNguyenVL.DSachSPofNVLs = SQLServerServices.GetDSachNVLwithSanPham_byNVLID(selectNguyenVL.NVLID.Value);

            if (!string.IsNullOrEmpty(generLot.NewKHSX.TargetSanPham?.SP_SPID.Value?.ToString()))
            {
                selectSanPham = generLot.NewKHSX.TargetSanPham ?? new();

                DsachSPs = LoadDSachSanPham(selectNguyenVL);
            }
        }

        return base.OnInitializedAsync();
    }

    // Load danh sach danh muc NVL
    private List<DanhMucNVL>? LoadListDanhmucNguyenVatLieu()
    {
        var danhmucs = SQLServerServices.GetListDanhMucNVLs();

        return danhmucs;
    }

    // Load danh sach loai NVL
    private List<LoaiNVL>? LoadListLoaiNguyenVatLieu(DanhMucNVL? selectedresult)
    {
        int danhmucID = int.TryParse(selectedresult?.DMID?.Value?.ToString(), out int dmid) ? dmid : 0;

        var loaiNVLs = SQLServerServices.GetListLoaiNVLs(danhmucID);

        return loaiNVLs;
    }

    // Load danh sach NVL
    private List<NguyenVatLieu>? LoadListNguyenVatLieu(LoaiNVL? selectedresult)
    {
        int loaiNVLID = int.TryParse(selectedresult?.LOAINVLID?.Value?.ToString(), out int lnvlid) ? lnvlid : 0;

        List<NguyenVatLieu> nguyenlieus = new();

        if (loaiNVLID > 0)
        {
            nguyenlieus = SQLServerServices.GetListNguyenVatLieuByLoaiNvlID(loaiNVLID);
        }
        else nguyenlieus = SQLServerServices.GetListNgVatLieuByDanhmucID(SelectDanhmuc?.DMID.Value);

        DsachNVLs = nguyenlieus;

        return nguyenlieus;
    }

    // Load danh sach SanPham
    private List<SanPham>? LoadDSachSanPham(NguyenVatLieu? selectednvl)
    {
        List<SanPham> sanPhams = new();

        if (selectednvl != null)
        {
            selectednvl.DSachSPofNVLs = SQLServerServices.GetDSachNVLwithSanPham_byNVLID(selectednvl.NVLID.Value);

            foreach (var spofnvl in selectednvl.DSachSPofNVLs)
            {
                spofnvl.TargetSP = SQLServerServices.GetSanpham(int.TryParse(spofnvl.SPID.Value?.ToString(), out int spid) ? spid : 0);

                sanPhams.Add(spofnvl.TargetSP);
            }
        }

        return sanPhams;
    }

    private List<ViTriofNVL> ReDefineDSLenhXK(List<ViTriofNVL> dsvitriofnvl)
    {
        if (dsvitriofnvl.Count == 0)
        {
            return new();
        }

        // Sap xep ngay tang dan
        dsvitriofnvl.Sort((a, b) =>
        {
            var dateA = Common.ParseDate_MMddyyyy(a.NgayNhapKho.Value?.ToString()) ?? DateTime.MinValue;

            var dateB = Common.ParseDate_MMddyyyy(b.NgayNhapKho.Value?.ToString()) ?? DateTime.MinValue;

            return dateA.CompareTo(dateB);
        });

        int lastselectedIndex = -1;

        // Duyet qua/ set picked if vitriofnvl sltake > 0
        foreach (var vitriofnvl in dsvitriofnvl)
        {
            if (vitriofnvl.SLTake > 0)
            {
                lastselectedIndex++;

                vitriofnvl.isPicked = true;

                vitriofnvl.isAllowselect = false;
            }
            else
            {
                vitriofnvl.isPicked = false;

                vitriofnvl.isAllowselect = false;
            }

            int index = dsvitriofnvl.IndexOf(vitriofnvl);

            vitriofnvl.id = index;
        }

        if (lastselectedIndex > -1)
        {
            // Allowselect lxk hien tai
            dsvitriofnvl[lastselectedIndex].isAllowselect = true;

            if (lastselectedIndex + 1 < dsvitriofnvl.Count)
            {
                // Allowselect lxk ke tiep (index < dslenhs)
                dsvitriofnvl[lastselectedIndex + 1].isAllowselect = true;
            }
        }
        else
        {
            // Allowselect lxk dau tien (neu chua co lxk nao selected)
            dsvitriofnvl[0].isAllowselect = true;
        }

        return dsvitriofnvl;
    }

    // OnLXKPicked
    private async Task OnLXKPicked(ViTriofNVL vitriofnvl, int slxuatkhodapick, NVLwithSanPham nvlofsp)
    {
        int slxuatkhocanpick = nvlofsp.dinhmuc;

        if (slxuatkhocanpick > 0)
        {
            int SLnvlhiencoTaivitri = int.TryParse(vitriofnvl.VTNVLSoLuong.Value?.ToString(), out int slhc) ? slhc : 0;

            if (vitriofnvl.isPicked)
            {
                vitriofnvl.isPicked = false;

                slxuatkhodapick -= vitriofnvl.SLTake;

                vitriofnvl.SLTake = 0;

                vitriofnvl.QRIDLOT.Value = null;
            }
            else
            {
                vitriofnvl.isPicked = true;

                int slconlai = slxuatkhocanpick - slxuatkhodapick;

                if (slconlai <= SLnvlhiencoTaivitri)
                {
                    vitriofnvl.SLTake = slconlai;
                }
                else vitriofnvl.SLTake = SLnvlhiencoTaivitri;

                slxuatkhodapick += vitriofnvl.SLTake;
            }

            nvlofsp.isPickNVLok = (slxuatkhodapick == slxuatkhocanpick);
        }
        else
        {
            await DialogService.Alert($"Hãy nhập tổng số lượng cần xuất kho!", "<strong><span style='color: red'>Error!</span></strong>", new AlertOptions() { OkButtonText = "OK", ShowClose = true });
        }
    }

    public List<string> GetDSMaSPs(List<SanPham>? sanPhams)
    {
        List<string> result = sanPhams?.Select(sp => sp.SP_MaSP.Value?.ToString() ?? string.Empty).ToList() ?? new();

        return result;
    }

    // Soluong san pham changed
    private void OnNumOfSanPhamChanged(int args)
    {
        // Update SL Sanpham can SX
        generLot.SLSanPhamSX = args;

        foreach (var nvlofsp in selectSanPham.DanhSachNVLs)
        {
            bool iscanconvert = int.TryParse(nvlofsp.QuyCach.Value?.ToString(), out int slforsp);

            if (iscanconvert)
            {
                // Update so luong can lay cua moi NVL
                nvlofsp.allsoLuongcanLay = generLot.SLSanPhamSX * slforsp;
                // Tinh dinh muc/ti le loi
                GetDinhMucSX(nvlofsp);
            }
            else { nvlofsp.allsoLuongcanLay = 0; }
        }
    }

    // Tinh Dinh muc san xuat
    public void GetDinhMucSX(NVLwithSanPham nVLofsp)
    {
        int slloi = (int)Math.Round(nVLofsp.allsoLuongcanLay * (nVLofsp.tileloi / 100), MidpointRounding.AwayFromZero); // lam tron len neu > 0.5

        // tinh tileloi
        //double tileloi = Math.Round(((double)nVLofsp.slloichophep / nVLofsp.allsoLuongcanLay) * 100, 1);
        // gan tileloi
        //nVLofsp.tileloi = tileloi;
        nVLofsp.slloichophep = slloi;

        // gan dinh muc
        if (nVLofsp.tileloi > 0)
        {
            nVLofsp.dinhmuc = nVLofsp.allsoLuongcanLay + nVLofsp.slloichophep;
        }
        else nVLofsp.dinhmuc = nVLofsp.allsoLuongcanLay;
    }

    // Dialog xem chi tiet NVL
    private async Task OnOpenDialogXemChitietNVL(NguyenVatLieu nguyenVatLieu)
    {
        await DialogService.OpenAsync<Manager_NVL.Dialogs.DialogDetailsNguyenVatLieu>(null, new Dictionary<string, object>() { { "NgVLieu", nguyenVatLieu } },
        new DialogOptions() { ShowTitle = false, Width = "50%", Height = "contain", Resizable = false, Draggable = false, ShowClose = false, Style = "background-color: while; border-radius: 10px; padding: 0px" });
    }

    // Kiem tra hop le so luong NVL
    private bool IsAllowXacNhan()
    {
        bool isallow = true;

        foreach (var nvlofsp in selectSanPham.DanhSachNVLs)
        {
            if (nvlofsp.TargetNgLieu.TonKho == 0 || nvlofsp.allsoLuongcanLay > nvlofsp.TargetNgLieu.TonKho || nvlofsp.dinhmuc > nvlofsp.TargetNgLieu.TonKho || nvlofsp.allsoLuongcanLay == 0)
            {
                isallow = false; break;
            }
        }

        if (generLot.SLSanPhamSX == 0)
        {
            isallow = false;
        }

        return isallow;
    }

    // Xac nhan so luong NVL can lay
    private void OnXacNhan()
    {
        if (selectSanPham.DanhSachNVLs != null)
        {
            generLot.NewKHSX.DSachNVLofKHSXs = new();

            foreach (var nvl in selectSanPham.DanhSachNVLs)
            {
                NVLofKHSX nVLofKHSX = new()
                    {
                        // asign KHSXID (after insert KHSX to DB)
                        ThoiDiem = { Value = DateTime.Now },
                        NVLID = { Value = nvl.NVLID.Value },
                        SPID = { Value = selectSanPham.SP_SPID.Value },
                        SoLuong = { Value = nvl.allsoLuongcanLay },
                        TiLeLoi = { Value = nvl.tileloi },
                        DinhMuc = { Value = nvl.dinhmuc },
                        dsVitriofNVLs = nvl.TargetNgLieu.DSViTri.Where(vt => vt.SLTake > 0).ToList() ?? new()
                    };

                generLot.NewKHSX.DSachNVLofKHSXs?.Add(nVLofKHSX);
            }

            // Update so luong NVL da lay
            generLot.SLNgVatLieuSX = generLot.NewKHSX.DSachNVLofKHSXs?.Sum(item => int.Parse(item.SoLuong.Value?.ToString() ?? "0")) ?? 0;

            generLot.DinhMuc = generLot.NewKHSX.DSachNVLofKHSXs?.Sum(item => int.Parse(item.DinhMuc.Value?.ToString() ?? "0")) ?? 0;

            generLot.TiLeLoi = Math.Round(generLot.NewKHSX.DSachNVLofKHSXs?.Sum(item => double.Parse(item.TiLeLoi.Value?.ToString() ?? "0")) ?? 0, 4);

            generLot.NewKHSX.TargetNVL = selectNguyenVL ?? null;

            generLot.NewKHSX.TargetSanPham = selectSanPham ?? null;

            DialogService.Close(generLot.NewKHSX.DSachNVLofKHSXs);
        }
    }
}
