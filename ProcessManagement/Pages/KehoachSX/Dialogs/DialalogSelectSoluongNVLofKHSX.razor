@using ProcessManagement.Commons
@using ProcessManagement.Models.KHO_NVL
@using ProcessManagement.Services.SQLServer
@using Radzen.Blazor
@using Radzen
@using ProcessManagement.Models

@inject DialogService DialogService
@inject NotificationService NotificationService
@inject TooltipService TooltipService
@inject SQLServerServices SQLServerServices

<RadzenCard Variant="Variant.Filled" Style="height: 100%; width: 100%; padding: 10px;">
    <RadzenStack Gap="10px" Orientation="Orientation.Vertical" Style=" height: 100%; width: 100%; padding: 0px; padding-bottom: 10px " AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
        <RadzenStack Gap="20px" Style="height: contain; width: 100%; padding: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
            <RadzenText Text="Chỉ định số lượng nguyên liệu" Style="color: darkgreen; font-weight: 600; font-size: 18px"></RadzenText>
            <RadzenText Text="@($"(Sản xuất sản phẩm {newKHSX?.SanPham?.TenSanPham.Value?.ToString()})")" Style="font-weight: 500; font-size: 16px; font-style: italic"></RadzenText>
        </RadzenStack>
        <RadzenStack Gap="20px" Style="height: contain; width: 100%; background-color: var(--rz-success-lighter); padding: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
            <RadzenText Text="Định mức sản xuất: " Style="color: green; font-weight: 500; font-size: 16px"></RadzenText>
            <RadzenText Text="@($"{newKHSX?.DinhMuc.Value?.ToString()} (pcs)")" Style="color: darkred; font-weight: 500; font-size: 16px"></RadzenText>
        </RadzenStack>
        <RadzenRow Gap="10px" Style="width: 100%; height: 100%;">
            <RadzenColumn Size="12" SizeMD="8" Style="width: 100%; height: 100%; padding-right: 10px; border-right: var(--rz-grid-cell-border)">
                <RadzenStack Gap="10px" Orientation="Orientation.Vertical" Style="height: contain; max-height: 280px; width: 100%;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                    <RadzenStack Gap="0" Orientation="Orientation.Vertical" Style=" height: contain; width: 100%; padding-right: 10px" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                        <RadzenCard Variant="Variant.Flat" Style="width: 100%; height: 100%; padding: 5px;">
                            <RadzenStack Style="width: 100%; height: contain" Gap="0" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                <RadzenStack Style="width: 5%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenText Text="#" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 30%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenText Text="Tên nguyên liệu" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 30%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenText Text="Tồn kho" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 35%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenText Text="Số lượng lấy" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                </RadzenStack>
                            </RadzenStack>
                        </RadzenCard>
                    </RadzenStack>

                    <RadzenStack Gap="10px" Orientation="Orientation.Vertical" Style=" height: 90%; width: 100%; overflow-y: scroll" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                        @if (DSachNgVatLieus != null && DSachNgVatLieus.Count > 0)
                        {
                            @foreach (var nvl in DSachNgVatLieus)
                            {
                                <RadzenCard Variant="Variant.Outlined" Style="width: 100%; height: 100%; padding: 5px; background-color: white">
                                    <RadzenStack Style="width: 100%; height: contain" Gap="10px" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                        <RadzenStack Style="width: 5%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                            <RadzenText Text="@((DSachNgVatLieus.IndexOf(nvl) + 1).ToString())" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                        </RadzenStack>
                                        <RadzenStack Style="width: 30%; height: contain; border-left: var(--rz-grid-cell-border); border-right: var(--rz-grid-cell-border); padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                            <RadzenText Text="@(nvl.TenNVL.Value?.ToString())" Style="color: darkblue; font-weight: 600; font-size: 14px"></RadzenText>
                                        </RadzenStack>
                                        <RadzenStack Style="width: 30%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                            <RadzenText Text="@($"{nvl.TonKho} ({nvl.DonViTinh.Value?.ToString()})")" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                        </RadzenStack>
                                        <RadzenStack Style="width: 35%; height: contain; " Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                            <RadzenNumeric TValue="int" Min="0" Value="@(nvl.SLSanXuat)"
                                                           ValueChanged="@((args) =>{ nvl.SLSanXuat = args; CheckSLTonKhoNVLisOK(); CheckSLNVLisOK();})"
                                                           Style="font-size: 16px; font-weight: 600; height: contain; width: 50%; border-radius: 0px;" />
                                            <RadzenText Text="(pcs)" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                        </RadzenStack>
                                    </RadzenStack>
                                </RadzenCard>
                            }
                        }
                    </RadzenStack>
                </RadzenStack>
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="4" Style="width: 100%; height: 100%;">
                <RadzenStack Gap="10px" Orientation="Orientation.Vertical" Style="height: contain; width: 100%;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                    <RadzenButton Click="@(() => ChiadeuSLDinhMucchoNVL())" Style="width: 100%;" Icon="autorenew" Text="Chia đều" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Primary" Shade="Shade.Lighter" Variant="Variant.Flat" />
                    <RadzenAlert Visible="@slSXmorethanSLTonkho" Text="@($"Số lượng lấy quá SL tồn kho!")" Style="width: 100%; height: contain; font-size: 16px; padding: 5px; margin: 0px" AlertStyle="AlertStyle.Warning" AllowClose="false" Variant="Variant.Flat" Size="AlertSize.Small" Shade="Shade.Lighter"></RadzenAlert>
                    <RadzenAlert Visible="@(isChiaSLSXchoNVLok && !slSXmorethanSLTonkho)" Text="@($"Số lượng mỗi NVL hợp lệ!")" Style="width: 100%; height: contain; font-size: 16px; padding: 5px; margin: 0px" AlertStyle="AlertStyle.Success" AllowClose="false" Variant="Variant.Flat" Size="AlertSize.Small" Shade="Shade.Lighter"></RadzenAlert>
                    <RadzenAlert Visible="@(!isChiaSLSXchoNVLok)" Text="@($"Số lượng mỗi NVL chưa hợp lệ!")" Style="width: 100%; height: contain; font-size: 16px; padding: 5px; margin: 0px" AlertStyle="AlertStyle.Warning" AllowClose="false" Variant="Variant.Flat" Size="AlertSize.Small" Shade="Shade.Lighter"></RadzenAlert>
                </RadzenStack>
            </RadzenColumn>
        </RadzenRow>
    </RadzenStack>
    <RadzenStack Gap="10px" Style="height: contain; width: 100%; padding-top: 10px; border-top: var(--rz-grid-cell-border) " Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
        <RadzenButton Disabled="@(!isChiaSLSXchoNVLok || slSXmorethanSLTonkho)" Style="width: 120px;" Icon="check" Text="Xác nhận" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Primary" Shade="Shade.Dark" Variant="Variant.Flat" Click="@(() => OnXacNhan())" />
        <RadzenButton Style="width: 120px;" Icon="close" Text="Thoát" ButtonStyle="ButtonStyle.Primary" Shade="Shade.Lighter" Size="ButtonSize.Small" Variant="Variant.Flat" Click="@(() => DialogService.Close(null))" />
    </RadzenStack>
</RadzenCard>

@code {

    [Parameter]
    public KHSX? newKHSX { get; set; }

    private List<NguyenVatLieu>? DSachNgVatLieus = new();

    [Parameter]
    public List<NVLofKHSX>? DSachNVLofKHSXs { get; set; }

    private bool slSXmorethanSLTonkho = false;

    private bool isChiaSLSXchoNVLok = false;

    protected override Task OnInitializedAsync()
    {
        LoadDanhSachNVL();

        if (DSachNVLofKHSXs?.Count > 0 && DSachNgVatLieus?.Count > 0)
        {
            foreach (var nvl in DSachNgVatLieus)
            {
                var nvlofkhsx = DSachNVLofKHSXs.FirstOrDefault(tg => tg.NVLID.Value?.ToString() == nvl.NVLID.Value?.ToString());

                nvl.SLSanXuat = int.TryParse(nvlofkhsx?.SoLuong.Value?.ToString(), out int sl) ? sl : 0;
            }
        }

        CheckSLTonKhoNVLisOK();
        CheckSLNVLisOK();

        return base.OnInitializedAsync();
    }

    private void LoadDanhSachNVL()
    {
        int loainvlID = int.TryParse(newKHSX?.LoaiNVL?.LOAINVLID.Value?.ToString(), out int x) ? x : 0;

        DSachNgVatLieus = SQLServerServices.GetListNguyenVatLieuByLoaiNvlID(loainvlID);
    }

    private bool CheckSLNVLisOK()
    {
        int sumSL = DSachNgVatLieus?.Sum(nvl => nvl.SLSanXuat) ?? 0;

        int dinhmuc = int.TryParse(newKHSX?.DinhMuc.Value?.ToString(), out int vl) ? vl : 0;

        isChiaSLSXchoNVLok = ((dinhmuc > 0) && (sumSL - dinhmuc) == 0);

        return isChiaSLSXchoNVLok;
    }

    private void CheckSLTonKhoNVLisOK()
    {
        if (DSachNgVatLieus == null || DSachNgVatLieus.Count == 0) { return; }

        foreach (var nvl in DSachNgVatLieus)
        {
            int sltonkho = nvl.TonKho;

            int slcanlay = nvl.SLSanXuat;

            slSXmorethanSLTonkho = (slcanlay > sltonkho);

            if (slSXmorethanSLTonkho)
            {
                break;
            }
        }
    }

    private void ChiadeuSLDinhMucchoNVL()
    {
        if (DSachNgVatLieus == null || DSachNgVatLieus.Count == 0) { return; }

        int dinhmuc = int.TryParse(newKHSX?.DinhMuc.Value?.ToString(), out int vl) ? vl : 0;

        int slmoiNVL_chan = dinhmuc / DSachNgVatLieus.Count;

        int slmoiNVL_phandu = dinhmuc % DSachNgVatLieus.Count;

        foreach (var nvl in DSachNgVatLieus)
        {
            nvl.SLSanXuat = slmoiNVL_chan;
        }

        if (slmoiNVL_phandu > 0)
        {
            foreach (var nvl in DSachNgVatLieus)
            {
                nvl.SLSanXuat = slmoiNVL_chan + 1;

                slmoiNVL_phandu--;

                if (slmoiNVL_phandu == 0)
                {
                    break;
                }
            }
        }

        CheckSLTonKhoNVLisOK();
        CheckSLNVLisOK();
    }

    private void OnXacNhan()
    {
        if (DSachNgVatLieus != null)
        {
            DSachNVLofKHSXs = new();

            foreach (var nvl in DSachNgVatLieus)
            {
                NVLofKHSX nVLofKHSX = new()
                    {
                        // asign KHSXID (after insert KHSX to DB)
                        ThoiDiem = { Value = DateTime.Now },
                        NVLID = { Value = nvl.NVLID.Value },
                        SPID = { Value = newKHSX?.SanPham?.SPID.Value },
                        SoLuong = { Value = nvl.SLSanXuat }
                    };

                DSachNVLofKHSXs?.Add(nVLofKHSX);
            }

            if (CheckSLNVLisOK())
            {
                DialogService.Close(DSachNVLofKHSXs);
            }
            else DialogService.Close(null);
        }
    }
}
