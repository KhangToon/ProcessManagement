@page "/pagedskhsanxuats"
@attribute [Authorize(Roles = "Admin")]
@* this limited access into page *@

@using ProcessManagement.Commons
@using ProcessManagement.Models
@using ProcessManagement.Models.TienDoGCs
@using ProcessManagement.Pages.KehoachSX.Dialogs
@using ProcessManagement.Pages.KehoachSX.KQGCs
@using ProcessManagement.Pages.KehoachSX.QLCongDoan
@using ProcessManagement.Pages.KehoachSX.TienDos
@using ProcessManagement.Services.SQLServer
@using Radzen.Blazor
@using Radzen

@inject NotificationService NotificationService
@inject TooltipService TooltipService
@inject ContextMenuService ContextMenuService
@inject DialogService DialogService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject SQLServerServices SQLServerServices
@inject IJSRuntime JSRuntime

<style>
    .khsx_IsSelected {
        border-style: solid;
        border-width: 2px;
        border-color: green;
    }
</style>

<RadzenCard Variant="Variant.Flat" Style="height: 100%; width: 100%; padding: 5px;">
    <RadzenStack Gap="20px" Style="height: 100%; width: 100%;" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
        <RadzenStack Style="height: contain; width: 100%; padding-bottom: 10px; border-bottom: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
            <RadzenStack Style="height: 100%; width: 20%; border-radius: 10px; background-color: var(--rz-success-lighter); padding: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                <RadzenText Text="DANH SÁCH KẾ HOẠCH SẢN XUẤT" Style="color: green; font-weight: 600; font-size: 18px"></RadzenText>
            </RadzenStack>
            <RadzenStack Gap="15px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Style="height: 100%; width: 60%;">
                <RadzenTextBox Placeholder="Nhập mã kế hoạch sản xuất để tìm kiếm" Style="border-radius: 20px; padding-left: 20px; border-width: 2px; border-color: var(--rz-primary-light); width: 50% "></RadzenTextBox>
                <RadzenButton Icon="search" ButtonStyle="ButtonStyle.Primary" Style="border-radius: 20px;" />
                <RadzenButton Style="border-radius: 20px;" Icon="autorenew" ButtonStyle="ButtonStyle.Primary" />
            </RadzenStack>
            <RadzenStack Gap="10px" Orientation="Orientation.Horizontal" Style="height: contain; width: contain; padding-right: 20px;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                <!--Tai danh sach KHSX-->
                <RadzenButton Click="@(() => LoadDanhSachKHSX())" Icon="list" Text="Danh sách KHSX" Size="ButtonSize.Small" Variant="Variant.Filled"
                              Style="height: 100%; width: contain; font-size: 14px; background-color: Highlight " />
                <!--Tao moi ke hoach san xuat-->
                <RadzenButton Click="@(() => AddNewKehoachSX())" Icon="add" Text="Thêm KHSX" Size="ButtonSize.Small" Variant="Variant.Filled"
                              Style="height: 100%; width: contain; font-size: 14px; background-color: Highlight " />
            </RadzenStack>
        </RadzenStack>

        <RadzenStack Orientation="Orientation.Vertical" Gap="20px" Style="height: contain; width: 100%; padding: 0px;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
            @foreach (var khsx in DSKHSXs)
            {
                <RadzenPanel AllowCollapse="true" Style="width: 100%;" Collapsed="@khsx.IsCollapsed" Collapse="@(() => {khsx.IsCollapsed = true;})">
                    <HeaderTemplate>
                        <RadzenStack Gap="10px" Orientation="Orientation.Horizontal">
                            <RadzenText TextStyle="TextStyle.H6" class="rz-display-flex rz-align-items-center rz-m-0">
                                <RadzenIcon Icon="account_box" class="rz-me-1" />
                            </RadzenText>
                            <RadzenText Text="Kế hoạch sản xuất: " Style="font-size: 18px; color: black"></RadzenText>
                            <RadzenText TextStyle="TextStyle.H6" class="rz-display-flex rz-align-items-center rz-m-0">
                                <b>@khsx.MaLSX.Value?.ToString()</b>
                            </RadzenText>
                        </RadzenStack>
                    </HeaderTemplate>
                    <ChildContent>
                        <RadzenTabs Visible="@(khsxwaitloading == false)" Style="width: 100%; min-height: 100% !important; margin-top: 15px" SelectedIndex="@selectedTabIndex">
                            <Tabs>
                                <RadzenTabsItem>
                                    <Template>
                                        <RadzenText Text="@($"THÔNG TIN KHSX - {khsx.MaLSX.Value?.ToString()}")" Style="color: darkred; font-weight: 500; font-size: 15px"></RadzenText>
                                    </Template>
                                    <ChildContent>
                                        <DialogDetailKHSX SelectKHSX="@khsx" IsNotDialog="true"></DialogDetailKHSX>
                                    </ChildContent>
                                </RadzenTabsItem>
                                <RadzenTabsItem>
                                    <Template>
                                        <RadzenText Text="DANH SÁCH LOT NVL" Style="color: darkred; font-weight: 500; font-size: 15px"></RadzenText>
                                    </Template>
                                    <ChildContent>
                                        <DanhSachLotNVL TargetKHSX="@khsx"></DanhSachLotNVL>
                                    </ChildContent>
                                </RadzenTabsItem>

                                <RadzenTabsItem>
                                    <Template>
                                        <RadzenText Text="THEO DÕI SẢN XUẤT" Style="color: darkred; font-weight: 500; font-size: 15px;"></RadzenText>
                                    </Template>
                                    <ChildContent>
                                        <TheoDoiSanXuat TargetKHSX="@khsx"></TheoDoiSanXuat>
                                    </ChildContent>
                                </RadzenTabsItem>

                                <RadzenTabsItem>
                                    <Template>
                                        <RadzenText Text="QUẢN LÝ CÔNG ĐOẠN" Style="color: darkred; font-weight: 500; font-size: 15px"></RadzenText>
                                    </Template>
                                    <ChildContent>
                                        <QLCongDoanPage TargetKHSX="@khsx"></QLCongDoanPage>
                                    </ChildContent>
                                </RadzenTabsItem>
                            </Tabs>
                        </RadzenTabs>
                    </ChildContent>
                    <SummaryTemplate>
                        <!--LSX infor-->
                        <RadzenStack Style="width: 100%; height: contain; padding: 20px; padding-top: 10px; padding-bottom: 10px;" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                            <RadzenCard @onclick=@(() => {khsx.IsCollapsed = false;}) Visible=@(khsx.KHSXID.Value != null) Variant="Variant.Outlined" Style="cursor: pointer; width: 100%; height: contain; padding: 0px; border-radius: 10px">
                                <RadzenStack Orientation="Orientation.Vertical" Gap="0" Style="height: 100%; width: 100%; padding: 10px; padding-top: 0; padding-bottom: 0" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                    <RadzenStack Gap="15px" Orientation="Orientation.Horizontal" Style="height: 100%; width: 100%; padding: 10px" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                                        <RadzenStack Gap="0" Orientation="Orientation.Vertical" Style="height: 50%; width: contain;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                            <RadzenText Text="Mã KHSX" Style="font-size: 16px; font-weight: 500; color: darkgray "></RadzenText>
                                            <RadzenText Visible="@(khsx?.MaLSX.Value != null)" Text="@khsx?.MaLSX.Value?.ToString()" Style="font-size: 16px; font-weight: bold; color: red"></RadzenText>
                                        </RadzenStack>
                                        <RadzenStack Gap="0" Orientation="Orientation.Vertical" Style="height: 50%; width: contain;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                            <RadzenText Text="@Common.SP_TenSanPham" Style="font-size: 16px; font-weight: 500; color: darkgray "></RadzenText>
                                            <RadzenText Visible="@(khsx?.SanPham != null)" Text="@(khsx?.SanPham?.SP_TenSanPham.Value?.ToString())" Style="font-size: 16px; font-weight: bold; color: darkblue "></RadzenText>
                                        </RadzenStack>
                                        <RadzenStack Gap="0" Orientation="Orientation.Vertical" Style="height: 50%; width: contain;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                            <RadzenText Text="Số lượng PO" Style="font-size: 16px; font-weight: 500; color: darkgray "></RadzenText>
                                            <RadzenText Visible="@(khsx?.SLSanPhamSX.Value != null)" Text="@($"{khsx?.SLSanPhamSX.Value?.ToString()?? "0"}")" Style="font-size: 16px; font-weight: bold; color: black "></RadzenText>
                                        </RadzenStack>
                                        <RadzenStack Gap="0" Orientation="Orientation.Vertical" Style="height: 50%; width: contain;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                            <RadzenText Text="Tỉ lệ lỗi cho phép" Style="font-size: 16px; font-weight: 500; color: darkgray "></RadzenText>
                                            @{
                                                int slloichophep = (int.TryParse(khsx.DinhMuc.Value?.ToString(), out int dinhmuc) ? dinhmuc : 0) - (int.TryParse(khsx.SLNVLSanXuat.Value?.ToString(), out int slsx) ? slsx : 0);
                                            }
                                            <RadzenText Text="@($"{khsx?.TileLoi.Value?.ToString()?? "0"} (%) ({slloichophep} pcs)")" Style="font-size: 16px; font-weight: bold; color: red "></RadzenText>
                                        </RadzenStack>
                                        <RadzenStack Gap="0" Orientation="Orientation.Vertical" Style="height: 50%; width: contain;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                            <RadzenText Text="Số lượng NVL" Style="font-size: 16px; font-weight: 500; color: darkgray "></RadzenText>
                                            <RadzenText Visible="@(khsx?.DinhMuc.Value != null)" Text="@($"{khsx?.DinhMuc.Value?.ToString()?? "0"} (pcs)")" Style="font-size: 16px; font-weight: bold; color: black "></RadzenText>
                                        </RadzenStack>
                                        <RadzenStack Gap="0" Orientation="Orientation.Vertical" Style="height: 50%; width: contain;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                            <RadzenText Text="Số lượng LOT" Style="font-size: 16px; font-weight: 500; color: darkgray "></RadzenText>
                                            <RadzenText Visible="@(khsx.SLLot.Value != null)" Text="@($"{khsx.SLLot.Value?.ToString()?? "0"} (lot)")" Style="font-size: 16px; font-weight: bold; color: black "></RadzenText>
                                        </RadzenStack>
                                        <RadzenStack Gap="0" Orientation="Orientation.Vertical" Style="height: 50%; width: contain;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                            <RadzenText Text="Mã quản lý LOT" Style="font-size: 16px; font-weight: 500; color: darkgray "></RadzenText>
                                            @{
                                                NguyenCongofKHSX? fistCongdoan = khsx?.DSachCongDoans.FirstOrDefault();
                                            }
                                            <RadzenText Visible="@(fistCongdoan!= null)" Text="@($"({fistCongdoan?.DSachNVLCongDoans.FirstOrDefault()?.MaQuanLy.Value?.ToString()?? "_"} --> {fistCongdoan?.DSachNVLCongDoans.LastOrDefault()?.MaQuanLy.Value?? "_"})")"
                                                        Style="font-size: 16px; font-weight: bold; color: black "></RadzenText>
                                        </RadzenStack>
                                        <RadzenStack Gap="0" Orientation="Orientation.Vertical" Style="height: 50%; width: contain;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                            <RadzenText Text="@Common.NgayTao" Style="font-size: 16px; font-weight: 500; color: darkgray "></RadzenText>
                                            @if (khsx?.NgayTao.Value != null)
                                            {
                                                DateTime ngaytao = Convert.ToDateTime(khsx?.NgayTao.Value?.ToString());
                                                <RadzenText Text="@ngaytao.ToString(Common.FormatNoTime_yyyMMdd)" Style="font-size: 16px; font-weight: bold; color: black "></RadzenText>
                                            }
                                            else
                                            {
                                                <RadzenText Text="----" Style="font-size: 16px; font-weight: bold; color: black "></RadzenText>
                                            }
                                        </RadzenStack>
                                    </RadzenStack>
                                    <RadzenStack Orientation="Orientation.Horizontal" Style="height: contain; width: 100%; padding: 10px" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                                        @{
                                            <RadzenText Text="Xem chi tiết KHSX" @onclick="@(() => OnOpenChitietKHSX(khsx))" TextAlign="TextAlign.Center" Style="font-size: 16px; font-weight: 500; color: Highlight; cursor: pointer "></RadzenText>
                                        }
                                    </RadzenStack>
                                </RadzenStack>
                            </RadzenCard>
                        </RadzenStack>
                    </SummaryTemplate>
                </RadzenPanel>
            }
        </RadzenStack>
    </RadzenStack>
</RadzenCard>


@code {
    private List<KHSX> DSKHSXs = new();
    private KHSX SelectedKHSX = new();
    private static int selectedTabIndex = 0;

    private static object? selectKHSXID;

    protected override async Task OnInitializedAsync()
    {
        await OnGetListKHSXs();

        if (DSKHSXs.Any())
        {
            if (selectKHSXID != null)
            {
                SelectedKHSX = DSKHSXs.FirstOrDefault(x => object.Equals(x.KHSXID.Value, selectKHSXID)) ?? new();
            }
            else SelectedKHSX = DSKHSXs.FirstOrDefault() ?? new();

        }

        await base.OnInitializedAsync();
    }


    private async Task OnGetListKHSXs()
    {
        DSKHSXs = await Task.Run(() =>
        {
            var results = SQLServerServices.GetListKHSXs();

            if (results.Any())
            {
                results.Reverse();
            }
            return results;
        });
    }

    private string IsKHSXSelected(KHSX selectKHSX)
    {
        if (SelectedKHSX.KHSXID.Value != null && SelectedKHSX.KHSXID.Value.Equals(selectKHSX.KHSXID.Value))
        {
            return "khsx_IsSelected";
        }
        else return string.Empty;
    }

    private bool khsxwaitloading = false;
    private async Task OnKHSXClick(KHSX selectKHSX)
    {
        SelectedKHSX = selectKHSX;

        selectKHSXID = selectKHSX.KHSXID.Value;

        //Common.CurrentKHSXid = SelectedKHSX.KHSXID.Value;


        khsxwaitloading = true;
        StateHasChanged();
        await Task.Delay(50);
        khsxwaitloading = false;
        StateHasChanged();
    }

    // Open dialog chi tiet KHSX
    private async Task OnOpenChitietKHSX(KHSX seletedkhsx)
    {
        await DialogService.OpenAsync<DialogDetailKHSX>(null, new Dictionary<string, object>() { { "SelectKHSX", seletedkhsx } },
        new DialogOptions() { Width = "80%", Height = "contain", Resizable = false, Draggable = true, ShowTitle = false, ShowClose = false, Style = "background-color: while; border-radius: 0px; padding: 0px" });
    }

    // Load danh sach ke hoach san xuat
    private async Task LoadDanhSachKHSX()
    {
        KHSX selectKHSX = await DialogService.OpenAsync<DialogDSachKHSX>(null, null,
        new DialogOptions() { Width = "70%", Height = "90%", Resizable = false, Draggable = true, ShowTitle = false, ShowClose = false, Style = "background-color: while; border-radius: 0px; padding: 0px" });
    }

    // Them ke hoach san xuat
    private async Task AddNewKehoachSX()
    {
        KHSX newKHSX = await DialogService.OpenAsync<DialogGenerateKHSX>(null, null,
        new DialogOptions() { Width = "90%", Height = "contain", Resizable = false, Draggable = true, ShowTitle = false, ShowClose = false, Style = "background-color: while; border-radius: 0px; padding: 0px" });

        if (newKHSX != null)
        {
            await OnGetListKHSXs();

            if (DSKHSXs.Any())
            {
                if (selectKHSXID != null)
                {
                    SelectedKHSX = DSKHSXs.FirstOrDefault(x => object.Equals(x.KHSXID.Value, selectKHSXID)) ?? new();
                }
                else SelectedKHSX = DSKHSXs.FirstOrDefault() ?? new();

            }
        }
    }
}
