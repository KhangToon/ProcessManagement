@using ProcessManagement.Commons
@using ProcessManagement.Models
@using ProcessManagement.Models.KHSXs
@using ProcessManagement.Models.TienDoGCs
@using ProcessManagement.Services.SQLServer
@using Radzen.Blazor
@using Radzen

@inject NotificationService NotificationService
@inject DialogService DialogService
@inject SQLServerServices SQLServerServices

<RadzenStack Gap="5" Style="height: 100%; width: 100%;">
    <!--Header-->
    <RadzenStack Style="width: 100%; padding-bottom: 5px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
        <RadzenStack Style="height: contain; width: 100%; background-color: var(--rz-success-lighter); padding: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
            <RadzenText Text="@($"QUẢN LÝ LOT NVL {TargetKHSX.SanPham?.SP_MaSP.Value?.ToString()}")" Style="color: green; font-weight: 600; font-size: 20px"></RadzenText>
        </RadzenStack>
    </RadzenStack>

    <!--Body-->
    <RadzenRow Gap="10px" Style=" width: 100%; border-top: var(--rz-grid-cell-border); padding: 10px;">
        <!--Theo doi tien do gia cong-->
        <RadzenColumn Size="12" SizeMD="12" Style="height: contain; width: 100%;">
            <RadzenStack Gap="0px" Orientation="Orientation.Vertical" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Start" Style="height: 100%; width: 100%;">
                <!--Buttons control-->
                <RadzenStack Gap="10px" Style="height: contain; width: 100%; padding: 5px; padding-left: 10px; border-bottom: var(--rz-grid-cell-border) " Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                    <RadzenStack Gap="10px" Style="height: 100%; width: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                        <RadzenText Text="Danh sách LOT kế hoạch sản xuất" Style="color: darkred; font-weight: 600; font-size: 17px; height: contain; width: contain; font-style: italic;"></RadzenText>
                        <RadzenText Text="@($"{TargetKHSX.SanPham?.SP_MaSP.Value?.ToString()}")" Style="color: black; font-weight: 600; font-size: 20px; height: contain; width: contain; font-style: italic;"></RadzenText>
                    </RadzenStack>
                </RadzenStack>

                <!--Datagrid-->
                <RadzenStack Style="height: contain; width: 100%; padding-top: 10px;" Orientation="Orientation.Vertical" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Start">
                    <RadzenDataGrid class="rz-grid-table-fixed-2" Data="@(DSItems)" TItem="NVLmoiNguyenCong" IsLoading="@isLoading"
                                    EmptyText="Danh sách LOT NVL trống." Style="overflow: scroll; width: 100%; height: 100%"
                                    ShowColumnTitleAsTooltip="true" ShowCellDataAsTooltip="true" AllowVirtualization="true"
                                    AllowFiltering="false" FilterMode="FilterMode.Simple" AllowColumnResize="true"
                                    AllowPaging="false" AllowSorting="false" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                    ShowPagingSummary="true" PagingSummaryFormat="@pagingSummaryFormat" PagerPosition="PagerPosition.Bottom"
                                    GridLines="DataGridGridLines.Both" Density="Density.Default"
                                    HeaderCellRender="@(args => {args.Attributes.Add("style", $"background-color: rgba(58, 71, 77);");})"
                                    CellRender="@OnCellRender" FooterCellRender="@HeaderFooterCellRender" Value="@DatagridSeleted" ValueChanged="@((args) => OnDatagridSelectChanged(args))">

                        <HeaderTemplate>
                            <RadzenStack Gap="10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">

                                <!--Button Reload-->
                                <RadzenButton Text="Reload" Style="border-radius: 20px; min-width: 100px;"
                                              IsBusy="@isLoading" BusyText=" Loading..." Icon="autorenew" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" />
                            </RadzenStack>
                        </HeaderTemplate>
                        <Columns>
                            @if (DSItems.Count > 0)
                            {
                                List<Propertyy> columns = DSItems.FirstOrDefault()?.GetPropertiesValues().Where(pro => pro.AlowDisplay == true).ToList() ?? new();

                                <!--STT-->
                                <RadzenDataGridColumn Width="50px" Frozen="true" FrozenPosition="FrozenColumnPosition.Left" Filterable="false"
                                                      TItem="NVLmoiNguyenCong" Title="#"
                                                      Property="STT" TextAlign="TextAlign.Center">
                                    <HeaderTemplate>
                                        <span style="font-weight: 600; font-size: 15px; color: white">STT</span>
                                    </HeaderTemplate>
                                    <Template Context="tdgcrow">
                                        <span style="font-weight: bold;">@(DSItems.IndexOf(tdgcrow) + 1)</span>
                                    </Template>
                                </RadzenDataGridColumn>

                                foreach (var column in columns.Where(cl => cl.DispDatagrid == true).ToList())
                                {
                                    string colName = column.DBName ?? string.Empty;
                                    string displayName = column.DBName ?? string.Empty;
                                    Type? columnType = column.Type;

                                    <RadzenDataGridColumn TItem="NVLmoiNguyenCong" Title="@displayName" MinWidth="100px"
                                                          Property="@colName" TextAlign="TextAlign.Center">
                                        <HeaderTemplate>
                                            <span style="font-weight: 600; font-size: 15px; color: white;">@displayName</span>
                                        </HeaderTemplate>
                                        <Template Context="tdgcrow">
                                            @{
                                                if (columnType != null && columnType == typeof(DateTime))
                                                {
                                                    bool ishaveValueOfday = DateTime.TryParse(tdgcrow.GetPropertyValue(colName)?.ToString(), out DateTime vldate);

                                                    <RadzenText Visible="@ishaveValueOfday" Text="@vldate.ToString(Common.FormatNoTime_yyyddMM)" Style="font-size: 16px; height: contain; color: black; font-weight: 500"></RadzenText>
                                                    <RadzenText Visible="@(!ishaveValueOfday)" Text="@string.Empty" Style="font-size: 16px; height: contain; color: black; font-weight: 500"></RadzenText>
                                                }
                                                else
                                                {
                                                    string colValue = tdgcrow.GetPropertyValue(colName)?.ToString() ?? "_";

                                                    <RadzenText Text="@($"{colValue}")" Style="font-size: 15px; height: contain; font-weight: 500"></RadzenText>
                                                }
                                            }
                                        </Template>
                                    </RadzenDataGridColumn>
                                }
                            }
                        </Columns>
                    </RadzenDataGrid>
                </RadzenStack>
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>

</RadzenStack>

@code {
    [Parameter]
    public KHSX TargetKHSX { get; set; } = new();

    private IList<NVLmoiNguyenCong>? DatagridSeleted;
    private NVLmoiNguyenCong SelectedRow = new();
    private bool isLoading = false;
    private string pagingSummaryFormat = "Displaying page {0} of {1} <b>(total {2} records)</b>";

    private List<NVLmoiNguyenCong> DSItems = new();

    protected override async Task OnInitializedAsync()
    {
        DSItems = TargetKHSX.DSachCongDoans.FirstOrDefault()?.DSachNVLCongDoans ?? new();

        await base.OnInitializedAsync();
    }

    // protected override async Task OnParametersSetAsync()
    // {
    //     await base.OnParametersSetAsync();

    //     DSItems = TargetKHSX.DSachCongDoans.FirstOrDefault()?.DSachNVLCongDoans ?? new();
    // }

    // Datagrid selected changed event
    private void OnDatagridSelectChanged(IList<NVLmoiNguyenCong> selected)
    {
        DatagridSeleted = selected;

        var fistItemSelected = DatagridSeleted.FirstOrDefault();

        if (fistItemSelected != null)
        {
            SelectedRow = fistItemSelected;
        }
    }

    // Datagrid cellrender
    private void OnCellRender(DataGridCellRenderEventArgs<NVLmoiNguyenCong> args)
    {
        if (args.Column.Property.Contains("ID"))
        {
            args.Attributes.Add("style", $"font-weight: bold;");
        }
    }

    void HeaderFooterCellRender(DataGridCellRenderEventArgs<NVLmoiNguyenCong> args)
    {

    }
}
