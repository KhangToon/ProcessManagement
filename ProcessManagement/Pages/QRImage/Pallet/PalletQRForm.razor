@using ProcessManagement.Commons
@using ProcessManagement.Services
@using ProcessManagement.Services.SQLServer
@using ProcessManagement.Services.QRCodes
@using Radzen.Blazor
@using Radzen
@using ProcessManagement.Models;

@inject SQLServerServices SQLServerServices
@inject QRCodeServices QRCodeServices
@inject DialogService DialogService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<RadzenStack Gap="10px" Style="width: 100%; min-width: 400px; height: 100%; padding: 10px" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
    <RadzenStack id="printing-component" Gap="10px" Style="width: 100%; min-width: 400px; height: 90%; padding: 10px" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
        <RadzenCard Variant="Variant.Outlined" Style="width: 100%; height: 100%">
            <RadzenStack Gap="10px" Style="width: 100%; height: 100%;" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">

                <!--PO No-->
                <RadzenStack Gap="15px" Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                    <RadzenRow Style="width: 100%; height: 100%">
                        <RadzenColumn Size="4">
                            <RadzenStack Style="width: 100%; height: 100%;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Start">
                                <RadzenText Text="PO No: " Style="font-size: 18px; font-weight: 700; height: contain; color: black"></RadzenText>
                            </RadzenStack>
                        </RadzenColumn>
                        <RadzenColumn Size="8">
                            <RadzenStack Style="width: 100%; height: 100%;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.End">
                                <RadzenText Visible=@(!IsEditMode) Text="@($"{PalletQR.PO_No}")" Style="font-weight: 600;  color: black; font-size: 18px"></RadzenText>
                                <RadzenTextArea Visible=@(IsEditMode) class="custom-placeholder" Value="@PalletQR.PO_No" Style="font-size: 18px; width: 100%; height: contain; border-width: 1px;"
                                                @oninput="@(async (args) => { PalletQR.PO_No = args?.Value?.ToString()??string.Empty;})">
                                </RadzenTextArea>
                            </RadzenStack>
                        </RadzenColumn>
                    </RadzenRow>
                </RadzenStack>

                <!--Name-->
                <RadzenStack Gap="15px" Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                    <RadzenRow Style="width: 100%; height: 100%">
                        <RadzenColumn Size="4">
                            <RadzenStack Style="width: 100%; height: 100%;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Start">
                                <RadzenText Text="NAME: " Style="font-size: 18px; font-weight: 700; height: contain; color: black"></RadzenText>
                            </RadzenStack>
                        </RadzenColumn>
                        <RadzenColumn Size="8">
                            <RadzenStack Style="width: 100%; height: 100%;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.End">
                                <RadzenText Visible=@(!IsEditMode) Text="@($"{PalletQR.NAME}")" Style="font-weight: 600;  color: black; font-size: 18px"></RadzenText>
                                <RadzenTextArea Visible=@(IsEditMode) class="custom-placeholder" Value="@PalletQR.NAME" Style="font-size: 18px; width: 100%; height: contain; border-width: 1px;"
                                                @oninput="@(async (args) => { PalletQR.NAME = args?.Value?.ToString()??string.Empty;})">
                                </RadzenTextArea>
                            </RadzenStack>
                        </RadzenColumn>
                    </RadzenRow>
                </RadzenStack>

                <!--PART No-->
                <RadzenStack Gap="15px" Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                    <RadzenRow Style="width: 100%; height: 100%">
                        <RadzenColumn Size="4">
                            <RadzenStack Style="width: 100%; height: 100%;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Start">
                                <RadzenText Text="PART No: " Style="font-size: 18px; font-weight: 700; height: contain; color: black"></RadzenText>
                            </RadzenStack>
                        </RadzenColumn>
                        <RadzenColumn Size="8">
                            <RadzenStack Style="width: 100%; height: 100%;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.End">
                                <RadzenText Visible=@(!IsEditMode) Text="@($"{PalletQR.PART_No}")" Style="font-weight: 600;  color: black; font-size: 18px"></RadzenText>
                                <RadzenTextArea Visible=@(IsEditMode) class="custom-placeholder" Value="@PalletQR.PART_No" Style="font-size: 18px; width: 100%; height: contain; border-width: 1px;"
                                                @oninput="@(async (args) => { PalletQR.PART_No = args?.Value?.ToString()??string.Empty;})">
                                </RadzenTextArea>
                            </RadzenStack>
                        </RadzenColumn>
                    </RadzenRow>
                </RadzenStack>

                <!--QUANTITY-->
                <RadzenStack Gap="15px" Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                    <RadzenRow Style="width: 100%; height: 100%">
                        <RadzenColumn Size="4">
                            <RadzenStack Style="width: 100%; height: 100%;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Start">
                                <RadzenText Text="QUANTITY: " Style="font-size: 18px; font-weight: 700; height: contain; color: black"></RadzenText>
                            </RadzenStack>
                        </RadzenColumn>
                        <RadzenColumn Size="8">
                            <RadzenStack Style="width: 100%; height: 100%;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.End">
                                <RadzenText Visible=@(!IsEditMode) Text="@($"{PalletQR.QUANTITY}")" Style="font-weight: 600;  color: black; font-size: 18px"></RadzenText>
                                <RadzenTextArea Visible=@(IsEditMode) class="custom-placeholder" Value="@PalletQR.QUANTITY" Style="font-size: 18px; width: 100%; height: contain; border-width: 1px;"
                                                @oninput="@(async (args) => { PalletQR.QUANTITY = args?.Value?.ToString()??string.Empty;})">
                                </RadzenTextArea>
                            </RadzenStack>
                        </RadzenColumn>
                    </RadzenRow>
                </RadzenStack>

                <!--PLT No-->
                <RadzenStack Gap="15px" Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                    <RadzenRow Style="width: 100%; height: 100%">
                        <RadzenColumn Size="4">
                            <RadzenStack Style="width: 100%; height: 100%;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Start">
                                <RadzenText Text="PLT No: " Style="font-size: 18px; font-weight: 700; height: contain; color: black"></RadzenText>
                            </RadzenStack>
                        </RadzenColumn>
                        <RadzenColumn Size="8">
                            <RadzenStack Style="width: 100%; height: 100%;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.End">
                                <RadzenText Visible=@(!IsEditMode) Text="@($"{PalletQR.PLT_No}")" Style="font-weight: 600;  color: black; font-size: 18px"></RadzenText>
                                <RadzenTextArea Visible=@(IsEditMode) class="custom-placeholder" Value="@PalletQR.PLT_No" Style="font-size: 18px; width: 100%; height: contain; border-width: 1px;"
                                                @oninput="@(async (args) => { PalletQR.PLT_No = args?.Value?.ToString()??string.Empty;})">
                                </RadzenTextArea>
                            </RadzenStack>
                        </RadzenColumn>
                    </RadzenRow>
                </RadzenStack>

                <!--MADE IN VIETNAM-->
                <RadzenStack Gap="15px" Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                    <RadzenStack Style="width: contain; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                        <RadzenText Text="MADE IN VIETNAM" Style="font-size: 24px; font-weight: 700; height: contain; color: black"></RadzenText>
                    </RadzenStack>
                </RadzenStack>

                <!--LOT-->
                <RadzenStack Gap="15px" Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                    <RadzenRow Style="width: 100%; height: 100%">
                        <RadzenColumn Size="4">
                            <RadzenStack Style="width: 100%; height: 100%;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Start">
                                <RadzenText Text="SỐ LOT: " Style="font-size: 18px; font-weight: 700; height: contain; color: black"></RadzenText>
                            </RadzenStack>
                        </RadzenColumn>
                        <RadzenColumn Size="8">
                            <RadzenStack Style="width: 100%; height: 100%;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.End">
                                <RadzenText Visible=@(!IsEditMode) Text="@($"{PalletQR.LOT_Number}")" Style="font-weight: 600;  color: black; font-size: 18px; white-space: pre-line"></RadzenText>
                                <RadzenTextArea Visible=@(IsEditMode) class="custom-placeholder" Value="@PalletQR.LOT_Number" Style="font-size: 18px; width: 100%; height: contain; border-width: 1px;"
                                                @oninput="@(async (args) => { PalletQR.LOT_Number = args?.Value?.ToString()??string.Empty;})">
                                </RadzenTextArea>
                            </RadzenStack>
                        </RadzenColumn>
                    </RadzenRow>
                </RadzenStack>
            </RadzenStack>
        </RadzenCard>
    </RadzenStack>

    <RadzenStack Gap="10" Style="width: 100%; height: contain; padding: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
        <RadzenButton Visible=@(!IsEditMode) Click="@(() => IsEditMode = true)" Text="Chỉnh sửa" Icon="edit" Style="--rz-icon-size: 18px;" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Primary" Shade="Shade.Light" />
        <RadzenButton Visible=@(IsEditMode) Click="@(() => IsEditMode = false)" Text="Lưu thay đổi" Icon="check" Style="--rz-icon-size: 18px;" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Success" Shade="Shade.Light" />
        <RadzenButton Visible=@(!IsEditMode) Click=@(() => PrintComponent()) Text="In" Icon="print" Style="--rz-icon-size: 18px;" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Primary" Shade="Shade.Dark" />
    </RadzenStack>
</RadzenStack>
@code {
    [Parameter]
    public object? PalletCode { get; set; }

    private PalletQR PalletQR = new();

    private bool IsEditMode = false;

    protected override async Task OnInitializedAsync()
    {
        if (PalletCode != null)
        {
            PalletQR = new()
                {
                    PO_No = "4840057717-00010",
                    NAME = "PM18A001,BRKT.,,",
                    PART_No = "A2556-218-01-000",
                    QUANTITY = "20 boxes (480pcs)",
                    PLT_No = "4 of 4",
                    LOT_Number = PalletCode?.ToString() ?? "IWK… 21.03.04 (3-BOX) \n IWK… 21.03.05 (17-BOX)"
                };
        }

        await base.OnInitializedAsync();
    }

    private async Task OpenPrintPage()
    {
        Common.TargetPalletQR = PalletQR;

        var url = $"print-pallet-code-template";

        // Get the absolute URL
        var absoluteUrl = NavigationManager.ToAbsoluteUri(url).ToString();

        await JSRuntime.InvokeVoidAsync("openInNewTab", absoluteUrl);

    }

    private async Task OpenPrintDialog()
    {
        await DialogService.OpenAsync<PrintQRPalletService>(null, new Dictionary<string, object>() { { "PalletQR", PalletQR } },
        new DialogOptions() { CloseDialogOnEsc = true, CloseDialogOnOverlayClick = true, ShowTitle = true, Width = "70%", Height = "90%", Resizable = true, Draggable = true, ShowClose = true, Style = "background-color: while; border-radius: 10px; padding: 0px;" });
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeVoidAsync("import", "/js/printQRPalletComponent.js");
    }

    private async Task PrintComponent()
    {
        await JSRuntime.InvokeVoidAsync("printQRPalletComponent", "printing-component");
    }
}
