@page "/mobiledsphieunk"
@attribute [Authorize(Roles = "User")]

@using ProcessManagement.Models.KHO_NVL.NhapKho
@using ProcessManagement.Services.SQLServer
@using Radzen.Blazor
@using Radzen
@using Microsoft.AspNetCore.Components

@inject NotificationService NotificationService
@inject DialogService DialogService
@inject NavigationManager NavigationManager
@inject SQLServerServices SQLServerServices

<style>
    .pnkho_IsSelected {
        border-style: solid;
        border-width: 2px;
        border-color: green;
    }
</style>

<RadzenStack Gap="0px" Style="height: 100%; width: 100%;" Orientation="Orientation.Vertical" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Start">
    <RadzenStack Gap="10px" Style="width: 100%; padding: 0; border-bottom: var(--rz-grid-cell-border) " Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
        <RadzenText Text="Danh sách phiếu nhập kho" Style="color: darkred; font-weight: 600; font-size: 17px; height: contain; width: contain; font-style: italic;"></RadzenText>
        <RadzenText Text="@($"( {DSPhieuNKs.Count} phiếu )")" Style="color: black; font-weight: 600; font-size: 16px; height: contain; width: contain; font-style: italic;"></RadzenText>
    </RadzenStack>
    <RadzenDataList Style="height: contain; width: 100%;" PagerPosition="PagerPosition.Top" PageSize="5" WrapItems="true" AllowPaging="true" Data="@DSPhieuNKs" TItem="PhieuNhapKho">
        <Template Context="pnk">
            <RadzenCard Style="width: 100%; height: contain; padding: 0" Variant="Variant.Flat">
                <RadzenCard class="@(IsPNKhoSelected(pnk))" Style="width: 100%; height: contain;" Variant="Variant.Filled">
                    <RadzenStack onclick="@(() => OnPhieuNhapKhoClick(pnk))" Style="width: 100%; height: 100%; padding: 0" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                        <RadzenCard Variant="@((pnk.PNKID.Value?.Equals(SelectedPNK.PNKID.Value)?? false)? Variant.Flat : Variant.Outlined)" Style="height: 100%; width: 100%; padding: 10px;">
                            <RadzenStack Style="width: 100%; height: 100%;" Gap="10px" Orientation=Orientation.Vertical AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                <RadzenStack Gap="0" Style="width: 100%; height: contain; padding-bottom: 5px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                                    <RadzenStack Style="height: contain; width: contain; min-width: 30px; border-radius: 5px; background-color: var(--rz-primary-lighter); padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                        <RadzenText Text="@((DSPhieuNKs.IndexOf(pnk) + 1).ToString())" Style="color: rgba(58,71,77); font-weight: 600; font-size: 15px"></RadzenText>
                                    </RadzenStack>
                                    <RadzenStack Gap="10px" Style="height: contain; width: contain; border-radius: 5px; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                        @if (pnk.isPXKDoneNhapKho)
                                        {
                                            <RadzenButton Click="@(() => OpenDSNVLofPhieuNhapKho(pnk))" Text="Xem" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Shade="Shade.Dark" Variant="Variant.Flat"
                                                          Style="border-radius: 5px; --rz-icon-size: 18px; height: 20px; width: contain; cursor: default; font-weight: 600" />

                                            <RadzenButton Text="Done" Icon="check" ButtonStyle="ButtonStyle.Success" Size="ButtonSize.Small" Shade="Shade.Dark" Variant="Variant.Outlined"
                                                          Style="border-radius: 5px; --rz-icon-size: 18px; height: 20px; width: contain; cursor: default; background-color: rgb(229,245,233); font-weight: 600" />
                                        }
                                        else
                                        {
                                            <RadzenButton Click="@(() => OpenDSNVLofPhieuNhapKho(pnk))" Text="Xem" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Shade="Shade.Dark" Variant="Variant.Flat"
                                                          Style="border-radius: 5px; --rz-icon-size: 18px; height: 20px; width: contain; cursor: default; font-weight: 600" />

                                            <RadzenButton Text="Not done" ButtonStyle="ButtonStyle.Warning" Size="ButtonSize.Small" Shade="Shade.Dark" Variant="Variant.Outlined"
                                                          Style="border-radius: 5px; --rz-icon-size: 18px; height: 20px; width: contain; cursor: default; background-color: rgb(254,243,220); font-weight: 600" />
                                        }
                                    </RadzenStack>
                                </RadzenStack>
                                <RadzenStack Gap="0" Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                                    <RadzenStack Style="width: 40%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                        <RadzenText Text="Mã phiếu: " Style="font-size: 16px; font-weight: 500; height: contain; color: rgba(58,71,77)"></RadzenText>
                                    </RadzenStack>
                                    <RadzenStack Style="width: 60%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End">
                                        <RadzenText Text="@($"{pnk.MaPhieuNK.Value?.ToString()}")" Style="color: darkblue; font-weight: 700; font-size: 18px"></RadzenText>
                                    </RadzenStack>
                                </RadzenStack>
                                <RadzenStack Gap="0" Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                                    <RadzenStack Style="width: 40%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                        <RadzenText Text="Người lập: " Style="font-size: 16px; font-weight: 500; height: contain; color: rgba(58,71,77)"></RadzenText>
                                    </RadzenStack>
                                    <RadzenStack Style="width: 60%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End">
                                        <RadzenText Text="@($"{pnk.NguoiLapPNK.Value?.ToString()}")" Style="font-size: 16px; font-weight: 600; height: contain; color: rgba(58,71,77)"></RadzenText>
                                    </RadzenStack>
                                </RadzenStack>
                                <RadzenStack Gap="0" Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                                    <RadzenStack Style="width: 40%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                        <RadzenText Text="Ngày lập: " Style="font-size: 16px; font-weight: 500; height: contain; color: rgba(58,71,77)"></RadzenText>
                                    </RadzenStack>
                                    <RadzenStack Style="width: 60%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End">
                                        <RadzenText Text="@($"{pnk.NgayLapPNK.Value?.ToString()}")" Style="font-size: 16px; font-weight: 600; height: contain; color: rgba(58,71,77)"></RadzenText>
                                    </RadzenStack>
                                </RadzenStack>
                            </RadzenStack>
                        </RadzenCard>
                    </RadzenStack>
                </RadzenCard>
            </RadzenCard>
        </Template>
    </RadzenDataList>
    <RadzenStack Visible="@(DSPhieuNKs.Count == 0)" Gap="10px" Style="height: contain; width: 100%; padding: 10px; padding-left: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
        <RadzenText Text="Chưa có phiếu nhập kho nào" Style="color: red; font-weight: 600; font-size: 16px; height: contain; width: contain;"></RadzenText>
    </RadzenStack>
</RadzenStack>

@code {
    private List<PhieuNhapKho> DSPhieuNKs = new();
    private PhieuNhapKho SelectedPNK = new();
    private bool isSearching = false;
    private static object? selectedpnkid;

    protected override async Task OnInitializedAsync()
    {
        await LoadDSachPhieuNhapKho();

        ReSelectPhieuNhapKho();

        await base.OnInitializedAsync();
    }

    private async Task LoadDSachPhieuNhapKho()
    {
        await Task.Run(() =>
        {
            DSPhieuNKs = SQLServerServices.GetListPhieuNhapKho();
            DSPhieuNKs.Reverse();
        });
    }

    private void ReSelectPhieuNhapKho()
    {
        if (selectedpnkid != null)
        {
            SelectedPNK = DSPhieuNKs.FirstOrDefault(pnkid => pnkid.PNKID.Value?.ToString() == selectedpnkid.ToString()) ?? new();
        }
        else
        {
            SelectedPNK = DSPhieuNKs.FirstOrDefault() ?? new();
        }
    }

    private string IsPNKhoSelected(PhieuNhapKho selectPNK)
    {
        if (SelectedPNK.PNKID.Value != null && SelectedPNK.PNKID.Value.Equals(selectPNK.PNKID.Value))
        {
            return "pnkho_IsSelected";
        }
        else return string.Empty;
    }

    private void OnPhieuNhapKhoClick(PhieuNhapKho selectPNK)
    {
        SelectedPNK = selectPNK;

        selectedpnkid = SelectedPNK.PNKID.Value;

        StateHasChanged();
    }

    private void OpenDSNVLofPhieuNhapKho(PhieuNhapKho selectPNK)
    {
        // await DialogService.OpenAsync<Mobile_DSachLNKofPNK>(null, new Dictionary<string, object>() { { "TargetPNK", selectPNK } },
        // new DialogOptions() { ShowTitle = false, Width = "100%", Height = "100%", Resizable = false, Draggable = false, ShowClose = false, Style = "background-color: while; border-radius: 0px; padding: 0px; margin: 0px" });

        if (selectPNK.PNKID.Value != null)
        {
            NavigationManager.NavigateTo($"/mobile_dsachnvlofpnk?pnkid={selectPNK.PNKID.Value}");
        }

    }
}
