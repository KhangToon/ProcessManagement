@using ProcessManagement.Commons
@using ProcessManagement.Models
@using ProcessManagement.Models.KHSXs
@using ProcessManagement.Services.SQLServer
@using Radzen.Blazor
@using Radzen

@inject DialogService DialogService
@inject NotificationService NotificationService
@inject TooltipService TooltipService
@inject SQLServerServices SQLServerServices

<style>
    .custom-placeholder::placeholder {
        color: #888888;
        font-size: 14px;
        font-style: italic;
    }

    .custom-datepicker input[type="text"]::placeholder {
        color: #888888;
        font-size: 14px;
        font-style: italic;
    }
</style>

<RadzenCard Style="height: 100%; width: 100%; padding: 5px" Variant="Variant.Flat">
    <RadzenStack Gap="0" Style="height: 100%; width: 100%; margin: 0; padding: 0; padding-bottom: 10px" Orientation="Orientation.Vertical" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Start">
        <RadzenStack Gap="20px" Style="height: contain; width: 100%; padding: 10px; background-color: var(--rz-primary-darker);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
            <RadzenText Text="THÊM MỚI SẢN PHẨM" Style="color: white; font-weight: 500; font-size: 18px"></RadzenText>
        </RadzenStack>

        <RadzenRow Gap="10px" Style="height: contain; width: 100%; border-top: var(--rz-grid-cell-border); padding: 0; overflow-y: scroll">
            <RadzenColumn Size="12" SizeMD="12" Style="height: 100%; width: 100%; padding: 15px; padding-right: 0">
                <RadzenStack Gap="10px" Style="height: contain; width: 100%;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                    <RadzenText Text="Nhập thông tin nguyên công" Style="color: var(--rz-primary-darker); font-size: 18px; font-weight: 600; height: contain; width: contain"></RadzenText>
                </RadzenStack>

                <RadzenCard Variant="Variant.Flat" Style="min-height: 300px; width: 100%; padding: 0px; margin-top: 10px; background-color: white">
                    <RadzenStack Style="height: 100%; width: 100%; padding: 10px;" Gap="0" Orientation="Orientation.Vertical">
                        <!--Hien thi thong tin mac dinh-->
                        <!--Ten cong doan-->
                        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start" Style="height: contain; width: 100%; padding: 5px; border-bottom: var(--rz-grid-cell-border);">
                            <RadzenStack Style="width: 20%;">
                                <RadzenText Text="@(NewNGType.NoiDungNG.DisplayName)" Style="color: var(--rz-primary-darker); font-size: 16px; font-weight: 600; height: contain; width: 100% "></RadzenText>
                            </RadzenStack>
                            <RadzenStack Style="width: 80%; padding-left: 10px; border-left: var(--rz-grid-cell-border);" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                <RadzenStack Gap="10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start" Style="height: contain; width: 100%; padding: 0px;">
                                    @{
                                        <RadzenStack Style="width: 50%;">
                                            <RadzenTextBox class="custom-placeholder" Placeholder="@($" * nhập { NewNGType.NoiDungNG.DisplayName}")" Value="@NewNGType.NoiDungNG.Value?.ToString()" Style="font-size: 16px; height: contain; border-width: 1px;"
                                                           @oninput="@(async (args) => { NewNGType.NoiDungNG.Value = args.Value; await DefaultThongTinNGType_ValueIsOK(NewNGType.NoiDungNG, true);})">
                                            </RadzenTextBox>
                                        </RadzenStack>

                                        <RadzenStack Style="width: 50%;">
                                            <RadzenAlert Visible="@(!NewNGType.NoiDungNG.IsCheckValueOK)" Text="@NewNGType.NoiDungNG.NotifyMess" Style="width: contain; height: 100%; font-size: 14px; padding: 2px; padding-left: 10px; margin: 0" AlertStyle="AlertStyle.Warning" AllowClose="false" Variant="Variant.Flat" Size="AlertSize.Small" Shade="Shade.Lighter"></RadzenAlert>
                                            <RadzenAlert Visible="@(NewNGType.NoiDungNG.IsCheckValueOK)" Text="@NewNGType.NoiDungNG.NotifyMess" Style="width: contain; height: 100%; font-size: 14px; padding: 2px; padding-left: 10px; margin: 0" AlertStyle="AlertStyle.Success" AllowClose="false" Variant="Variant.Flat" Size="AlertSize.Small" Shade="Shade.Lighter"></RadzenAlert>
                                        </RadzenStack>
                                    }
                                </RadzenStack>
                            </RadzenStack>
                        </RadzenStack>
                    </RadzenStack>
                </RadzenCard>
            </RadzenColumn>
        </RadzenRow>

        <RadzenStack Gap="10px" Style="height: contain; width: 100%; padding-right: 15px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End">
            <RadzenButton Disabled="@(!IsAllValueThongTinOK())" Click="@(() => OnAddnewNGType())" Style="width: contain; height: 80%;" Icon="check" Text="Xác nhận thêm" ButtonStyle="ButtonStyle.Primary" Shade="Shade.Default" Size="ButtonSize.Small" Variant="Variant.Filled" />
            <RadzenButton Style="width: contain; height: 80%;" Icon="close" Text="Thoát" ButtonStyle="ButtonStyle.Primary" Shade="Shade.Lighter" Size="ButtonSize.Small" Variant="Variant.Flat" Click="@(() => OnCancelAddnewNGType())" />
        </RadzenStack>
    </RadzenStack>
</RadzenCard>

@code {
    private NGType NewNGType = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    // Kiem tra thong tin mac dinh cua san pham da ton tai
    private async Task DefaultThongTinNGType_ValueIsOK(Propertyy propertyy, bool checkExisting)
    {
        await Task.Run(() =>
        {
            string value = propertyy.Value?.ToString() ?? string.Empty;
            string? dbname = propertyy.DBName ?? string.Empty;
            string? displayName = propertyy.DisplayName ?? string.Empty;

            if (!string.IsNullOrEmpty(value.Trim()))
            {
                if (checkExisting)
                {
                    bool isExisting = SQLServerServices.DefaultThongTinNGTypeValueIsExisting(value, dbname);

                    if (isExisting)
                    {
                        propertyy.IsCheckValueOK = false; propertyy.NotifyMess = $"{displayName} đã tồn tại";
                    }
                    else
                    {
                        propertyy.IsCheckValueOK = true; propertyy.NotifyMess = $"Giá trị hợp lệ";
                    }
                }
                else
                {
                    propertyy.IsCheckValueOK = true; propertyy.NotifyMess = $"Giá trị hợp lệ";
                }
            }
            else
            {
                propertyy.IsCheckValueOK = false; propertyy.NotifyMess = $"{displayName} không được để trống";
            }
        });
    }

    // Check trang thai gia tri cua tat ca truong thong tin isOK
    private bool IsAllValueThongTinOK()
    {
        bool isOK = true;

        isOK = (NewNGType.NoiDungNG.IsCheckValueOK == true);

        return isOK;
    }

    // Save new san pham to database
    private async Task OnAddnewNGType()
    {
        bool? comfirm = await DialogService.Confirm($"Xác nhận thêm nguyên công?", "Xác nhận", new ConfirmOptions() { OkButtonText = "Đồng ý", CancelButtonText = "Hủy" });

        if (comfirm.Value)
        {
            // Add new ngtype
            (int newNGid, string errorMess) = SQLServerServices.InsertNGType(NewNGType);

            if (newNGid > 0)
            {
                // Gan id
                NewNGType.NGID.Value = newNGid;
                int result = newNGid;

                // Recheck sau khi link danh sach thongtinngtype
                if (result < 0)
                {
                    SQLServerServices.DeleteNGType(newNGid);
                    await DialogService.Alert($"{errorMess}", "<strong><span style='color: red'>Error!</span></strong>", new AlertOptions() { OkButtonText = "OK", ShowClose = true });
                }
                else
                {
                    ShowNotification("Thêm nguyên công thành công!", NotificationSeverity.Success, 3000);

                    bool? thoat = await DialogService.Alert($"Thêm mới nguyên công thành công", "<strong><span style='color: green'>Success!</span></strong>", new AlertOptions() { OkButtonText = "Thoát", ShowClose = true });

                    if (thoat.Value)
                    {
                        DialogService.Close(NewNGType);
                    }
                }
            }
            else
            {
                await DialogService.Alert($"{errorMess}", "<strong><span style='color: red'>Error!</span></strong>", new AlertOptions() { OkButtonText = "OK", ShowClose = true });
            }
        }
    }

    // Cancel add new san pham
    private void OnCancelAddnewNGType()
    {
        DialogService.Close(null);
    }

    // Notification
    void ShowNotification(string message, NotificationSeverity notifytype, double time)
    {
        NotificationMessage notify = new NotificationMessage
            {
                Style = "position: fixed; top: 0; right: 0;",
                Severity = notifytype,
                Summary = message,
                Duration = time
            };

        NotificationService.Notify(notify);
    }
}
