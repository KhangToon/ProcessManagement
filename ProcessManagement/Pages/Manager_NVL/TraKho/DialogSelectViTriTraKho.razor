@using ProcessManagement.Commons
@using ProcessManagement.Models.KHO_NVL
@using ProcessManagement.Models.KHO_NVL.NhapKho
@using ProcessManagement.Services.SQLServer
@using Radzen.Blazor
@using Radzen
@using ProcessManagement.Models

@inject DialogService DialogService
@inject NotificationService NotificationService
@inject TooltipService TooltipService
@inject SQLServerServices SQLServerServices

<style>
    .vitri_IsSelected {
        border-style: solid;
        border-width: 2px;
        border-color: green;
    }

    .vtofnvl_IsSelectd {
        width: 100%;
        height: contain;
        padding: 5px;
        padding-right: 0px;
        background-color: var(--rz-success-light) !important;
    }

    .vtofnvl_UnSelectd {
        width: 100%;
        height: contain;
        padding: 5px;
        padding-right: 0px;
        cursor: pointer;
        background-color: white !important;
    }
</style>
<RadzenCard Variant="Variant.Filled" Style="height: 100%; width: 100%; padding: 10px; padding-right: 0">
    <RadzenStack Gap="10" Orientation="Orientation.Vertical" Style=" height: 100%; width: 100%; padding: 0px; padding-bottom: 10px " AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
        <RadzenStack Style="height: contain; width: 100%; padding-bottom: 5px; padding-left: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
            <RadzenStack Style="height: 100%; width: 20%; border-radius: 10px; background-color: var(--rz-success-lighter); padding: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                <RadzenText Text="CHỌN VỊ TRÍ LƯU KHO" Style="color: darkgreen; font-weight: 600; font-size: 18px"></RadzenText>
            </RadzenStack>
            <RadzenStack Gap="15px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Style="height: 100%; width: 60%;">
                <RadzenMenu Style="height: 100%; padding: 0; margin: 0; border-radius: 10px;">
                    <RadzenMenuItem Text="@($"Bộ lọc ( {DSachModeSearch[modeSearch]} )")" Style="font-weight: 600" Icon="search">
                        <RadzenMenuItem Text="@DSachModeSearch[0]" Click="@(() => { modeSearch = 0; DSVitris = SQLServerServices.GetAllViTriLuuTru(); } )" Icon="filter_alt"></RadzenMenuItem>
                        <RadzenMenuItem Text="@DSachModeSearch[1]" Click="@(() => modeSearch = 1)" Icon="filter_alt"></RadzenMenuItem>
                        <RadzenMenuItem Text="@DSachModeSearch[2]" Click="@(() => modeSearch = 2)" Icon="filter_alt"></RadzenMenuItem>
                        <RadzenMenuItem Text="@DSachModeSearch[3]" Click="@( async() => {modeSearch = 3; await GetFilterDSachVitriLuuTru(string.Empty);})" Icon="filter_alt"></RadzenMenuItem>
                        <RadzenMenuItem Text="@DSachModeSearch[4]" Click="@( async() => {modeSearch = 4; await GetFilterDSachVitriLuuTru(string.Empty);})" Icon="filter_alt"></RadzenMenuItem>
                    </RadzenMenuItem>
                </RadzenMenu>
                <RadzenTextBox @oninput="@((args) => GetFilterDSachVitriLuuTru(args?.Value?.ToString()?? string.Empty))" Placeholder="Nhập mã vị trí hoặc tên nguyên liệu để tìm kiếm" Style="border-radius: 20px; padding-left: 20px; border-width: 2px; border-color: var(--rz-primary-light); width: 50% "></RadzenTextBox>
                <RadzenButton Icon="search" ButtonStyle="ButtonStyle.Primary" Style="border-radius: 20px;" />
                <RadzenButton Style="border-radius: 20px;" Icon="autorenew" ButtonStyle="ButtonStyle.Primary" />
            </RadzenStack>
        </RadzenStack>
        <RadzenStack Style="height: auto; width: 100%; overflow-y: scroll" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
            <RadzenRow Gap="10px" Style="height: 100%; width: 100%; border-top: var(--rz-grid-cell-border); padding: 0; padding-top: 10px;">
                <RadzenColumn Size="12" SizeMD="8" Style="height: 100%; width: 100%; padding-top: 10px; padding-left: 10px; border-left: var(--rz-grid-cell-border);">
                    <RadzenRow class="rowbackground-style" Gap="10px" Style="height: 100%; width: 100%; border-radius: 0;">
                        <!--Danh sách vị trí trong kho-->
                        <RadzenColumn Size="12" SizeMD="5" Style="height: 100%; width: 100%; background-color: var(--rz-primary-lighter);">
                            <RadzenStack Style="height: 100%; width: 100%;" Gap="0px" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                <RadzenStack Gap="10px" Style="height: contain; width: 100%; padding: 10px; padding-left: 10px; border-bottom: var(--rz-grid-cell-border) " Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                    <RadzenText Text="Danh sách vị trí trong kho nguyên liệu" Style="color: darkred; font-weight: 600; font-size: 17px; height: contain; width: contain; font-style: italic;"></RadzenText>
                                    <RadzenText Text="@($"( {DSVitris.Count} vị trí )")" Style="color: black; font-weight: 600; font-size: 16px; height: contain; width: contain; font-style: italic;"></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="height: 100%; width: 100%; overflow-y: scroll" Gap="0px" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                    <RadzenDataList Style="height: contain; width: 100%;" Density="Density.Compact" PagerPosition="PagerPosition.Top" PageSize="9" WrapItems="true" AllowPaging="true" Data="@DSVitris" TItem="VitriLuuTru">
                                        <Template Context="vitri">
                                            <RadzenCard Style="width: 150px; height: contain; padding: 0; margin-right: 0" Variant="Variant.Flat">
                                                <RadzenStack Style="height: 100%; width: 100%;" Gap="0px" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                    <RadzenCard class="@(IsVitriSelected(vitri))" Style="width: 100%; height: contain; padding: 10px" Variant="Variant.Filled">
                                                        <RadzenStack onclick="@(() => OnViTriLuuTruClick(vitri))" Style="width: contain; height: 100%; padding: 0" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                            <RadzenCard Style="height: 100%; width: 100%; padding: 10px;" Variant="@((vitri.VTID.Value?.Equals(SelectedViTri.VTID.Value)?? false)? Variant.Flat : Variant.Outlined)">
                                                                <RadzenStack Style="width: 100%; height: 100%;" Gap="10px" Orientation=Orientation.Vertical AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                    <RadzenStack Gap="10px" Style="width: 100%; height: contain;" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                        <RadzenStack Style="height: contain; width: contain; min-width: 30px; border-radius: 5px; background-color: var(--rz-primary-lighter); padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                            <RadzenText Text="@((DSVitris.IndexOf(vitri) + 1).ToString())" Style="color: rgba(58,71,77); font-weight: 600; font-size: 15px"></RadzenText>
                                                                        </RadzenStack>
                                                                        <RadzenStack Style="width: 100%; height: contain; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                            <RadzenText Text="@($"{vitri.MaViTri.Value?.ToString()}")" Style="color: darkblue; font-weight: 700; font-size: 18px"></RadzenText>
                                                                        </RadzenStack>
                                                                    </RadzenStack>
                                                                    <RadzenStack Gap="10" Style="width: 100%; height: contain; padding-bottom: 5px" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">

                                                                        <RadzenStack Style="height: contain; width: 100%; border-radius: 5px; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                            @if (vitri.SLConTrong > 0)
                                                                            {
                                                                                <RadzenButton Text="@($"Trống {((vitri.SLConTrong > 0)? $"({vitri.SLConTrong})" : string.Empty)}")" ButtonStyle="ButtonStyle.Success" Size="ButtonSize.Small" Shade="Shade.Dark" Variant="Variant.Outlined"
                                                                                              Style="border-radius: 5px; --rz-icon-size: 18px; height: contain; width: 100%; cursor: default; background-color: rgb(229,245,233); font-weight: 600" />
                                                                            }
                                                                            else
                                                                            {
                                                                                <RadzenButton Text="Đầy" Icon="block" ButtonStyle="ButtonStyle.Warning" Size="ButtonSize.Small" Shade="Shade.Dark" Variant="Variant.Outlined"
                                                                                              Style="border-radius: 5px; --rz-icon-size: 18px; height: contain; width: 100%; cursor: default; background-color: rgb(254,243,220); font-weight: 600" />
                                                                            }
                                                                        </RadzenStack>
                                                                    </RadzenStack>
                                                                </RadzenStack>
                                                            </RadzenCard>
                                                        </RadzenStack>
                                                    </RadzenCard>

                                                </RadzenStack>
                                            </RadzenCard>
                                        </Template>
                                    </RadzenDataList>

                                </RadzenStack>
                            </RadzenStack>
                        </RadzenColumn>
                        <!--Thông tin chi tiết vị trí-->
                        <RadzenColumn Size="12" SizeMD="7" Style="height: 100%; width: 100%; padding-right: 0">
                            <RadzenStack Gap="0" Style="height: 100%; width: 100%; padding: 5px; padding-right: 0; padding-top: 10px; border-radius: 10px;" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                <RadzenStack Gap="10px" Style="height: contain; width: 100%; padding: 10px; border-bottom: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                    <RadzenText Text="Thông tin chi tiết vị trí" Style="color: black; font-weight: 600; font-size: 17px; height: contain; width: contain; font-style: italic;"></RadzenText>
                                    <RadzenText Visible="@(SelectedViTri.VTID.Value != null)" Text="@($"( {SelectedViTri.MaViTri.Value?.ToString()} )")" Style="color: darkblue; font-weight: 700; font-size: 18px; height: contain; width: contain; font-style: italic;"></RadzenText>
                                    <RadzenText Visible="@(SelectedViTri.VTID.Value == null)" Text="Chọn ô vị trí để hiển thị thông tin" Style="color: red; font-weight: 600; font-size: 17px; height: contain; width: contain; font-style: italic;"></RadzenText>
                                </RadzenStack>
                                <RadzenStack Visible="@(SelectedViTri.VTID.Value != null)" Style="height: 100%; width: 100%; padding: 5px; padding-top: 10px; padding-right: 0; overflow-y: scroll" Gap="10px" Orientation="Orientation.Vertical">
                                    <RadzenStack Gap="0" Style="height: contain; width: 100%; background-color: var(--rz-primary-lighter); padding: 5px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                                        <RadzenStack Gap="0" Style="width: contain; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                            <RadzenStack Style="width: contain; height: contain; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                <RadzenText Text="Sức chứa: " Style="font-weight: 500; font-size: 16px"></RadzenText>
                                            </RadzenStack>
                                            <RadzenStack Style="width: contain; height: contain; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                <RadzenText Text="@($"{SelectedViTri.VTSucChua.Value?.ToString()}")" Style="color: black; font-weight: 600; font-size: 16px"></RadzenText>
                                            </RadzenStack>
                                        </RadzenStack>
                                        <RadzenStack Gap="10px" Style="height: contain; width: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                                            @if (SelectedViTri.SLConTrong == 0)
                                            {
                                                <RadzenButton Text="@($"Số lượng trống: {SelectedViTri.SLConTrong}")" ButtonStyle="ButtonStyle.Warning" Size="ButtonSize.Small" Shade="Shade.Dark" Variant="Variant.Outlined"
                                                              Style="border-radius: 5px; --rz-icon-size: 18px; height: 20px; width: contain; cursor: default; background-color: rgb(254,243,220); font-weight: 600" />
                                            }
                                            else
                                            {
                                                <RadzenButton Text="@($"Số lượng trống: {SelectedViTri.SLConTrong}")" ButtonStyle="ButtonStyle.Success" Size="ButtonSize.Small" Shade="Shade.Light" Variant="Variant.Flat"
                                                              Style="border-radius: 5px; --rz-icon-size: 18px; height: 20px; width: contain; cursor: default; font-weight: 600" />
                                            }
                                        </RadzenStack>
                                        <RadzenStack Gap="0" Style="width: contain; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                            <RadzenStack Style="width: contain; height: contain; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                <RadzenText Text="Đã dùng: " Style="font-size: 16px; font-weight: 500; height: contain;"></RadzenText>
                                            </RadzenStack>
                                            <RadzenStack Style="width: contain; height: contain; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                <RadzenText Text="@($"{(int.TryParse(SelectedViTri.VTSucChua.Value?.ToString(), out int sc)? sc : 0) - SelectedViTri.SLConTrong}")" Style="font-size: 16px; font-weight: 600; height: contain; color: rgba(58,71,77)"></RadzenText>
                                            </RadzenStack>
                                        </RadzenStack>
                                    </RadzenStack>

                                    <!--Vị trí lưu-->
                                    <RadzenStack Gap="15px" Style="height: contain; width: 100%; padding: 5px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                        <RadzenStack Gap="0" Style="height: contain; width: 30%; padding-bottom: 5px; padding-left: 10px; border-right: var(--rz-grid-cell-border); border-bottom: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                            <RadzenStack Style="width: 55%;">
                                                <RadzenText Text="Vị trí hàng" Style="font-size: 16px; font-weight: 600; height: contain; width: 100% "></RadzenText>
                                            </RadzenStack>
                                            <RadzenStack Style="width: 30%; height: 100%; padding-left: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                <RadzenText Text="@SelectedViTri.ViTriHang.Value?.ToString()" Style="font-size: 20px; font-weight: 600; height: contain;"></RadzenText>
                                            </RadzenStack>
                                        </RadzenStack>
                                        <RadzenStack Gap="0" Style="height: contain; width: 30%; padding-bottom: 5px; padding-left: 10px; border-right: var(--rz-grid-cell-border); border-bottom: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                            <RadzenStack Style="width: 55%;">
                                                <RadzenText Text="Vị trí kệ" Style="font-size: 16px; font-weight: 600; height: contain; width: 100% "></RadzenText>
                                            </RadzenStack>
                                            <RadzenStack Style="width: 30%; height: 100%; padding-left: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                <RadzenText Text="@SelectedViTri.ViTriKe.Value?.ToString()" Style="font-size: 20px; font-weight: 600; height: contain;"></RadzenText>
                                            </RadzenStack>
                                        </RadzenStack>
                                        <RadzenStack Gap="0" Style="height: contain; width: 30%; padding-bottom: 5px; padding-left: 10px; border-bottom: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                            <RadzenStack Style="width: 55%;">
                                                <RadzenText Text="Vị trí cột" Style="font-size: 16px; font-weight: 600; height: contain; width: 100% "></RadzenText>
                                            </RadzenStack>
                                            <RadzenStack Style="width: 30%; height: 100%; padding-left: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                <RadzenText Text="@SelectedViTri.ViTriCot.Value?.ToString()" Style="font-size: 20px; font-weight: 600; height: contain;"></RadzenText>
                                            </RadzenStack>
                                        </RadzenStack>
                                    </RadzenStack>

                                    <!--Danh sách nguyên liệu-->
                                    <RadzenStack Gap="20px" Style="height: contain; width: 100%; background-color: var(--rz-primary-lighter); padding: 5px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                                        <RadzenStack Gap="10px" Style="height: contain; width: contain; padding-left: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                            <RadzenText Text="Danh sách LOT nguyên vật liệu " Style="color: black; font-weight: 600; font-size: 16px"></RadzenText>
                                        </RadzenStack>
                                        <RadzenStack Gap="10px" Style="height: contain; width: contain; padding-left: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                            <RadzenButton Text="@($"Số lượng: {SelectedViTri.DSachViTriofNVL.Count}")" Size="ButtonSize.Small" Shade="Shade.Lighter" Variant="Variant.Outlined"
                                                          Style="border-radius: 5px; --rz-icon-size: 18px; height: 20px; width: 100%; cursor: default; color: white; background-color: rgb(131,144,148); font-weight: 600" />
                                        </RadzenStack>
                                    </RadzenStack>
                                    <RadzenStack Style="width: 100%; height: contain; padding: 0" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                        <RadzenCard Variant="Variant.Outlined" Style="height: contain; width: 100%; padding: 10px; margin-bottom: 10px">
                                            <RadzenStack Gap="5px" Orientation="Orientation.Vertical" Style=" height: contain; width: 100%; padding: 0px;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                <RadzenStack Gap="5px" Orientation="Orientation.Vertical" Style=" height: contain; width: 100%; padding-right: 0;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                    <RadzenCard Variant="Variant.Flat" Style="width: 100%; height: contain; padding: 5px; padding-right: 0px; background-color: var(--rz-primary-darker)">
                                                        <RadzenStack Style="width: 100%; height: 100%; " Gap="0" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                            <RadzenStack Style="width: 5%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                <RadzenText Text="#" Style="color: white; font-weight: 500; font-size: 14px"></RadzenText>
                                                            </RadzenStack>
                                                            <RadzenStack Style="width: 20%; height: contain; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                <RadzenText Text="LOT" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                                            </RadzenStack>
                                                            <RadzenStack Style="width: 25%; height: contain; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                <RadzenText Text="Tên NVL" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                                            </RadzenStack>
                                                            <RadzenStack Style="width: 25%; height: contain; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                <RadzenText Text="Ngày nhập" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                                            </RadzenStack>
                                                            <RadzenStack Style="width: 25%; height: contain; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                <RadzenText Text="Hiện có ở vị trí" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                                            </RadzenStack>
                                                        </RadzenStack>
                                                    </RadzenCard>
                                                    @{
                                                        if (SelectedViTri.DSachViTriofNVL.Count > 0)
                                                        {
                                                            foreach (var vitriofNVL in SelectedViTri.DSachViTriofNVL)
                                                            {
                                                                int slhienco = int.TryParse(vitriofNVL.VTNVLSoLuong.Value?.ToString(), out int slhc) ? slhc : 0;

                                                                <RadzenCard onclick="@(() => {OnVTofNVLSelected(vitriofNVL, slhienco);})" Variant="Variant.Outlined" class="@(((IsVTofNVLSelected(vitriofNVL))? "vtofnvl_IsSelectd" : "vtofnvl_UnSelectd"))">
                                                                    <RadzenStack Style="width: 100%; height: 100%" Gap="0" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                                        <RadzenStack Style="width: 5%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                            <RadzenText Text="@($"{(SelectedViTri.DSachViTriofNVL.IndexOf(vitriofNVL) + 1).ToString()}")" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                                                        </RadzenStack>
                                                                        <RadzenStack Style="width: 20%; height: contain; border-left: var(--rz-grid-cell-border); border-right: var(--rz-grid-cell-border); padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                            <RadzenStack Style="height: 30px; width: 100%; border-radius: 5px; background-color: var(--rz-secondary-lighter); padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                                <RadzenText Text="@($"{vitriofNVL.LotVitri.Value?.ToString()}")" Style="color: rgba(58, 71, 77); font-weight: 600; font-size: 15px"></RadzenText>
                                                                            </RadzenStack>
                                                                        </RadzenStack>
                                                                        <RadzenStack Style="width: 25%; height: contain; border-left: var(--rz-grid-cell-border); border-right: var(--rz-grid-cell-border); padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                            <RadzenStack Style="height: 30px; width: 100%; border-radius: 5px; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                                <RadzenText Text="@($"{((slhienco > 0)? vitriofNVL.NgLieuInfor.MaNVL.Value?.ToString() : "___")}")" Style="color: black; font-weight: 600; font-size: 16px"></RadzenText>
                                                                            </RadzenStack>
                                                                        </RadzenStack>
                                                                        <RadzenStack Style="width: 25%; height: contain; padding-left: 10px; padding-right: 10px; border-right: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                            <RadzenStack Style="height: 30px; width: 100%; border-radius: 5px; padding: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                                <RadzenText Text="@($"{((slhienco > 0)? vitriofNVL.NgayNhapKho.Value?.ToString() : "___")}")" Style="color: black; font-weight: 600; font-size: 15px"></RadzenText>
                                                                            </RadzenStack>
                                                                        </RadzenStack>
                                                                        <RadzenStack Style="width: 25%; height: contain; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                            <RadzenStack Style="height: 30px; width: 100%; border-radius: 5px; padding: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                                <RadzenText Text="@($"{slhienco} {((slhienco > 0)? ("(" + vitriofNVL.NgLieuInfor.DonViTinh.Value?.ToString() + ")") : string.Empty)}")" Style="color: darkgreen; font-weight: 600; font-size: 15px"></RadzenText>
                                                                            </RadzenStack>
                                                                        </RadzenStack>
                                                                        <RadzenStack Visible="@(IsVTofNVLSelected(vitriofNVL))" Style="width: 25%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                            <RadzenStack Style="height: 30px; width: 100%; border-radius: 5px; padding: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                                <RadzenButton Click="OnPickVitriLuu" Text="Chọn" Icon="add" ButtonStyle="ButtonStyle.Warning" Size="ButtonSize.Small" Shade="Shade.Dark" Variant="Variant.Filled"
                                                                                              Style="border-radius: 5px; --rz-icon-size: 18px; background-color: Highlight; height: contain; min-height: 20px; width: contain;" />
                                                                            </RadzenStack>
                                                                        </RadzenStack>
                                                                    </RadzenStack>
                                                                </RadzenCard>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <RadzenStack Style="width: 100%; height: contain; " Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                <RadzenText Text="Chưa có nguyên liệu trong vị trí này" Style="font-size: 16px; font-weight: 500; height: contain; color: red"></RadzenText>
                                                            </RadzenStack>
                                                        }
                                                    }
                                                </RadzenStack>
                                            </RadzenStack>
                                        </RadzenCard>
                                    </RadzenStack>
                                </RadzenStack>
                            </RadzenStack>
                        </RadzenColumn>

                    </RadzenRow>
                </RadzenColumn>
                <!--Danh sách vị trí đã chọn-->
                <RadzenColumn Size="12" SizeMD="4" Style="height: 100%; width: 100%;">
                    <RadzenStack Gap="0" Style="height: 100%; width: 100%; padding: 5px; border-radius: 10px;" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                        <RadzenStack Visible="@(SelectedViTri.VTID.Value != null)" Style="height: 100%; width: 100%; padding: 5px; padding-top: 5px; padding-right: 0;" Gap="5px" Orientation="Orientation.Vertical">

                            @{
                                // Tong so luong can nhap kho
                                int slallnhapkho = int.TryParse(TarGetLNK.LNKSoLuong.Value?.ToString(), out int slall) ? slall : 0;
                                // Tinh tong so luong nhap kho sau moi lan tao lenh moi
                                int slalldachidinh = 0;
                                foreach (var lnk in dsViTriNhapKho)
                                {
                                    int lnkslnhap = int.TryParse(lnk.LNKSoLuong.Value?.ToString(), out int lnksln) ? lnksln : 0;
                                    slalldachidinh += lnkslnhap;
                                }
                            }

                            <RadzenStack Gap="10px" Style="height: contain; width: 100%; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                <RadzenText Text="Chỉ định vị trí nhập kho" Style="color: darkred; font-weight: 600; font-size: 16px; height: contain; width: contain; font-style: italic;"></RadzenText>
                                <RadzenText Text="@($"(nguyên liệu {TarGetLNK.TargetNgLieu.MaNVL.Value?.ToString()})")" Style="color: black; font-weight: 600; font-size: 16px; height: contain; width: contain; font-style: italic;"></RadzenText>
                            </RadzenStack>

                            <RadzenStack Gap="10px" Style="height: contain; width: 100%; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                <RadzenText Text="Số lượng cần chỉ định: " Style="font-weight: 600; font-size: 16px; height: contain; width: contain; font-style: italic;"></RadzenText>
                                <RadzenText Text="@($"{slallnhapkho}")" Style="color: black; font-weight: 600; font-size: 16px; height: contain; width: contain; font-style: italic;"></RadzenText>
                            </RadzenStack>

                            <!--Hiển thị trạng thái chỉ định số lượng-->
                            <RadzenStack Gap="20px" Style="height: contain; width: 100%; padding: 10px; padding-left: 0px; border-top: var(--rz-grid-cell-border); border-bottom: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                                <RadzenButton Text="@($"Số lượng đã chỉ định ({slalldachidinh}/{SLallcanchidinh})")" ButtonStyle="@((slalldachidinh == SLallcanchidinh && slalldachidinh > 0)? ButtonStyle.Success : ButtonStyle.Warning)" Size="ButtonSize.Small" Shade="Shade.Lighter" Variant="@((slalldachidinh == SLallcanchidinh && slalldachidinh > 0)? Variant.Filled : Variant.Filled)"
                                              Style="border-radius: 5px; --rz-icon-size: 18px; min-height: 20px; height: contain; width: contain; cursor: default; font-weight: 600" />
                                <RadzenButton Text="Lưu và thoát" Disabled="@(!(slalldachidinh > 0 && slallnhapkho == slalldachidinh))" Click="@(() => { OnSaveSelectedVitri_andClose();})" Icon="check" ButtonStyle="ButtonStyle.Success" Size="ButtonSize.Small" Shade="Shade.Darker" Variant="Variant.Filled"
                                              Style="border-radius: 5px; --rz-icon-size: 18px; min-height: 20px; height: contain; width: contain;" />
                            </RadzenStack>

                            <RadzenStack Gap="10px" Style="height: contain; width: contain; padding: 0; padding-top: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                <RadzenText Text="Danh sách vị trí đã chọn " Style="font-weight: 600; font-size: 16px"></RadzenText>
                            </RadzenStack>

                            <!--Add new vitri luu tru-->
                            <RadzenCard Visible="false" Variant="Variant.Outlined" Style="width: 100%; height: contain; padding: 7px; padding-right: 0px; background-color: white">
                                <RadzenStack Style="width: 100%; height: 100%" Gap="10px" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                    <RadzenStack Gap="5px" Style="width: 20%; height: contain; border-right: var(--rz-grid-cell-border); padding-left: 10px; padding-right: 10px" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                        <RadzenStack Style="height: contain; width: 100%; border-radius: 5px; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                            <RadzenText Text="Mã vị trí" Style="color: rgba(58, 71, 77); font-weight: 500; font-size: 15px"></RadzenText>
                                        </RadzenStack>
                                        <RadzenStack Style="height: 35px; width: 100%; border-radius: 5px; background-color: var(--rz-secondary-lighter); padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                            <RadzenText Text="@($"{temLNK.TargertVitri.MaViTri.Value?.ToString()}")" Style="color: rgba(58, 71, 77); font-weight: 600; font-size: 15px"></RadzenText>
                                        </RadzenStack>
                                    </RadzenStack>

                                    <RadzenStack Gap="5px" Style="width: 20%; height: contain; border-right: var(--rz-grid-cell-border); padding-right: 10px" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                        <RadzenStack Style="height: contain; width: 100%; border-radius: 5px; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                            <RadzenText Text="LOT vị trí" Style="color: rgba(58, 71, 77); font-weight: 500; font-size: 15px"></RadzenText>
                                        </RadzenStack>
                                        <RadzenStack Style="height: 35px; width: 100%; border-radius: 5px; background-color: var(--rz-secondary-lighter); padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                            <RadzenText Text="@($"{temLNK.LotVitri.Value?.ToString()}")" Style="color: rgba(58, 71, 77); font-weight: 600; font-size: 15px"></RadzenText>
                                        </RadzenStack>
                                    </RadzenStack>

                                    <RadzenStack Gap="5px" Style="width: 20%; height: contain;" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                        <RadzenStack Style="height: contain; width: 100%; border-radius: 5px; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                            <RadzenText Text="Số lượng nhập" Style="color: rgba(58, 71, 77); font-weight: 500; font-size: 15px"></RadzenText>
                                        </RadzenStack>
                                        <RadzenStack Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                            <RadzenNumeric Placeholder="@($"*Nhập số lượng")" TValue="int" TextAlign=TextAlign.Center Disabled="@(!temLNK.isEditingLNK)"
                                                           Min="1" Max="temLNK.TargertVitri.SLConTrong"
                                                           Value="@(int.TryParse(temLNK.LNKSoLuong.Value?.ToString(), out int slvt)? slvt : 0)"
                                                           ValueChanged="@((args) => { temLNK.LNKSoLuong.Value = args; })"
                                                           Style="--rz-input-font-size: 18px; font-weight: 600; height: 35px; border-width: 1px; width: 100%" />
                                        </RadzenStack>
                                    </RadzenStack>

                                    <RadzenStack Gap="5px" Style="width: 30%; height: 100%; padding-right: 10px" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End">
                                        <RadzenStack Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                            <RadzenButton Visible="@(!temLNK.isEditingLNK)" Icon="edit" Click="(() => {isChidinhSLok = false; temLNK.isEditingLNK = !(temLNK.isEditingLNK);} )"
                                                          ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Shade="Shade.Lighter" Style="border-radius: 5px; --rz-icon-size: 18px; height: 35px; width: 35px" />
                                            <RadzenButton Visible="@(temLNK.isEditingLNK)" Icon="check" Click="(async () => {await OnConfirmAddNewViTri(temLNK, false);})"
                                                          ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Shade="Shade.Lighter" Style="border-radius: 5px; --rz-icon-size: 18px; height: 35px; width: 35px" />
                                            <RadzenButton Visible="@(temLNK.isEditingLNK)" Icon="delete" Click="(() => { OnDeleteViTri(temLNK);})"
                                                          ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Shade="Shade.Lighter" Style="border-radius: 5px; --rz-icon-size: 18px; height: 35px; width: 35px" />
                                        </RadzenStack>
                                    </RadzenStack>
                                </RadzenStack>
                            </RadzenCard>

                            <!--Danh sách vị trí đã chọn-->
                            <RadzenStack Style="width: 100%; height: contain; padding: 0" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                <RadzenCard Variant="Variant.Flat" Style="height: contain; width: 100%; padding: 10px; margin-bottom: 10px">
                                    <RadzenStack Gap="5px" Orientation="Orientation.Vertical" Style=" height: contain; width: 100%; padding: 0px;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                        <RadzenStack Gap="5px" Orientation="Orientation.Vertical" Style=" height: contain; width: 100%; max-height: 350px; padding-right: 0;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                            <RadzenCard Variant="Variant.Flat" Style="width: 100%; height: contain; padding: 5px; padding-right: 0px; background-color: var(--rz-primary-darker)">
                                                <RadzenStack Style="width: 100%; height: 100%; " Gap="0" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                    <RadzenStack Style="width: 5%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                        <RadzenText Text="#" Style="color: white; font-weight: 500; font-size: 14px"></RadzenText>
                                                    </RadzenStack>
                                                    <RadzenStack Style="width: 25%; height: contain; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                        <RadzenText Text="Mã vị trí" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                                    </RadzenStack>
                                                    <RadzenStack Style="width: 25%; height: contain; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                        <RadzenText Text="LOT vị trí" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                                    </RadzenStack>
                                                    <RadzenStack Style="width: 30%; height: contain; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                        <RadzenText Text="Số lượng nhập" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                                    </RadzenStack>
                                                    <RadzenStack Style="width: 10%; height: contain; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                    </RadzenStack>
                                                </RadzenStack>
                                            </RadzenCard>
                                            @{
                                                if (dsViTriNhapKho.Count > 0)
                                                {
                                                    foreach (var vitriNK in dsViTriNhapKho)
                                                    {
                                                        <RadzenCard class="rz-shadow-4" Variant="Variant.Filled" Style="width: 100%; height: contain; padding: 5px; padding-right: 0px; background-color: white">
                                                            <RadzenStack Style="width: 100%; height: 100%" Gap="0" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                                <RadzenStack Style="width: 5%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                    <RadzenText Text="@($"{(dsViTriNhapKho.IndexOf(vitriNK) + 1).ToString()}")" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                                                </RadzenStack>
                                                                <RadzenStack Style="width: 25%; height: contain; border-left: var(--rz-grid-cell-border); border-right: var(--rz-grid-cell-border); padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                    <RadzenStack Style="height: 35px; width: 100%; border-radius: 5px; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                        <RadzenText Text="@($"{vitriNK.TargertVitri.MaViTri.Value?.ToString()}")" Style="color: rgba(58, 71, 77); font-weight: 600; font-size: 16px"></RadzenText>
                                                                    </RadzenStack>
                                                                </RadzenStack>
                                                                <RadzenStack Style="width: 25%; height: contain; border-left: var(--rz-grid-cell-border); border-right: var(--rz-grid-cell-border); padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                    <RadzenStack Style="height: 35px; width: 100%; border-radius: 5px; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                        <RadzenText Text="@($"{vitriNK.LotVitri.Value?.ToString()}")" Style="color: rgba(58, 71, 77); font-weight: 600; font-size: 16px"></RadzenText>
                                                                    </RadzenStack>
                                                                </RadzenStack>
                                                                <RadzenStack Style="width: 25%; height: contain; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                    <RadzenStack Visible="@(false)" Style="width: 100%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                                        <RadzenNumeric Placeholder="@($"*Nhập số lượng")" TValue="int" TextAlign=TextAlign.Center Disabled="@(!vitriNK.isEditingLNK)"
                                                                                       Min="1" Max="vitriNK.TargertVitri.SLConTrong"
                                                                                       Value="@(int.TryParse(vitriNK.LNKSoLuong.Value?.ToString(), out int slvt)? slvt : 0)"
                                                                                       ValueChanged="@((args) => { vitriNK.LNKSoLuong.Value = args; })"
                                                                                       Style="--rz-input-font-size: 18px; font-weight: 600; height: 35px; border-width: 1px; width: 100%" />
                                                                    </RadzenStack>
                                                                    <RadzenStack Visible="@(!vitriNK.isEditingLNK)" Style="height: 30px; width: 100%; border-radius: 5px; padding: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                        <RadzenText Text="@($"{vitriNK.LNKSoLuong.Value?.ToString()} ({vitriNK.TargetNgLieu.DonViTinh.Value?.ToString()})")" Style="color: darkgreen; font-weight: 600; font-size: 15px"></RadzenText>
                                                                    </RadzenStack>
                                                                </RadzenStack>
                                                                <RadzenStack Gap="5px" Style="width: contain; height: 100%; padding-left: 10px " Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End">
                                                                    <RadzenButton Visible="@(false)" Text="Edit" Icon="edit" Click="(() => { isChidinhSLok = false; vitriNK.isEditingLNK = !(vitriNK.isEditingLNK);} )"
                                                                                  ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Shade="Shade.Lighter" Style="border-radius: 5px; --rz-icon-size: 18px; height: 35px; " />
                                                                    <RadzenButton Visible="@(vitriNK.isEditingLNK)" Text="Lưu" Icon="check" Click="(async () => {await OnConfirmEditSlgViTri(vitriNK, true);})"
                                                                                  ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Shade="Shade.Lighter" Style="border-radius: 5px; --rz-icon-size: 18px; height: 35px; width: contain" />
                                                                    <RadzenButton Visible="@(true)" Icon="delete" Click="(() => { OnDeleteViTri(vitriNK);})"
                                                                                  ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Shade="Shade.Lighter" Style="border-radius: 5px; --rz-icon-size: 18px; height: 35px;" />
                                                                </RadzenStack>
                                                            </RadzenStack>
                                                        </RadzenCard>
                                                    }
                                                }
                                                else
                                                {
                                                    <RadzenStack Style="width: 100%; height: contain; " Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                        <RadzenText Text="Chưa chỉ định vị trí lưu kho cho nguyên liệu, hãy chọn vị trí." Style="font-size: 16px; font-weight: 500; height: contain; color: red"></RadzenText>
                                                    </RadzenStack>
                                                }
                                            }
                                        </RadzenStack>
                                    </RadzenStack>
                                </RadzenCard>
                            </RadzenStack>
                        </RadzenStack>
                    </RadzenStack>
                </RadzenColumn>
            </RadzenRow>
        </RadzenStack>
        <RadzenStack Gap="10px" Style="height: contain; width: 100%; padding-top: 10px; padding-right: 10px; border-top: var(--rz-grid-cell-border) " Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End">
            <RadzenStack Gap="10px" Style="height: 100%; width: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                <RadzenButton Click="@(() => { DialogService.Close(null);})" Style="width: 120px;" Icon="close" Text="Đóng" ButtonStyle="ButtonStyle.Primary" Shade="Shade.Lighter" Size="ButtonSize.Small" Variant="Variant.Flat" />
            </RadzenStack>
        </RadzenStack>
    </RadzenStack>
</RadzenCard>





@code {
    [Parameter]
    public LenhNhapKho TarGetLNK { get; set; } = new();

    [Parameter]
    public List<ViTriofNVL> DSVitriDaluu { get; set; } = new();
    [Parameter]
    public List<LenhNhapKho> DSLenhNKofAnotherNVL { get; set; } = new(); // danh sach lenh nhap kho cua nhung ma khac

    private List<VitriLuuTru> DSVitris = new();
    private VitriLuuTru SelectedViTri = new();
    private Dictionary<int, string> DSachModeSearch = new() { { 0, "Tất cả vị trí" }, { 1, "Mã vị trí" }, { 2, "Tên nguyên liệu" }, { 3, "Vị trí đầy" }, { 4, "Vị trí còn trống" } };
    private int modeSearch = 4;
    private List<LenhNhapKho> dsViTriNhapKho = new();
    private LenhNhapKho temLNK = new();
    private bool isChidinhSLok = false;

    //private int slalldachidinh = 0;
    private int SLallcanchidinh = 0;

    private ViTriofNVL SelectedVTofNVL = new();

    protected override async Task OnInitializedAsync()
    {
        // tong so luong can chi dinh cua NVL
        SLallcanchidinh = int.TryParse(TarGetLNK.LNKSoLuong.Value?.ToString(), out int sl) ? sl : 0;

        // Load dsvitri
        await GetFilterDSachVitriLuuTru(string.Empty);

        SelectedViTri = DSVitris.FirstOrDefault() ?? new();

        await base.OnInitializedAsync();
    }

    private string IsVitriSelected(VitriLuuTru selectVitri)
    {
        if (SelectedViTri.VTID.Value != null && SelectedViTri.VTID.Value.Equals(selectVitri.VTID.Value))
        {
            return "vitri_IsSelected";
        }
        else return string.Empty;
    }

    private bool IsVTofNVLSelected(ViTriofNVL selected)
    {
        if (SelectedVTofNVL.VTID.Value != selected.VTID.Value)
        {
            return false;
        }
        if (SelectedVTofNVL.LotVitri.Value?.ToString()?.Trim() != selected.LotVitri.Value?.ToString()?.Trim())
        {
            return false;
        }

        return true;
    }

    private void OnVTofNVLSelected(ViTriofNVL selected, int slhienco)
    {
        bool nnk = selected.NgayNhapKho.Value?.ToString()?.Trim() == DateTime.Now.Date.ToShortDateString();

        if ((slhienco > 0 && object.Equals(TarGetLNK.NVLID.Value, selected.NVLID.Value) && nnk) || slhienco == 0)
        {
            SelectedVTofNVL = selected;

            StateHasChanged();
        }
    }

    // Load danh sach vi tri trong kho luu tru
    private async Task LoadDSachViTriLuuTru()
    {
        await Task.Run(() =>
        {
            DSVitris = SQLServerServices.GetAllViTriLuuTru();

            Parallel.ForEach(DSVitris, vitri =>
            {
                // Load ds nguyen lieu trong vi tri
                vitri.DSachViTriofNVL = SQLServerServices.GetListViTriOfNgVatLieuByVTid(vitri.VTID.Value);

                // Load nguyen lieu info
                Parallel.ForEach(vitri.DSachViTriofNVL, vitriofnvl =>
                {
                    vitriofnvl.NgLieuInfor = SQLServerServices.GetNguyenVatLieuByID_MultipleTask(vitriofnvl.NVLID.Value);
                });
            });
        });
    }

    private void OnViTriLuuTruClick(VitriLuuTru selectVitri)
    {
        SelectedViTri = selectVitri;

        temLNK = new();
        SelectedVTofNVL = new();
        isCreatenewLNK = false;

        StateHasChanged();
    }

    private bool isSearching = false;
    private async Task GetFilterDSachVitriLuuTru(string keyWord)
    {
        if (isSearching == false)
        {
            isSearching = true;

            await LoadDSachViTriLuuTru();

            if (modeSearch == 1) // tim theo mavitri
            {
                DSVitris = DSVitris.Where(vitri => vitri.MaViTri.Value?.ToString()?.IndexOf(keyWord.Trim(), StringComparison.OrdinalIgnoreCase) >= 0).ToList();
            }
            else if (modeSearch == 2) // tim theo ten NVL
            {
                DSVitris = DSVitris.Where(vitri => vitri.DSachViTriofNVL.Any(nvl => nvl.NgLieuInfor.MaNVL.Value?.ToString()?.IndexOf(keyWord.Trim(), StringComparison.OrdinalIgnoreCase) >= 0)).ToList();
            }
            else if (modeSearch == 3) // vi tri day
            {
                DSVitris = DSVitris.Where(vitri => vitri.SLConTrong == 0).ToList();

                if (!string.IsNullOrEmpty(keyWord.Trim()))
                {
                    DSVitris = DSVitris.Where(vitri => vitri.MaViTri.Value?.ToString()?.IndexOf(keyWord.Trim(), StringComparison.OrdinalIgnoreCase) >= 0
                                                    || vitri.DSachViTriofNVL.Any(nvl => nvl.NgLieuInfor.MaNVL.Value?.ToString()?.IndexOf(keyWord.Trim(), StringComparison.OrdinalIgnoreCase) >= 0)).ToList();
                }
            }
            else if (modeSearch == 4) // vi tri con trong
            {
                DSVitris = DSVitris.Where(vitri => vitri.SLConTrong > 0).ToList();

                if (!string.IsNullOrEmpty(keyWord.Trim()))
                {
                    DSVitris = DSVitris.Where(vitri => vitri.MaViTri.Value?.ToString()?.IndexOf(keyWord.Trim(), StringComparison.OrdinalIgnoreCase) >= 0
                                                    || vitri.DSachViTriofNVL.Any(nvl => nvl.NgLieuInfor.MaNVL.Value?.ToString()?.IndexOf(keyWord.Trim(), StringComparison.OrdinalIgnoreCase) >= 0)).ToList();
                }
            }
            else
            {
                if (!string.IsNullOrEmpty(keyWord.Trim()))
                {
                    DSVitris = DSVitris.Where(vitri => vitri.MaViTri.Value?.ToString()?.IndexOf(keyWord.Trim(), StringComparison.OrdinalIgnoreCase) >= 0
                                                    || vitri.DSachViTriofNVL.Any(nvl => nvl.NgLieuInfor.MaNVL.Value?.ToString()?.IndexOf(keyWord.Trim(), StringComparison.OrdinalIgnoreCase) >= 0)).ToList();
                }
            }

            if (DSVitris.Count > 0)
            {
                SelectedViTri = DSVitris.FirstOrDefault() ?? new();
            }
            else SelectedViTri = new();

            isSearching = false;
        }
    }

    private bool isCreatenewLNK = false;
    private async Task OnPickVitriLuu()
    {
        if (!isCreatenewLNK)
        {
            // Check SelectedVTofNVL

            if (dsViTriNhapKho.Any(lenh => lenh.VTID.Value?.ToString() == SelectedVTofNVL.VTID.Value?.ToString()))
            {
                await DialogService.Alert($"Vị trí đã được chọn!", "<strong><span style='color: red'>Error!</span></strong>", new AlertOptions() { OkButtonText = "OK", ShowClose = true });
                return;
            }

            if (DSLenhNKofAnotherNVL.Any(lenh => lenh.VTID.Value?.ToString() == SelectedVTofNVL.VTID.Value?.ToString() && lenh.LotVitri.Value?.ToString()?.Trim() == SelectedVTofNVL.LotVitri?.Value?.ToString()))
            {
                await DialogService.Alert($"Trùng với vị trí của NVL khác trong phiếu!", "<strong><span style='color: red'>Error!</span></strong>", new AlertOptions() { OkButtonText = "OK", ShowClose = true });
                return;
            }

            // tong so luong da chi dinh trong ds lenh
            int tongsldachidinh = dsViTriNhapKho.Sum(lenh => int.TryParse(lenh.LNKSoLuong.Value?.ToString(), out int sll) ? sll : 0);

            // tong so luong can chi dinh con lai
            int allslcanchidinhconlai = SLallcanchidinh - tongsldachidinh;

            if (allslcanchidinhconlai <= 0)
            {
                await DialogService.Alert($"Đã chỉ định đủ số lượng cần nhập kho!", "<span style='color: darkblue'>Information</span>", new AlertOptions() { OkButtonText = "OK", ShowClose = true });
                return;
            }

            // so luong con trong cua vi tri vua chon
            int slcontrongofVitri = SelectedViTri.SLConTrong;

            int slchidinh = 0;

            // slg can chi dinh duoi slg con trong
            if (allslcanchidinhconlai <= slcontrongofVitri)
            {
                slchidinh = allslcanchidinhconlai;
            }
            else // slo can chi dinh lon hon slg con trong
            {
                slchidinh = slcontrongofVitri;
            }

            temLNK = new()
                {
                    LNKSoLuong = { Value = slchidinh },
                    NVLID = { Value = TarGetLNK.NVLID.Value },
                    VTID = { Value = SelectedViTri.VTID.Value },
                    NVLPNKID = { Value = TarGetLNK.NVLPNKID.Value },
                    PNKID = { Value = TarGetLNK.PNKID.Value },
                    LNKIsDone = { Value = 0 },
                    isEditingLNK = true,
                    TargertVitri = SelectedViTri,
                    TargetNgLieu = TarGetLNK.TargetNgLieu,
                    LotVitri = { Value = SelectedVTofNVL.LotVitri.Value },
                    NgayNhapKho = { Value = TarGetLNK.NgayNhapKho.Value },
                    QRIDLOT = { Value = TarGetLNK.QRIDLOT.Value }
                };

            isCreatenewLNK = true;

            await OnConfirmAddNewViTri(temLNK, false);
        }
    }

    // Confirm khi add new
    private async Task OnConfirmAddNewViTri(LenhNhapKho newLXK, bool isEditmode)
    {
        _ = int.TryParse(newLXK.LNKSoLuong.Value?.ToString(), out int slofvitri) ? slofvitri : 0;

        if (slofvitri == 0)
        {
            await DialogService.Alert($"Số lượng chỉ định phải lớn hơn 0!", "<strong><span style='color: red'>Error!</span></strong>", new AlertOptions() { OkButtonText = "OK", ShowClose = true });
            return;
        }

        int tongsldachidinh = dsViTriNhapKho.Sum(lenh => int.TryParse(lenh.LNKSoLuong.Value?.ToString(), out int sll) ? sll : 0);

        if ((tongsldachidinh + slofvitri) > SLallcanchidinh)
        {
            await DialogService.Alert($"Số lượng không hợp lệ!", "<strong><span style='color: red'>Error!</span></strong>", new AlertOptions() { OkButtonText = "OK", ShowClose = true });
            return;
        }

        if ((tongsldachidinh + slofvitri) == SLallcanchidinh)
        {
            isChidinhSLok = true;
        }

        newLXK.isEditingLNK = false;

        dsViTriNhapKho.Add(newLXK);

        isCreatenewLNK = false;
    }

    // Confirm khi edit
    private async Task OnConfirmEditSlgViTri(LenhNhapKho editLXK, bool isEditmode)
    {
        _ = int.TryParse(editLXK.LNKSoLuong.Value?.ToString(), out int slofvitri) ? slofvitri : 0;

        if (slofvitri == 0)
        {
            await DialogService.Alert($"Số lượng chỉ định phải lớn hơn 0!", "<strong><span style='color: red'>Error!</span></strong>", new AlertOptions() { OkButtonText = "OK", ShowClose = true });
            return;
        }

        int tongsldachidinh = dsViTriNhapKho.Sum(lenh => int.TryParse(lenh.LNKSoLuong.Value?.ToString(), out int sll) ? sll : 0);

        if ((tongsldachidinh) > SLallcanchidinh)
        {
            await DialogService.Alert($"Số lượng không hợp lệ! <strong>({tongsldachidinh} > {SLallcanchidinh})</strong>", "<strong><span style='color: red'>Error!</span></strong>", new AlertOptions() { OkButtonText = "OK", ShowClose = true });
            return;
        }

        if ((tongsldachidinh) == SLallcanchidinh)
        {
            isChidinhSLok = true;
        }

        editLXK.isEditingLNK = false;
    }

    private void OnDeleteViTri(LenhNhapKho selectlnk)
    {
        dsViTriNhapKho.RemoveAll(item => item.VTID.Value?.ToString() == selectlnk.VTID.Value?.ToString());

        dsViTriNhapKho = new List<LenhNhapKho>(dsViTriNhapKho);

        isCreatenewLNK = false;
    }

    private void OnSaveSelectedVitri_andClose()
    {
        var resultLNK = dsViTriNhapKho.FirstOrDefault() ?? null;

        if (resultLNK != null && resultLNK.VTID.Value != null)
        {
            TarGetLNK = resultLNK;
        }

        DialogService.Close(TarGetLNK);
    }
}
