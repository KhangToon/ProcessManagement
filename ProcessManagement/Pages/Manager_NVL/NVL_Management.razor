@page "/khomanagement"
@attribute [Authorize(Roles = "Admin, User")]
@* this limited access into page *@

@using ProcessManagement.Commons
@using ProcessManagement.Models
@using ProcessManagement.Models.KHO_NVL
@using ProcessManagement.Services.SQLServer
@using ProcessManagement.Pages.Manager_NVL.Dialogs
@using Radzen.Blazor
@using Radzen


@inject NotificationService NotificationService
@inject TooltipService TooltipService
@inject DialogService DialogService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject SQLServerServices SQLServerServices

<style>
    .rowbackground-style {
        background-color: white;
        border-radius: 10px;
    }

    .rz-grid-table-fixed-2 {
        /*width: unset;*/
        table-layout: auto;
        border-radius: 10px;
        padding: 10px;
    }
</style>


<RadzenRow class="rowbackground-style" Gap="0" Style="height: 100%; width: 100%; overflow-y: auto;">
    <RadzenColumn Size="12" SizeMD="12" Style="height: 100%; width: 100%;">
        <RadzenTabs Style="width: 100%; height: 100%;">
            <Tabs>
                <RadzenTabsItem Text="Kho công cụ - dụng cụ"></RadzenTabsItem>
                <RadzenTabsItem Selected="true" Text="Kho nguyên liệu">
                    <RadzenCard Variant="Variant.Flat" Style="height: contain; width: 100%; padding-top: 15px">
                        <RadzenStack Gap="10" Style="height: contain; width: 100%;">
                            <!--Search by maquanly-->
                            <RadzenStack Style="height: contain; width: 100%;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                <RadzenStack Style="height: 100%; width: 20%; border-radius: 10px; background-color: var(--rz-success-lighter); padding: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenText Text="KHO NGUYÊN LIỆU" Style="color: green; font-weight: 600; font-size: 18px"></RadzenText>
                                </RadzenStack>
                                <RadzenStack Gap="15px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Style="height: 100%; width: 60%;">
                                    <RadzenTextBox @oninput="@((args) => FilterNVL(args?.Value))" Placeholder="Tìm theo tên nguyên liệu" Style="border-radius: 20px; padding-left: 20px; border-width: 2px; border-color: var(--rz-primary-light); width: 50% "></RadzenTextBox>
                                    <RadzenButton Icon="search" ButtonStyle="ButtonStyle.Primary" Style="border-radius: 20px;" />
                                    <RadzenButton Click="@(() => { LoadList_LoaiNVL(); LoadList_NguyenVatLieu(); ReSelectCurrentNguyenVatLieu(); })" Style="border-radius: 20px;" Icon="autorenew" ButtonStyle="ButtonStyle.Primary" />
                                </RadzenStack>
                                <RadzenStack Style="height: 100%; width: 20%; padding: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">

                                </RadzenStack>
                            </RadzenStack>

                            <!--Filter-->
                            <RadzenStack Gap="0px" Orientation="Orientation.Horizontal" Style="height: contain; width: 100%; padding-top: 10px; border-top: var(--rz-grid-cell-border);" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                <!--Search by ngaynhap-->
                                <RadzenStack Gap="10px" Orientation="Orientation.Horizontal" Style="height: contain; width: contain; padding: 0; padding-right: 10px; border-right: var(--rz-grid-cell-border);" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                    <RadzenStack Gap="10px" Style="height: 100%; width: contain; background-color: white; padding: 5px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                        <RadzenLabel Text="Ngày cập nhật" Component="CheckBox1" Style="font-size: 14px; font-weight: bold; cursor: pointer" />
                                        <RadzenCheckBox TValue="bool" @bind-Value="@(isDisplaybyDay)" Name="CheckBox1" Change="@((args) => { isDisplaybyDay = args; LoadList_LoaiNVL(); LoadList_NguyenVatLieu(); })" />
                                    </RadzenStack>
                                    <!--Từ ngày-->
                                    <RadzenStack Gap="10px" Orientation="Orientation.Horizontal" Style="height: contain; width: contain;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                        <RadzenText Text="Từ ngày" Style="font-weight: 500; font-size: 14px; color: black;"></RadzenText>
                                        <RadzenDatePicker Disabled="@(!isDisplaybyDay)" Style="width: 120px" TValue="DateTime" Value="@startSearchDay"
                                                          ValueChanged="@((args) => { startSearchDay = args; LoadList_LoaiNVL(); LoadList_NguyenVatLieu();})"
                                                          ShowTime="false" HourFormat="12" DateFormat="@Common.DayTimeFormatnoTime" AllowInput="false">
                                            <FooterTemplate>
                                                <RadzenStack Style="height: 100%; width: contain; padding: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                    <RadzenButton Style="height: 100%; width: 50%;" Text="To day"
                                                                  Click="@(() => { startSearchDay = DateTime.Today; LoadList_LoaiNVL(); LoadList_NguyenVatLieu();})"
                                                                  ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" />
                                                </RadzenStack>
                                            </FooterTemplate>
                                        </RadzenDatePicker>
                                    </RadzenStack>
                                    <!--Đến ngày-->
                                    <RadzenStack Gap="10px" Orientation="Orientation.Horizontal" Style="height: contain; width: contain;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                        <RadzenText Text="Đến ngày" Style="font-weight: 500; font-size: 14px; color: black;"></RadzenText>
                                        <RadzenDatePicker Disabled="@(!isDisplaybyDay)" Style="width: 120px" TValue="DateTime" Value="@endSearchDay"
                                                          ValueChanged="@((args) => { endSearchDay = args; LoadList_LoaiNVL(); LoadList_NguyenVatLieu();})"
                                                          ShowTime="false" HourFormat="12" DateFormat="@Common.DayTimeFormatnoTime" AllowInput="false">
                                            <FooterTemplate>
                                                <RadzenStack Style="height: 100%; width: contain; padding: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                    <RadzenButton Style="height: 100%; width: 50%;" Text="To day"
                                                                  Click="@(() => { endSearchDay = DateTime.Today; LoadList_LoaiNVL(); LoadList_NguyenVatLieu();})"
                                                                  ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" />
                                                </RadzenStack>
                                            </FooterTemplate>
                                        </RadzenDatePicker>
                                    </RadzenStack>
                                </RadzenStack>
                                <!--Search by Loai Danh muc-->
                                <RadzenStack Gap="10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Style="height: 100%; width: contain; padding-left: 10px ; padding-right: 10px; border-right: var(--rz-grid-cell-border);">
                                    <RadzenLabel Text="Danh mục" Style="font-size: 14px; color: darkred; font-weight: 600; width: contain" />
                                    <RadzenDropDown Disabled="true" Value="@SelectedDanhMuc?.TenDanhMuc.Value?.ToString()" ValueChanged="@((args) => { OnSelectDanhMucValueChanged(args);})" TValue="string"
                                                    Data=@(DanhMucNVLs?.Select(dm => dm.TenDanhMuc.Value?.ToString()).Prepend(allLoainvlFormat).ToList()) Style="border-radius: 5px; border-width: 1px; font-size: 14px; width: contain ">
                                    </RadzenDropDown>
                                </RadzenStack>
                                <!--Search by Loai NVL-->
                                <RadzenStack Gap="10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Style="height: 100%; width: contain; padding-left: 10px; padding-right: 10px; border-right: var(--rz-grid-cell-border);">
                                    <RadzenLabel Text="Loại nguyên liệu" Style="font-size: 14px; color: darkred; font-weight: 600; width: contain" />
                                    <RadzenDropDown Placeholder="*Chọn loại nguyên liệu" Value="@((SelectedLoaiNVL != null)? SelectedLoaiNVL?.TenLoaiNVL.Value?.ToString() : allLoainvlFormat)"
                                                    ValueChanged="@((args) => { OnSelectLoaiNVLValueChanged(args);})" TValue="string"
                                                    Data=@(DSLoaiNVLs?.Select(loai => loai.TenLoaiNVL.Value?.ToString()).Prepend(allLoainvlFormat).ToList()) Style="border-radius: 5px; border-width: 1px; font-size: 14px; width: contain">
                                    </RadzenDropDown>
                                </RadzenStack>
                                <!--Them nguyen vat lieu button-->
@*                                 <RadzenStack Visible="@(SelectedLoaiNVL == null)" Style="height: 100%; width: contain; padding-left: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenButton Click="OnThemNguyenVatLieu" MouseEnter="@(args => ShowToolTip(args, TooltipPosition.Bottom, "Thêm nguyên liệu mới"))" Icon="add" Text="Thêm nguyên liệu mới" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Primary" Variant="Variant.Filled"
                                                  Style="height: contain; width: contain; font-size: 14px; background-color: Highlight " />
                                </RadzenStack> *@
                            </RadzenStack>

                            <RadzenRow Gap="10px" Style="height: contain; width: 100%; border-top: var(--rz-grid-cell-border); padding: 0;">
                                <RadzenColumn Size="12" SizeMD="7" Style="height: contain; width: 100%; padding-top: 5px;">
                                    <RadzenStack Gap="20px" Style="height: contain; width: 100%; padding-bottom: 5px; border-bottom: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                                        <RadzenStack Visible="@(DSNguyenVatLieus != null && DSNguyenVatLieus.Count > 0)" Gap="10px" Style="height: contain; width: contain; padding: 10px; padding-left: 0" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                                            <RadzenText Text="Bảng danh sách nguyên liệu" Style="font-weight: 600; height: contain; width: contain; font-style: italic; color: Highlight"></RadzenText>
                                        </RadzenStack>
                                        <RadzenStack Gap="10px" Style="height: 100%; width: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                            <RadzenStack Gap="10px" Style="height: 100%; width: contain; padding-right: 10px; border-right: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                <RadzenText Text="@($"Loại nguyên liệu:")" Style="color: black; height: contain; width: contain; font-size: 16px"></RadzenText>
                                                <RadzenText Text="@($"{((isSelectAllNguyenVatLieu)? allLoainvlFormat : $"{SelectedLoaiNVL?.TenLoaiNVL.Value?.ToString()}")}")" Style="color: darkblue; font-weight: 600; height: contain; width: contain"></RadzenText>
                                            </RadzenStack>
                                            <RadzenStack Gap="10px" Style="height: 100%; width: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                <RadzenText Text="@($"Tổng số nguyên liệu: ")" Style="color: black;  height: contain; width: contain; font-size: 16px"></RadzenText>
                                                <RadzenText Text="@($"{DSNguyenVatLieus?.Count?? 0}")" Style="color: black; font-weight: 600; height: contain; width: contain"></RadzenText>
                                            </RadzenStack>
                                        </RadzenStack>
                                        <RadzenStack Style="height: 100%; width: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                            <RadzenButton Click="OnThemNguyenVatLieu" MouseEnter="@(args => ShowToolTip(args, TooltipPosition.Bottom, "Thêm nguyên liệu mới"))" Icon="add" Text="Thêm nguyên liệu mới" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Primary" Variant="Variant.Filled"
                                                          Style="height: contain; width: contain; font-size: 14px; background-color: Highlight " />
                                        </RadzenStack>
                                    </RadzenStack>
                                    <RadzenStack Visible="@(DSNguyenVatLieus?.Count == 0)" Gap="20px" Style="height: contain; width: 100%; background-color: var(--rz-primary-lighter); padding: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                        <RadzenText Text="Hãy chọn loại nguyên vật liệu" Style="color: red; font-weight: 500; font-size: 16px"></RadzenText>
                                    </RadzenStack>
                                    <!--Table listNVL-->
                                    <RadzenStack Visible="@(DSNguyenVatLieus != null && DSNguyenVatLieus.Count > 0)" Style="height: 450px; width: 100%; padding-top: 10px;" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                        <RadzenDataGrid class="rz-grid-table-fixed-2" Data="@(DSNguyenVatLieus)" TItem="NguyenVatLieu"
                                                        EmptyText="Danh sách nguyên liệu trống." Style="padding-right: 0;"
                                                        ShowColumnTitleAsTooltip="true" ShowCellDataAsTooltip="true"
                                                        AllowFiltering="false" FilterMode="FilterMode.Simple"
                                                        AllowPaging="true" AllowSorting="false" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                        ShowPagingSummary="true" PagingSummaryFormat="@pagingSummaryFormat" PagerPosition="PagerPosition.Bottom"
                                                        GridLines="DataGridGridLines.Both" PageSize="10" Density="Density.Default"
                                                        HeaderCellRender="@(args => args.Attributes.Add("style", $"background-color: rgba(58, 71, 77)"))"
                                                        CellRender="@OnCellRender" Value="@SelectedNgVatLieu" ValueChanged="@((args) => OnDatagridSelectChanged(args))">
                                            <Columns>
                                                @if (DSNguyenVatLieus != null && DSNguyenVatLieus.Count > 0)
                                                {
                                                    List<Propertyy> columns = DSNguyenVatLieus.FirstOrDefault()?.GetPropertiesValues() ?? new();

                                                    <RadzenDataGridColumn Width="50px" Frozen="true" FrozenPosition="FrozenColumnPosition.Left" Filterable="false"
                                                                          TItem="NguyenVatLieu" Title="#"
                                                                          Property="STT" TextAlign="TextAlign.Center">
                                                        <HeaderTemplate>
                                                            <span style="font-weight: 600; font-size: 15px; color: white">STT</span>
                                                        </HeaderTemplate>
                                                        <Template Context="nvl">
                                                            <span style="font-weight: bold;">@(DSNguyenVatLieus.IndexOf(nvl) + 1)</span>
                                                        </Template>
                                                    </RadzenDataGridColumn>

                                                    <RadzenDataGridColumn Width="contain" TItem="NguyenVatLieu" Title="Tên NVL"
                                                                          Property="tennvl" TextAlign="TextAlign.Center">
                                                        <HeaderTemplate>
                                                            <span style="font-weight: 600; font-size: 15px; color: white">Tên NVL</span>
                                                        </HeaderTemplate>
                                                        <Template Context="nvl">
                                                            <span style="color: darkblue; font-weight: bold;">@($"{nvl?.TenNVL.Value?.ToString()}")</span>
                                                        </Template>
                                                    </RadzenDataGridColumn>

                                                    <RadzenDataGridColumn Width="contain" TItem="NguyenVatLieu" Title="Loại nguyên liệu"
                                                                          Property="loainglieu" TextAlign="TextAlign.Center">
                                                        <HeaderTemplate>
                                                            <span style="font-weight: 600; font-size: 15px; color: white">Loại nguyên liệu</span>
                                                        </HeaderTemplate>
                                                        <Template Context="nvl">
                                                            <span style="color: black; font-weight: 500;">@($"{nvl.LoaiNVL?.TenLoaiNVL.Value?.ToString()}")</span>
                                                        </Template>
                                                    </RadzenDataGridColumn>

                                                    foreach (var column in columns.Where(cl => cl.DispDatagrid == true).ToList())
                                                    {
                                                        string colName = column.DBName ?? string.Empty;
                                                        string displayName = column.DisplayName ?? string.Empty;

                                                        if (colName != Common.TenNVL)
                                                        {
                                                            <RadzenDataGridColumn Width="contain" TItem="NguyenVatLieu" Title="@displayName"
                                                                                  Property="@colName" TextAlign="TextAlign.Center">
                                                                <HeaderTemplate>
                                                                    <span style="font-weight: 600; font-size: 15px; color: white">@displayName</span>
                                                                </HeaderTemplate>
                                                                <Template Context="nvl">

                                                                    @if (colName == Common.NgayCapNhat)
                                                                    {
                                                                        string dayvalue = string.Empty;

                                                                        if (column.Value != DBNull.Value && column.Value != null)
                                                                        {
                                                                            dayvalue = Convert.ToDateTime(nvl.GetPropertyValue(colName)).ToString("dd-MM-yyyy");
                                                                        }

                                                                        <span style="color: black; font-weight: 500;">@(dayvalue)</span>
                                                                    }
                                                                    else if (colName == Common.TenNVL)
                                                                    {
                                                                        <span style="color: darkblue; font-weight: bold;">@(nvl.GetPropertyValue(colName))</span>
                                                                    }
                                                                    else
                                                                    {
                                                                        <span style="color: black; font-weight: 500;">@(nvl.GetPropertyValue(colName))</span>
                                                                    }
                                                                </Template>
                                                            </RadzenDataGridColumn>
                                                        }

                                                    }
                                                    <RadzenDataGridColumn Width="60px" TItem="NguyenVatLieu" Title="#ID" Frozen="true"
                                                                          Property="#ID" TextAlign="TextAlign.Center">
                                                        <HeaderTemplate>
                                                            <span style="font-weight: 600; font-size: 15px; color: white">#ID</span>
                                                        </HeaderTemplate>
                                                        <Template Context="nvl">
                                                            <span style="color: black; font-weight: 500;">@($"#{nvl.GetPropertyValue(Common.NVLID)}")</span>
                                                        </Template>
                                                    </RadzenDataGridColumn>
                                                }
                                            </Columns>
                                        </RadzenDataGrid>
                                    </RadzenStack>
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="5" Style="height: contain; width: 100%; padding-top: 10px; padding-left: 10px; border-left: var(--rz-grid-cell-border);">
                                    <RadzenCard Variant="Variant.Filled" Style="border-radius: 10px; height: 100%; width: 100%;">
                                        <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start" Style="height: 100%; width: 100%;">
                                            <RadzenStack Orientation="Orientation.Horizontal" Gap="10px" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Style="height: contain; width: contain;">
                                                <RadzenText Visible="@(!isEditNVLDetail)" Text="@("Thông tin chi tiết nguyên liệu")" Style="color: black; font-size: 18px; font-weight: 500; height: contain; width: contain"></RadzenText>
                                                <RadzenText Visible="@isEditNVLDetail" Text="@("Sửa thông tin nguyên liệu")" Style="color: red; font-size: 18px; font-weight: 500; height: contain; width: contain"></RadzenText>
                                                <RadzenText Text="@($"{SelectedNgVatLieu?.FirstOrDefault()?.TenNVL.Value?.ToString()}")" Style="color: darkred; font-size: 18px; font-weight: 500; height: contain; width: contain"></RadzenText>
                                            </RadzenStack>
                                            <RadzenCard Variant="@((isEditNVLDetail)? Variant.Flat : Variant.Outlined)" Style="height: 365px; width: 100%; padding: 10px; border-radius: 10px; margin-top: 5px;">
                                                <RadzenStack Style="height: 100%; width: 100%; padding: 10px; padding-right: 0; overflow-y: scroll" Gap="0" Orientation="Orientation.Vertical">
                                                    @if (SelectedNgVatLieu?.FirstOrDefault() != null)
                                                    {
                                                        // Danh sach thong tin cua nguyen lieu - default
                                                        var nvlDetailsItems = SelectedNgVatLieu.FirstOrDefault()?.GetPropertiesValues().Where(nvl => nvl.AlowDisplay == true).ToList();

                                                        if (nvlDetailsItems != null)
                                                        {
                                                            // Danh muc
                                                            <RadzenStack Gap="0" Style="height: contain; width: 100%; padding-bottom: 5px; padding-top: 5px; border-bottom: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                                <RadzenStack Style="width: 30%;">
                                                                    <RadzenText Text="Danh mục" Style="font-size: 16px; font-weight: 600; color: black; height: contain; width: 100% "></RadzenText>
                                                                </RadzenStack>
                                                                <RadzenStack Style="width: 55%; height: 100%; padding-left: 20px; border-left: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="@((isEditNVLDetail)? JustifyContent.Start : JustifyContent.Center)">
                                                                    <RadzenText Text="@SelectedNgVatLieu.FirstOrDefault()?.DanhMuc?.TenDanhMuc.Value?.ToString()" Style="font-size: 16px; height: contain;"></RadzenText>
                                                                </RadzenStack>
                                                            </RadzenStack>

                                                            foreach (var item in nvlDetailsItems)
                                                            {
                                                                <RadzenStack Gap="0" Style="height: contain; width: 100%; padding-bottom: 5px; padding-top: 5px; border-bottom: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                                    <RadzenStack Style="width: 30%;">
                                                                        <RadzenText Text="@item.DisplayName" Style="font-size: 16px; font-weight: 600; color: black; height: contain; width: 100% "></RadzenText>
                                                                    </RadzenStack>
                                                                    <RadzenStack Style="width: 55%; height: 100%; padding-left: 20px; border-left: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="@((isEditNVLDetail)? JustifyContent.Start : JustifyContent.Center)">

                                                                        <!--Edit mode-->
                                                                        @if (isEditNVLDetail)
                                                                        {
                                                                            if (item.Type == typeof(string))
                                                                            {
                                                                                <RadzenTextBox Placeholder="@($"*Nhập {item.DisplayName}")" Value="@item.Value?.ToString()" ValueChanged="@((args) => { item.Value = args; } )"
                                                                                               Style="font-size: 16px; height: contain; border-width: 1px; width: 100% "></RadzenTextBox>
                                                                            }
                                                                            else if (item.Type == typeof(int))
                                                                            {
                                                                                <RadzenNumeric Placeholder="@($"*Nhập {item.DisplayName}")" TValue="int" Value="@int.Parse(item.Value?.ToString()?? "0")" Min="0" Max="999999" ValueChanged="@((args) => { item.Value = args; })"
                                                                                               Style="font-size: 16px; height: contain; border-width: 1px; width: 100%" />
                                                                            }
                                                                            else if (item.Type == typeof(DateTime))
                                                                            {
                                                                                DateTime selectday = DateTime.TryParse(item.Value?.ToString(), out DateTime sld) ? sld : DateTime.Now;
                                                                                selectday = selectday.Date.Add(DateTime.Now.TimeOfDay);

                                                                                <RadzenDatePicker TValue="DateTime"
                                                                                                  ValueChanged="@((args) =>
                                                                                                    {
                                                                                                        args = args.Date.Add(DateTime.Now.TimeOfDay); item.Value = args;
                                                                                                    })"
                                                                                                  Value="selectday"
                                                                                                  ShowTime="false" HourFormat="12" DateFormat="@Common.DayTimeFormatnoTime" AllowInput="false"
                                                                                                  Name="DatePicker" Style="width: 100%;  font-size: 16px"></RadzenDatePicker>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            <!--Normal mode-->
                                                                            <RadzenText Text="@item.Value?.ToString()" Style="font-size: 16px; height: contain;"></RadzenText>
                                                                        }
                                                                    </RadzenStack>
                                                                </RadzenStack>
                                                            }
                                                        }

                                                        <!--Display extra details-->
                                                        @if (SelectedNgVatLieu.FirstOrDefault()?.DSNguyenVatLieuDetails.Count > 0)
                                                        {
                                                            var dsngvldetails = SelectedNgVatLieu.FirstOrDefault()?.DSNguyenVatLieuDetails;

                                                            if (dsngvldetails != null)
                                                            {
                                                                foreach (var nvldetail in dsngvldetails)
                                                                {
                                                                    <RadzenStack Gap="0" Style="height: contain; width: 100%; padding-bottom: 5px; padding-top: 5px; border-bottom: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                                        <RadzenStack Style="width: 30%;">
                                                                            <RadzenText Text="@(nvldetail.NVLDetailItems?.TenThongTin.Value?.ToString())" Style="font-size: 16px; font-weight: 600; color: black; height: contain; width: 100% "></RadzenText>
                                                                        </RadzenStack>
                                                                        <RadzenStack Style="width: 55%; height: 100%; padding-left: 20px; border-left: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="@((isEditNVLDetail)? JustifyContent.Start : JustifyContent.Center)">
                                                                            <!--Edit mode-->
                                                                            @if (isEditNVLDetail)
                                                                            {
                                                                                int kieudulieu = int.TryParse(nvldetail.NVLDetailItems?.KieuDulieu.Value?.ToString(), out int kdl) ? kdl : 0;

                                                                                if (kieudulieu == 1) // kieu ki tu
                                                                                {
                                                                                    <RadzenTextBox Placeholder="@($"*Nhập {nvldetail.NVLDetailItems?.TenThongTin.Value?.ToString()}")"
                                                                                                   Value="@nvldetail.GiaTri.Value?.ToString()" ValueChanged="@((args) => { nvldetail.GiaTri.Value = args; } )"
                                                                                                   Style="font-size: 16px; height: contain; border-width: 1px; width: 100% "></RadzenTextBox>
                                                                                }
                                                                                else if (kieudulieu == 2) // kieu so
                                                                                {
                                                                                    <RadzenNumeric Placeholder="@($"*Nhập {nvldetail.NVLDetailItems?.TenThongTin.Value?.ToString()}")" TValue="int"
                                                                                                   Value="@int.Parse(nvldetail.GiaTri.Value?.ToString()?? "0")" Min="0" Max="999999"
                                                                                                   ValueChanged="@((args) => { nvldetail.GiaTri.Value = args; })"
                                                                                                   Style="font-size: 16px; height: contain; border-width: 1px; width: 100%" />
                                                                                }
                                                                                else if (kieudulieu == 3) // datetime
                                                                                {
                                                                                    DateTime selectday = DateTime.TryParse(nvldetail.GiaTri.Value?.ToString(), out DateTime sld2) ? sld2 : DateTime.Now;
                                                                                    selectday = selectday.Date.Add(DateTime.Now.TimeOfDay);

                                                                                    <RadzenDatePicker TValue="DateTime"
                                                                                                      ValueChanged="@((args) =>
                                                                                                        {
                                                                                                            args = args.Date.Add(DateTime.Now.TimeOfDay); nvldetail.GiaTri.Value = args;
                                                                                                        })"
                                                                                                      Value="selectday"
                                                                                                      ShowTime="false" HourFormat="12" DateFormat="@Common.DayTimeFormatnoTime" AllowInput="false"
                                                                                                      Name="DatePicker" Style="width: 100%;  font-size: 16px"></RadzenDatePicker>
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                <!--Normal mode-->
                                                                                <RadzenText Text="@nvldetail.GiaTri.Value?.ToString()" Style="font-size: 16px; height: contain;"></RadzenText>
                                                                            }
                                                                        </RadzenStack>
                                                                        <RadzenStack Visible="@isEditNVLDetail" Gap="5" Style="width: 15%; height: 100%;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                            <RadzenButton Click="@(() => OpendialogRenameThongTinNVL(nvldetail))" Icon="edit" MouseEnter="@(args => ShowToolTip(args, TooltipPosition.Bottom, "Đổi tên trường thông tin"))"
                                                                                          ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Style="border-radius: 5px; --rz-icon-size: 18px; background-color: black" />
                                                                            <RadzenButton Click="@(() => OpendialogDeleteThongTinNVL(nvldetail))" Icon="delete" MouseEnter="@(args => ShowToolTip(args, TooltipPosition.Bottom, "Xóa trường thông tin"))"
                                                                                          ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Style="border-radius: 5px; --rz-icon-size: 18px; background-color: black" />
                                                                        </RadzenStack>
                                                                    </RadzenStack>
                                                                }
                                                            }
                                                        }
                                                    }
                                                </RadzenStack>
                                            </RadzenCard>
                                            <RadzenStack Visible="(SelectedNgVatLieu != null)" Gap="10px" Style="height: contain; width: 100%; padding-top: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                <RadzenButton Style="width: contain; height: contain;" MouseEnter="@(args => ShowToolTip(args, TooltipPosition.Bottom, "Thêm thông tin khác cho nguyên liệu"))"
                                                              Icon="add" Text="Thông tin khác" ButtonStyle="ButtonStyle.Primary" Shade="Shade.Lighter" Size="ButtonSize.Small" Variant="Variant.Flat"
                                                              Click="@(() => OnOpenDialogAddNewNVLDetail())" />
                                                <RadzenButton Style="width: contain; min-width: 120px; height: contain;" Click="@(() => EnableEditNVLDetail(SelectedNgVatLieu?.FirstOrDefault()?.NVLID.Value))" MouseEnter="@(args => ShowToolTip(args, TooltipPosition.Bottom, "Thêm/xóa/sửa thông tin"))"
                                                              Icon="@((isEditNVLDetail)? "clear" : "edit")" Text="@((isEditNVLDetail)? "Hủy" : "Chỉnh sửa")" ButtonStyle="@((isEditNVLDetail)? ButtonStyle.Primary : ButtonStyle.Primary)" Shade="Shade.Lighter" Size="ButtonSize.Small" Variant="Variant.Flat" />
                                                <RadzenButton Visible="@(isEditNVLDetail)" Style="width: contain; height: contain;"
                                                              Icon="save" Text="Lưu thay đổi" ButtonStyle="ButtonStyle.Success" Shade="Shade.Lighter" Size="ButtonSize.Small" Variant="Variant.Flat"
                                                              Click=@(() => OnUpdateThongTinNguyenVatLieu(SelectedNgVatLieu))
                                                              BusyText="Saving ..." IsBusy=@isSavingNVLInfors />
                                            </RadzenStack>
                                        </RadzenStack>
                                    </RadzenCard>
                                </RadzenColumn>
                            </RadzenRow>
                        </RadzenStack>
                    </RadzenCard>
                </RadzenTabsItem>
                <RadzenTabsItem Text="Kho thành phẩm"></RadzenTabsItem>
            </Tabs>
        </RadzenTabs>
    </RadzenColumn>
</RadzenRow>

@code {
    private List<string>? UserRoles;
    private DateTime startSearchDay = DateTime.Today;
    private DateTime endSearchDay = DateTime.Today;

    private bool isDisplaybyDay = false;
    private bool isSavingNVLInfors = false;

    private bool isSelectAllLoaiNVL = false;
    private List<DanhMucNVL>? DanhMucNVLs;
    private DanhMucNVL? SelectedDanhMuc;

    private bool isSelectAllNguyenVatLieu = true;
    private List<LoaiNVL>? DSLoaiNVLs;
    private LoaiNVL? SelectedLoaiNVL;

    private List<NguyenVatLieu>? DSNguyenVatLieus;
    private IList<NguyenVatLieu>? SelectedNgVatLieu;

    private string pagingSummaryFormat = "Displaying page {0} of {1} <b>(total {2} records)</b>";
    private string allLoainvlFormat = "Tất cả";
    private bool isEditNVLDetail = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        var user = authState?.User;

        if (user != null && user.Identity?.IsAuthenticated == true)
        {
            UserRoles = user.Claims.Where(c => c.Type == "role").Select(c => c.Value).ToList();
        }

        LoadList_DanhMuc();

        LoadList_LoaiNVL();

        LoadList_NguyenVatLieu();

        ReSelectCurrentNguyenVatLieu();

        await base.OnInitializedAsync();
    }

    // Searching
    private async Task FilterNVL(object? args)
    {
        SelectedNgVatLieu = null;

        string tennvl = args?.ToString()?.Trim() ?? string.Empty;

        LoadList_LoaiNVL();

        LoadList_NguyenVatLieu();

        await Task.Delay(100);

        List<NguyenVatLieu>? NVLsFilter = DSNguyenVatLieus?.FindAll(cl => cl.TenNVL.Value?.ToString()?.IndexOf(tennvl, StringComparison.OrdinalIgnoreCase) >= 0);

        DSNguyenVatLieus = NVLsFilter;
    }

    // Load danh sach loai nguyen lieu
    private void LoadList_LoaiNVL()
    {
        DateTime offsetendDay = endSearchDay.AddDays(1);

        if (isSelectAllLoaiNVL)
        {
            DSLoaiNVLs = SQLServerServices.GetListLoaiNVLs();
        }
        else
        {
            DSLoaiNVLs = SQLServerServices.GetListLoaiNVLs(SelectedDanhMuc?.DMID.Value);
        }
    }

    // Load danh sach nguyen vat lieu
    private void LoadList_NguyenVatLieu()
    {
        SelectedNgVatLieu = null;

        DateTime offsetendDay = endSearchDay.AddDays(1);

        if (isSelectAllNguyenVatLieu)
        {
            if (isDisplaybyDay)
            {
                DSNguyenVatLieus = SQLServerServices.GetListNgVatLieuByDanhmucID(SelectedDanhMuc?.DMID.Value).Where(sp => (startSearchDay <= Convert.ToDateTime(sp.NgayCapNhat.Value) && Convert.ToDateTime(sp.NgayCapNhat.Value) < offsetendDay)).ToList();
            }
            else
            {
                DSNguyenVatLieus = SQLServerServices.GetListNgVatLieuByDanhmucID(SelectedDanhMuc?.DMID.Value);
            }
        }
        else
        {
            if (isDisplaybyDay)
            {
                DSNguyenVatLieus = SQLServerServices.GetListNguyenVatLieu(SelectedLoaiNVL?.LOAINVLID.Value).Where(nvl => (startSearchDay <= Convert.ToDateTime(nvl.NgayCapNhat.Value)
                                                        && Convert.ToDateTime(nvl.NgayCapNhat.Value) < offsetendDay)).ToList();
            }
            else
            {
                DSNguyenVatLieus = SQLServerServices.GetListNguyenVatLieu(SelectedLoaiNVL?.LOAINVLID.Value);
            }
        }
    }

    // Load danh sach danh muc
    private void LoadList_DanhMuc()
    {
        DanhMucNVLs = SQLServerServices.GetListDanhMucNVLs();
        // Asign danh muc nguyen vat lieu
        SelectedDanhMuc = DanhMucNVLs?.FirstOrDefault(dm => dm.TenDanhMuc.Value?.ToString() == "Nguyên liệu gia công");
    }

    // Re-selected current nguyenvatlieu
    private void ReSelectCurrentNguyenVatLieu()
    {
        if (DSNguyenVatLieus != null)
        {
            if (Common.SelectedNVLid == null) // get fist row of dsnvl
            {
                var fistitem = DSNguyenVatLieus.FirstOrDefault();

                if (fistitem != null) { SelectedNgVatLieu = new List<NguyenVatLieu>() { fistitem }; }
            }
            else
            {
                var selectedID = Common.SelectedNVLid;
                // load last selected item
                var selecteditem = DSNguyenVatLieus.FirstOrDefault(nvl => nvl.NVLID.Value?.ToString() == selectedID.ToString());

                if (selecteditem != null) { SelectedNgVatLieu = new List<NguyenVatLieu>() { selecteditem }; }
            }
        }
    }

    private void OnSelectDanhMucValueChanged(string danhmuc)
    {
        SelectedDanhMuc = DanhMucNVLs?.FirstOrDefault(dm => dm.TenDanhMuc.Value?.ToString()?.Trim() == danhmuc);

        if (danhmuc == allLoainvlFormat)
        {
            isSelectAllLoaiNVL = true;
        }

        LoadList_LoaiNVL();
    }

    private void OnSelectLoaiNVLValueChanged(string loainvl)
    {
        if (loainvl == allLoainvlFormat)
        {
            SelectedLoaiNVL = null;
            isSelectAllNguyenVatLieu = true;
        }
        else
        {
            isSelectAllNguyenVatLieu = false;
            SelectedLoaiNVL = DSLoaiNVLs?.FirstOrDefault(dm => dm.TenLoaiNVL.Value?.ToString()?.Trim() == loainvl);
        }

        LoadList_NguyenVatLieu();
    }

    // Them nguyen vat lieu
    private async Task OnThemNguyenVatLieu()
    {
        await DialogService.OpenAsync<DialogThemNguyenVatLieu>(null, new Dictionary<string, object>() { { "SelectLoaiNVL", SelectedLoaiNVL ?? new() } },
        new DialogOptions() { ShowTitle = false, Width = "50%", Height = "95%", Resizable = false, Draggable = false, ShowClose = false, Style = "background-color: while; border-radius: 0px; padding: 0px" });

        LoadList_LoaiNVL();
    }

    // Press button Edit/Cancel
    private void EnableEditNVLDetail(object? slectedID)
    {
        if (isEditNVLDetail)
        {
            // Press cancel button
            isEditNVLDetail = false;


            // Reload value of selectedNVL after press cancel button
            LoadList_NguyenVatLieu();

            var selectnvl = DSNguyenVatLieus?.FirstOrDefault(nvl => nvl.NVLID.Value?.ToString() == slectedID?.ToString());

            if (selectnvl != null)
            {
                SelectedNgVatLieu = new List<NguyenVatLieu>() { selectnvl };
            }

            //SelectedNgVatLieu = SQLServerServices.GetNguyenVatLieubyID(slectedID);
        }
        else
        {
            // Press edit button
            isEditNVLDetail = true;
        }
    }

    private async Task OpendialogRenameThongTinNVL(NguyenVatLieuDetail ngvlDetail)
    {
        var deletestatus = await DialogService.OpenAsync<DialogRenameThongTinNgVatLieu>(null, new Dictionary<string, object>() { { "NgVLieuDetail", ngvlDetail } },
        new DialogOptions() { ShowTitle = false, Width = "45%", Height = "contain", Resizable = false, Draggable = false, ShowClose = false, Style = "background-color: while; border-radius: 10px; padding: 0px" });

        if (deletestatus != null)
        {
            LoadList_LoaiNVL();

            LoadList_NguyenVatLieu();

            ReSelectCurrentNguyenVatLieu();
        }
    }

    private async Task OpendialogDeleteThongTinNVL(NguyenVatLieuDetail ngvlDetail)
    {
        var deletestatus = await DialogService.OpenAsync<DialogDeleteThongTinNgVatLieu>(null, new Dictionary<string, object>() { { "NgVLieuDetail", ngvlDetail } },
        new DialogOptions() { ShowTitle = false, Width = "45%", Height = "contain", Resizable = false, Draggable = false, ShowClose = false, Style = "background-color: while; border-radius: 10px; padding: 0px" });

        if (deletestatus != null)
        {
            LoadList_LoaiNVL();

            LoadList_NguyenVatLieu();

            ReSelectCurrentNguyenVatLieu();
        }
    }

    // Add new NVL detail
    private async Task OnOpenDialogAddNewNVLDetail()
    {
        var newNVLDetail = await DialogService.OpenAsync<DialogAddnewNVLdetail>(null, new Dictionary<string, object>() { { "NgVLieu", SelectedNgVatLieu?.FirstOrDefault() ?? new() } },
        new DialogOptions() { ShowTitle = false, Width = "45%", Height = "contain", Resizable = false, Draggable = false, ShowClose = false, Style = "background-color: while; border-radius: 10px; padding: 0px" });

        LoadList_LoaiNVL();

        LoadList_NguyenVatLieu();

        ReSelectCurrentNguyenVatLieu();
    }

    // Save nguyen vat lieu updatedinfors
    private async Task OnUpdateThongTinNguyenVatLieu(IList<NguyenVatLieu>? inputItems)
    {
        var updateItems = inputItems?.FirstOrDefault();

        if (updateItems != null)
        {
            isSavingNVLInfors = true; await Task.Delay(300);

            // Update truong thong tin chinh

            (int mainUDresult, string mainUDerror) = SQLServerServices.UpdateNguyenVatLieuMainDetails(updateItems);

            if (mainUDresult == -1)
            {
                await DialogService.Alert($"Lỗi: {mainUDerror}", "<strong><span style='color: red'>Error!</span></strong>", new AlertOptions() { OkButtonText = "OK", ShowClose = true });
            }
            else
            {
                // Update truong thong tin phu

                (int subUDresult, string subUDerror) = SQLServerServices.UpdateListNguyenVatLieuDetails(updateItems.DSNguyenVatLieuDetails);

                if (mainUDresult == -1)
                {
                    await DialogService.Alert($"Lỗi: {mainUDerror}", "<strong><span style='color: red'>Error!</span></strong>", new AlertOptions() { OkButtonText = "OK", ShowClose = true });
                }
                else
                {
                    await DialogService.Alert($"Cập nhật thành công!", "<strong><span style='color: darkgreen'>Success!</span></strong>", new AlertOptions() { OkButtonText = "OK", ShowClose = true });
                    isEditNVLDetail = false;
                }
            }

            isSavingNVLInfors = false;

            LoadList_NguyenVatLieu();

            ReSelectCurrentNguyenVatLieu();
        }
    }

    // Datagrid selected changed event
    private void OnDatagridSelectChanged(IList<NguyenVatLieu> selectedNgvatlieu)
    {
        SelectedNgVatLieu = selectedNgvatlieu;

        var fistItemSelectdNVL = SelectedNgVatLieu.FirstOrDefault();

        // Save selected NVLid into static variable
        if (fistItemSelectdNVL != null)
        {
            Common.SelectedNVLid = fistItemSelectdNVL.NVLID.Value;
        }
    }

    private void OnCellRender(DataGridCellRenderEventArgs<NguyenVatLieu> args)
    {
        if (args.Column.Property.Contains("ID"))
        {
            args.Attributes.Add("style", $"font-weight: bold;");
        }
    }

    // Tooltip
    void ShowToolTip(ElementReference elementReference, TooltipPosition position, string content)
    {
        TooltipOptions options = new TooltipOptions() { Position = position, Delay = 500, Style = "background-color: var(--rz-primary-dark);" };

        TooltipService.Open(elementReference, content, options);
    }
}
