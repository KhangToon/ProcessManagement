@using ProcessManagement.Commons
@using ProcessManagement.Models.KHO_NVL
@using ProcessManagement.Services.SQLServer
@using Radzen.Blazor
@using Radzen
@using ProcessManagement.Models;
@using ProcessManagement.Models.KHO_NVL.XuatKho
@using ProcessManagement.Services.QRCodes

@inject DialogService DialogService
@inject NotificationService NotificationService
@inject TooltipService TooltipService
@inject SQLServerServices SQLServerServices
@inject QRCodeServices QRCodeServices
@inject IJSRuntime JSRuntime

<RadzenCard Variant="Variant.Filled" Style="height: 100%; width: 100%; padding: 10px;">
    <RadzenStack Gap="10px" Orientation="Orientation.Vertical" Style=" height: 100%; width: 100%; padding: 0px; padding-bottom: 10px " AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
        <!--Header Phieu Xuat Kho-->
        <RadzenStack Gap="10px" Style="height: contain; width: 100%; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
            <RadzenStack Gap="5px" Style="height: contain; width: contain; padding: 0px;" Orientation="Orientation.Vertical" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                <RadzenStack Gap="5px" Style="height: contain; width: contain; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                    <RadzenText Text="@($"Mã phiếu:")" Style="font-weight: 600; font-size: 15px; font-style: italic;"></RadzenText>
                    <RadzenText Text="@($"{PXK.MaPhieuXK.Value?.ToString()}")" Style="font-weight: 600; font-size: 15px; font-style: italic; color: black;"></RadzenText>
                </RadzenStack>
                <RadzenStack Gap="5px" Style="height: contain; width: contain; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                    <RadzenText Text="@($"Người lập phiếu:")" Style="font-weight: 600; font-size: 15px; font-style: italic;"></RadzenText>
                    <RadzenText Text="@($"{PXK.NguoiLapPXK.Value?.ToString()}")" Style="font-weight: 600; font-size: 15px; font-style: italic; color: black;"></RadzenText>
                </RadzenStack>
            </RadzenStack>
            <RadzenStack Gap="20px" Style="height: contain; width: contain; padding: 10px; padding-left: 20px; padding-right: 20px; border-radius: 5px; border-bottom: var(--rz-series-1); " Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                <RadzenText Text="CHI TIẾT PHIẾU XUẤT KHO" Style="color: black; font-weight: bold; font-size: 20px"></RadzenText>
            </RadzenStack>
            <RadzenStack Gap="5px" Style="height: contain; width: contain; padding: 0px;" Orientation="Orientation.Vertical" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                <RadzenStack Gap="5px" Style="height: contain; width: contain; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                    <RadzenText Text="@($"Ngày lập phiếu:")" Style="font-weight: 600; font-size: 15px; font-style: italic;"></RadzenText>
                    <RadzenText Text="@($"{PXK.NgayLapPXK.Value?.ToString()}")" Style="font-weight: 600; font-size: 15px; font-style: italic; color: black;"></RadzenText>
                </RadzenStack>
                <RadzenStack Gap="5px" Style="height: contain; width: contain; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Center">
                    <RadzenText Text="@($"Lệnh:")" Style="font-weight: 600; font-size: 15px; font-style: italic;"></RadzenText>
                    <RadzenText Text="@($"Xuất kho")" Style="font-weight: 600; font-size: 15px; font-style: italic; color: black;"></RadzenText>
                </RadzenStack>
            </RadzenStack>
        </RadzenStack>
        <RadzenRow class="rowbackground-style" Gap="10px" Style="height: 100%; width: 100%; padding-top: 10px; border-radius: 0; overflow-y: auto; border-top: var(--rz-grid-cell-border);">
            <!--Danh sach san pham xuat kho-->
            <RadzenColumn Size="12" SizeMD="5" Style="height: 100%; width: 100%; border-right: var(--rz-grid-cell-border); padding-right: 10px">
                <RadzenStack Gap="5px" Style="height: 100%; width: 100%;" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                    <RadzenStack Visible="@(PXK.DSNVLofPXKs.Count > 0)" Gap="10px" Style="height: contain; width: 100%; padding: 0px; padding-left: 0" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                        <RadzenText Text="Danh sách nguyên liệu xuất kho" Style="font-weight: 600; height: contain; width: contain; font-style: italic; color: darkred"></RadzenText>
                        <RadzenText Text="@($"Tổng NVL cần xuất kho: {PXK.DSNVLofPXKs?.Sum(nvl => (int.TryParse(nvl.NVLXKSoLuongAll.Value?.ToString(), out int dm) ? dm : 0)) ?? 0} ({SelectedNVLofPXK.TargetNgLieu.DonViTinh.Value?.ToString()})")" Style="font-size: 16px; font-weight: 600; color: darkgreen; height: contain; width: contain"></RadzenText>
                    </RadzenStack>
                    <!--Table listNVL-->
                    <RadzenDataGrid class="rz-grid-table-fixed-2" Data="@(PXK.DSNVLofPXKs)" TItem="NVLofPhieuXuatKho"
                                    EmptyText="Danh sách nguyên liệu trống."
                                    ShowColumnTitleAsTooltip="true" ShowCellDataAsTooltip="true"
                                    AllowFiltering="false" FilterMode="FilterMode.Simple"
                                    AllowPaging="true" AllowSorting="false" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                    ShowPagingSummary="true" PagerPosition="PagerPosition.Bottom" Style="padding-right: 5px"
                                    GridLines="DataGridGridLines.Both" PageSize="10" Density="Density.Compact"
                                    HeaderCellRender="@(args => args.Attributes.Add("style", $"background-color: rgba(58, 71, 77)"))"
                                    CellRender="@OnCellRender" Value="@DatagridSelectedNVLofPXK" ValueChanged="@((args) => OnDatagridSelectChanged(args))">
                        <Columns>
                            @{
                                List<Propertyy> columns = PXK.DSNVLofPXKs.FirstOrDefault()?.GetPropertiesValues() ?? new();

                                <!--Column ID-->
                                <RadzenDataGridColumn Width="50px" Frozen="true" FrozenPosition="FrozenColumnPosition.Left" Filterable="false"
                                                      TItem="NVLofPhieuXuatKho" Title="#"
                                                      Property="STT" TextAlign="TextAlign.Center">
                                    <HeaderTemplate>
                                        <span style="font-weight: 600; font-size: 15px; color: white">STT</span>
                                    </HeaderTemplate>
                                    <Template Context="nvl">
                                        <span style="font-weight: bold;">@(PXK.DSNVLofPXKs.IndexOf(nvl) + 1)</span>
                                    </Template>
                                </RadzenDataGridColumn>

                                <!--Column TenNVL-->
                                <RadzenDataGridColumn Width="contain" TItem="NVLofPhieuXuatKho" Title="Tên nguyên vật liệu"
                                                      Property="tennvl" TextAlign="TextAlign.Center">
                                    <HeaderTemplate>
                                        <span style="font-weight: 600; font-size: 15px; color: white">Tên NVL</span>
                                    </HeaderTemplate>
                                    <Template Context="nvl">
                                        <span style="color: black; font-weight: bold;">@($"{nvl?.TargetNgLieu.TenNVL.Value?.ToString()}")</span>
                                    </Template>
                                </RadzenDataGridColumn>

                                <!--Column SL can xuat-->
                                <RadzenDataGridColumn Width="contain" TItem="NVLofPhieuXuatKho" Title="Số lượng xuất kho"
                                                      Property="slxuatkho" TextAlign="TextAlign.Center">
                                    <HeaderTemplate>
                                        <span style="font-weight: 600; font-size: 15px; color: white">SL xuất</span>
                                    </HeaderTemplate>
                                    <Template Context="nvl">
                                        <span style="color: black; font-weight: bold;">@($"{nvl?.NVLXKSoLuongAll.Value?.ToString()} ({nvl?.TargetNgLieu.DonViTinh.Value?.ToString()})")</span>
                                    </Template>
                                </RadzenDataGridColumn>

                                <!--Column TonKhoNVL-->
                                <RadzenDataGridColumn Width="contain" TItem="NVLofPhieuXuatKho" Title="Tồn kho"
                                                      Property="tonkho" TextAlign="TextAlign.Center">
                                    <HeaderTemplate>
                                        <span style="font-weight: 600; font-size: 15px; color: white">Tồn kho</span>
                                    </HeaderTemplate>
                                    <Template Context="nvl">
                                        <RadzenText Text="(Xem)" @onclick="@(() => OnOpenDialogXemChitietNVL(nvl.TargetNgLieu))" Style="font-size: 14px; font-weight: 600; height: contain; color: Highlight; font-style: italic; cursor: pointer"></RadzenText>
                                    </Template>
                                </RadzenDataGridColumn>

                                <!--Column trang thai xuat kho-->
                                <RadzenDataGridColumn Width="contain" TItem="NVLofPhieuXuatKho" Title="Trạng thái" Frozen="false"
                                                      Property="trangthai" TextAlign="TextAlign.Center">
                                    <HeaderTemplate>
                                        <span style="font-weight: 600; font-size: 15px; color: white">Trạng thái</span>
                                    </HeaderTemplate>
                                    <Template Context="nvl">
                                        @{
                                            if (nvl.IsXuatKhoDone)
                                            {
                                                <RadzenButton Icon="check" Text="Done" ButtonStyle="ButtonStyle.Success" Size="ButtonSize.Small" Shade="Shade.Darker" Variant="Variant.Outlined"
                                                              Style="border-radius: 5px; --rz-icon-size: 18px; height: 30px; width: 100%; cursor: default; background-color: rgb(229,245,233);" />
                                            }
                                            else
                                            {
                                                <RadzenButton Text="Not done" ButtonStyle="ButtonStyle.Warning" Size="ButtonSize.Small" Shade="Shade.Darker" Variant="Variant.Outlined"
                                                              Style="border-radius: 5px; --rz-icon-size: 18px; height: 30px; width: 100%; cursor: default; background-color: rgb(254,243,220);" />
                                            }
                                        }

                                    </Template>
                                </RadzenDataGridColumn>
                            }
                        </Columns>
                    </RadzenDataGrid>
                    <!--Ngay xuat kho-->
                    <RadzenStack Gap="0" Style="height: contain; width: 100%; padding-left: 10px; padding-bottom: 5px; padding-top: 15px; border-bottom: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                        <RadzenStack Style="width: 35%;">
                            <RadzenText Text="Ngày xuất kho" Style="font-size: 16px; font-weight: 500; height: contain; width: 100% "></RadzenText>
                        </RadzenStack>
                        <RadzenStack Style="width: 65%; height: 100%; padding-left: 20px; border-left: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                            <RadzenText Text="@PXK.NgayLapPXK.Value?.ToString()" Style="font-size: 16px; font-weight: 600; color: black; height: contain; width: 100% "></RadzenText>
                        </RadzenStack>
                    </RadzenStack>
                    <!--Nguoi xuat kho-->
                    <RadzenStack Gap="0" Style="height: contain; width: 100%; padding-left: 10px; padding-bottom: 5px; padding-top: 5px; border-bottom: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                        <RadzenStack Style="width: 35%;">
                            <RadzenText Text="Người xuất kho" Style="font-size: 16px; font-weight: 500; height: contain; width: 100% "></RadzenText>
                        </RadzenStack>
                        <RadzenStack Style="width: 65%; height: 100%; padding-left: 20px; border-left: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                            <RadzenText Text="@PXK.NguoiLapPXK.Value?.ToString()" Style="font-size: 16px; font-weight: 600; color: black; height: contain; width: 100% "></RadzenText>
                        </RadzenStack>
                    </RadzenStack>
                    <!--Phieu xuat kho ghi chu-->
                    <RadzenStack Gap="0" Style="height: contain; width: 100%; padding-left: 10px; padding-bottom: 5px; padding-top: 5px; border-bottom: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                        <RadzenStack Style="width: 35%;">
                            <RadzenText Text="Ghi chú" Style="font-size: 16px; font-weight: 500; height: contain; width: 100% "></RadzenText>
                        </RadzenStack>
                        <RadzenStack Style="width: 65%; height: 100%; padding-left: 20px; border-left: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                            <RadzenText Text="@PXK.GhiChuPXK.Value?.ToString()" Style="font-size: 16px; font-weight: 600; color: black; height: contain; width: 100% "></RadzenText>
                        </RadzenStack>
                    </RadzenStack>

                    <RadzenStack Gap="10px" Style="height: contain; width: 100%; padding: 5px;" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                        <RadzenStack Gap="20px" Style="height: contain; width: 100%; border-radius: 5px; background-color: var(--rz-secondary-lighter); padding: 5px; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                            <RadzenText Text="@($"Scan mã phiếu: ")" Style="font-weight: 600; font-size: 16px; color: black;"></RadzenText>
                            <RadzenStack Gap="10" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                <RadzenText Text="@($"{PXK.MaPhieuXK.Value?.ToString()}")" Style="font-weight: 600; font-size: 18px; color: darkblue;"></RadzenText>
                                <RadzenButton Click="@(() => CopyToClipboard(PXK.MaPhieuXK.Value?.ToString()?? string.Empty))" Icon="content_copy" Style="--rz-icon-size: 18px;" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Primary" Shade="Shade.Light" />
                            </RadzenStack>
                        </RadzenStack>
                        <RadzenCard Variant="Variant.Flat" Style="width: 100%; height: contain; padding: 5px; border-radius: 0">
                            <RadzenStack Style="height: contain; width: contain" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                @{
                                    string qrBase64string = QRCodeServices.GenerateQRCode(PXK.MaPhieuXK.Value?.ToString() ?? string.Empty, 120);
                                    <img style="border-radius: 10px;" src="@($"data:image/png;base64,{qrBase64string}")" alt="QR Code">
                                }
                            </RadzenStack>
                        </RadzenCard>
                    </RadzenStack>

                </RadzenStack>
            </RadzenColumn>
            <!--Chi dinh so luong xuat kho moi NVL-->
            <RadzenColumn Size="12" SizeMD="7" Style="height: 100%; width: 100%;">
                <RadzenRow Visible="@(SelectedNVLofPXK.NVLID.Value != null && PXK.DSNVLofPXKs.Count > 0)" class="rowbackground-style" Gap="10px" Style="height: 100%; width: 100%; border-radius: 0; overflow: scroll">
                    <RadzenColumn Size="12" SizeMD="12" Style="height: contain; width: 100%;">
                        <RadzenStack Gap="0" Style="height: 100%; width: 100%; padding: 0px; padding-top: 30px; border-radius: 10px;" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                            <RadzenStack Visible="@(PXK.DSNVLofPXKs.Count > 0)" Gap="10px" Style="height: contain; width: 100%; padding: 0px; padding-left: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                <RadzenText Text="Danh sách lệnh xuất kho của nguyên liệu" Style="color: darkred; font-weight: 600; font-size: 16px; height: contain; width: contain; font-style: italic;"></RadzenText>
                                <RadzenText Text="@($"(nguyên liệu {SelectedNVLofPXK.TargetNgLieu.TenNVL.Value?.ToString()})")" Style="color: black; font-weight: 600; font-size: 16px; height: contain; width: contain; font-style: italic;"></RadzenText>
                            </RadzenStack>
                            <!--Tong so luong xuat kho-->
                            <RadzenStack Gap="20px" Style="height: contain; width: 100%; padding: 10px; padding-bottom: 5px; margin-top: 10px; border-top: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                <RadzenStack Gap="10px" Style="height: contain; width: contain; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                    <RadzenText Text="Tổng xuất kho" Style="font-size: 16px; font-weight: 600; height: contain; width: contain "></RadzenText>
                                    <RadzenText Text="@($"(nguyên liệu {SelectedNVLofPXK.TargetNgLieu.TenNVL.Value?.ToString()})")" Style="color: black; font-weight: 600; font-size: 16px; height: contain; width: contain; font-style: italic;"></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 30%; height: 100%; padding-left: 10px; border-left: var(--rz-grid-cell-border);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenText Text="@($"{SelectedNVLofPXK.NVLXKSoLuongAll.Value?.ToString()} ({SelectedNVLofPXK.TargetNgLieu.DonViTinh.Value?.ToString()})")" Style="font-size: 18px; font-weight: 600; color: darkgreen; height: contain; width: 100% "></RadzenText>
                                </RadzenStack>
                            </RadzenStack>
                            <RadzenStack Visible="@(int.Parse(SelectedNVLofPXK.NVLXKSoLuongAll.Value?.ToString()?? "0") > 0)" Gap="10px" Style="height: contain; width: 100%; padding: 10px; padding-bottom: 0" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                <RadzenButton Visible=@(!SelectedNVLofPXK.IsXuatKhoDone) Text="Chưa xuất đủ số lượng cần xuất kho của nguyên liệu" ButtonStyle="ButtonStyle.Warning" Size="ButtonSize.Small" Shade="Shade.Darker" Variant="Variant.Outlined"
                                              Style="border-radius: 5px; --rz-icon-size: 18px; height: 20px; width: 100%; cursor: default; background-color: rgb(254,243,220);" />
                                <RadzenButton Visible=@(SelectedNVLofPXK.IsXuatKhoDone) Icon="check" Text="Đã xuất đủ số lượng cần xuất kho của nguyên liệu" ButtonStyle="ButtonStyle.Success" Size="ButtonSize.Small" Shade="Shade.Darker" Variant="Variant.Outlined"
                                              Style="border-radius: 5px; --rz-icon-size: 18px; height: 20px; width: 100%; cursor: default; background-color: rgb(229,245,233);" />
                            </RadzenStack>
                            <RadzenStack Style="height: 100%; width: 100%; padding: 5px; padding-left: 10px; padding-right: 10px; margin-top: 5px" Gap="5px" Orientation="Orientation.Vertical">
                                <RadzenStack Style="width: 100%; height: contain; padding: 0" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                    <RadzenCard Variant="Variant.Outlined" Style="height: contain; width: 100%; padding: 10px; margin-bottom: 10px">
                                        <RadzenStack Gap="5px" Orientation="Orientation.Vertical" Style=" height: contain; width: 100%; padding: 0px;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                            <RadzenStack Gap="20px" Style="height: contain; width: 100%; padding: 5px; padding-right: 10px; padding-left: 10px; background-color: var(--rz-primary-lighter);" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                                                <RadzenText Text="Vị trí xuất kho" Style="color: black; font-weight: 500; font-size: 16px"></RadzenText>
                                            </RadzenStack>
                                            <RadzenStack Gap="5px" Orientation="Orientation.Vertical" Style=" height: contain; width: 100%; max-height: 350px; padding-right: 0;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                <RadzenCard Variant="Variant.Flat" Style="width: 100%; height: contain; padding: 5px; padding-right: 0px; background-color: rgb(58, 71, 77)">
                                                    <RadzenStack Style="width: 100%; height: contain; " Gap="10px" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                        <RadzenStack Style="width: 3%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                            <RadzenText Text="#" Style="color: white; font-weight: 500; font-size: 14px"></RadzenText>
                                                        </RadzenStack>
                                                        <RadzenStack Style="width: 20%; height: contain; padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                            <RadzenText Text="Mã vị trí" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                                        </RadzenStack>
                                                        <RadzenStack Style="width: 15%; height: contain; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                            <RadzenText Text="LOT vị trí" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                                        </RadzenStack>
                                                        <RadzenStack Style="width: 20%; height: contain; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                            <RadzenText Text="SL xuất kho" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                                        </RadzenStack>
                                                        <RadzenStack Style="width: 20%; height: contain; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                            <RadzenText Text="Ngày xuất" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                                        </RadzenStack>
                                                        <RadzenStack Style="width: 20%; height: contain; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                            <RadzenText Text="Thực hiện" Style="color: white; font-weight: 500; font-size: 16px"></RadzenText>
                                                        </RadzenStack>
                                                    </RadzenStack>
                                                </RadzenCard>

                                                @if (SelectedNVLofPXK.DSLenhXKs.Count > 0)
                                                {
                                                    foreach (var lxk in SelectedNVLofPXK.DSLenhXKs)
                                                    {
                                                        int SLnvlhiencoTaivitri = int.TryParse(lxk.ViTriofNVL.VTNVLSoLuong.Value?.ToString(), out int slhc) ? slhc : 0;
                                                        int SLLXkhoTake = int.TryParse(lxk.LXKSoLuong.Value?.ToString(), out int sltake) ? sltake : 0;

                                                        <RadzenCard Variant="Variant.Outlined" Style="width: 100%; height: contain; padding: 7px; padding-right: 0px; background-color: white">
                                                            <RadzenStack Style="width: 100%; height: contain" Gap="10px" Orientation=Orientation.Horizontal AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
                                                                <RadzenStack Style="width: 3%; height: contain;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                    <RadzenText Text="@($"{(SelectedNVLofPXK.DSLenhXKs.IndexOf(lxk) + 1).ToString()}")" Style="color: black; font-weight: 600; font-size: 14px"></RadzenText>
                                                                </RadzenStack>

                                                                <RadzenStack Style="width: 20%; height: contain; border-left: var(--rz-grid-cell-border); border-right: var(--rz-grid-cell-border); padding-left: 10px; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                    <RadzenStack Style="height: contain; min-height: 35px; width: 100%; border-radius: 5px; background-color: var(--rz-secondary-lighter); padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                        <RadzenText Text="@($"{lxk.ViTriofNVL.VitriInfor.MaViTri.Value?.ToString()}")" Style="color: black; font-weight: 600; font-size: 15px"></RadzenText>
                                                                    </RadzenStack>
                                                                </RadzenStack>

                                                                <RadzenStack Style="width: 15%; height: contain; border-right: var(--rz-grid-cell-border); padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                    <RadzenStack Style="height: contain; min-height: 35px; width: 100%; border-radius: 5px; background-color: var(--rz-secondary-lighter); padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                        <RadzenText Text="@($"{lxk.LotVitri.Value?.ToString()}")" Style="color: black; font-weight: 600; font-size: 15px"></RadzenText>
                                                                    </RadzenStack>
                                                                </RadzenStack>

                                                                <RadzenStack Style="width: 20%; height: contain; border-right: var(--rz-grid-cell-border); padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                    <RadzenStack Style="height: contain; min-height: 35px; width: 100%; border-radius: 5px; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                        <RadzenText Text="@($"{lxk.LXKSoLuong.Value?.ToString()} ({SelectedNVLofPXK.TargetNgLieu.DonViTinh.Value?.ToString()})")" Style="color: darkred; font-weight: 600; font-size: 16px"></RadzenText>
                                                                    </RadzenStack>
                                                                </RadzenStack>

                                                                <RadzenStack Style="width: 20%; height: contain; border-right: var(--rz-grid-cell-border); padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                    <RadzenStack Style="height: contain; min-height: 35px; width: 100%; border-radius: 5px; padding: 0px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                        <RadzenText Text="@($"{lxk.NgayXuatKho.Value?.ToString()}")" Style="color: black; font-weight: 600; font-size: 16px"></RadzenText>
                                                                    </RadzenStack>
                                                                </RadzenStack>

                                                                <RadzenStack Style="width: 20%; height: contain; padding-right: 10px" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                                    @{
                                                                        int islxkDone = int.TryParse(lxk.LXKIsDone.Value?.ToString(), out int lxkd) ? lxkd : 0;

                                                                        if (islxkDone == 1)
                                                                        {
                                                                            <RadzenButton Icon="check" Text="Done" ButtonStyle="ButtonStyle.Success" Size="ButtonSize.Small" Shade="Shade.Darker" Variant="Variant.Outlined"
                                                                                          Style="border-radius: 5px; --rz-icon-size: 18px; font-size: 16px; height: contain; min-height: 35px; width: 100%; cursor: default; background-color: rgb(229,245,233);" />
                                                                        }
                                                                        else
                                                                        {
                                                                            <RadzenButton Text="Xuất" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Shade="Shade.Dark" Variant="Variant.Flat"
                                                                                          Click="@(() => OnOpenDialogHandleLenhXuatKho(lxk))" Icon="upload"
                                                                                          Style="border-radius: 5px; --rz-icon-size: 18px; font-size: 16px; height: contain; min-height: 35px; width: 100%;" />
                                                                        }
                                                                    }
                                                                </RadzenStack>
                                                            </RadzenStack>
                                                        </RadzenCard>
                                                    }
                                                }
                                                else
                                                {
                                                    <RadzenStack Style="width: 100%; height: contain; " Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                                        <RadzenText Text="Sản phẩm chưa được nhập kho" Style="font-size: 16px; font-weight: 500; height: contain; color: red"></RadzenText>
                                                    </RadzenStack>
                                                }
                                            </RadzenStack>
                                        </RadzenStack>
                                    </RadzenCard>
                                </RadzenStack>
                            </RadzenStack>
                        </RadzenStack>
                    </RadzenColumn>
                </RadzenRow>
            </RadzenColumn>
        </RadzenRow>
    </RadzenStack>
</RadzenCard>

@code {

    [Parameter]
    public PhieuXuatKho PXK { get; set; } = new();

    [Parameter]
    public int TargetKHSXID { get; set; } = 0;

    private IList<NVLofPhieuXuatKho> DatagridSelectedNVLofPXK = new List<NVLofPhieuXuatKho>();

    private NVLofPhieuXuatKho SelectedNVLofPXK = new();

    protected override void OnParametersSet()
    {
        SelectedNVLofPXK = PXK.DSNVLofPXKs.FirstOrDefault() ?? new();

        DatagridSelectedNVLofPXK = new List<NVLofPhieuXuatKho>() { SelectedNVLofPXK };

        // Kiem tra tong so luong chi dinh bang tong so luong can lay
        foreach (var nvlofpxk in PXK.DSNVLofPXKs)
        {
            nvlofpxk.IsChidinhDuSoluongXuatKho = IsChidinhDuSoLuongXuatKho(nvlofpxk);
        }

        base.OnParametersSet();
    }

    // Kiem tra tong so luong chi dinh bang tong so luong can lay
    private bool IsChidinhDuSoLuongXuatKho(NVLofPhieuXuatKho nvlofpxk)
    {
        bool isSlgAsigned = false;

        int sumsoluongtake = nvlofpxk.DSLenhXKs.Sum(lenh => int.TryParse(lenh.LXKSoLuong.Value?.ToString(), out int slt) ? slt : 0);

        int slallNVLxuatkho = int.TryParse(nvlofpxk.NVLXKSoLuongAll.Value?.ToString(), out int slall) ? slall : 0;

        if (slallNVLxuatkho > 0 && sumsoluongtake == slallNVLxuatkho)
        {
            isSlgAsigned = true;
        }

        return isSlgAsigned;
    }

    // Dialog xem chi tiet NVL
    private async Task OnOpenDialogXemChitietNVL(NguyenVatLieu nguyenVatLieu)
    {
        await DialogService.OpenAsync<Manager_NVL.Dialogs.DialogDetailsNguyenVatLieu>(null, new Dictionary<string, object>() { { "NgVLieu", nguyenVatLieu } },
        new DialogOptions() { ShowTitle = false, Width = "50%", Height = "contain", Resizable = false, Draggable = false, ShowClose = false, Style = "background-color: while; border-radius: 10px; padding: 0px" });
    }

    // Handle lenh xuat kho
    private async Task OnOpenDialogHandleLenhXuatKho(LenhXuatKho lxk)
    {
        lxk.ViTriofNVL.NgLieuInfor = SelectedNVLofPXK.TargetNgLieu;

        PXK.KHSXID.Value = (TargetKHSXID > 0) ? TargetKHSXID : null;

        await DialogService.OpenAsync<DialogHandle_LenhXuatKho>(null, new Dictionary<string, object>() { { "LXK", lxk }, { "PXK", PXK } },
        new DialogOptions() { ShowTitle = false, Width = "70%", Height = "contain", Resizable = true, Draggable = true, ShowClose = false, Style = "background-color: while; border-radius: 10px; padding: 0px;" });

        // Raise event reload ds phieu xuat kho
        Common.RaiseReloadPXK_Event();
    }

    // Datagrid cell render
    private void OnCellRender(DataGridCellRenderEventArgs<NVLofPhieuXuatKho> args)
    {
        if (args.Column.Property.Contains("ID"))
        {
            args.Attributes.Add("style", $"font-weight: bold;");
        }
    }

    // Datagrid selected changed event
    private void OnDatagridSelectChanged(IList<NVLofPhieuXuatKho> selectedNgvatlieu)
    {
        DatagridSelectedNVLofPXK = selectedNgvatlieu;

        SelectedNVLofPXK = DatagridSelectedNVLofPXK.FirstOrDefault() ?? new();
    }

    private async Task CopyToClipboard(string content)
    {
        try
        {
            // Try modern Clipboard API first
            await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", content);

            NotificationService.Notify(new NotificationMessage
                {
                    Severity = NotificationSeverity.Success,
                    Summary = "Copied!",
                    Detail = $"{content}",
                    Duration = 4000
                });
        }
        catch (JSException)
        {
            try
            {
                // Fallback method
                await JSRuntime.InvokeVoidAsync("fallbackCopyToClipboard", content);

                NotificationService.Notify(new NotificationMessage
                    {
                        Severity = NotificationSeverity.Success,
                        Summary = "Fallback Copied!",
                        Detail = $"{content}",
                        Duration = 4000
                    });
            }
            catch (Exception)
            {
                NotificationService.Notify(new NotificationMessage
                    {
                        Severity = NotificationSeverity.Error,
                        Summary = "Error",
                        Detail = "Failed to copy text",
                        Duration = 3000
                    });
            }
        }
    }

}
