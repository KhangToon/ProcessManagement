@using Radzen.Blazor
@using Radzen


@inject DialogService DialogService
@inject IJSRuntime JSRuntime

<RadzenStack Gap="10px" Style="width: 100%; height: 100%" Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
    <RadzenCard Variant="Variant.Outlined" Style="width: 100%; height: 80%">
        <div class="col-lg-8" align="center">
            <svg style="display:none" id="barcode"></svg>
        </div>
    </RadzenCard>
    <RadzenStack Style="width: 100%; height: 20%; padding: 5px;" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
        <RadzenButton Click="@(async () => { await DownLoadBarcode(Lotcode); })" Icon="download" Text="Tải" Style="font-size: 14px; border-radius: 5px; width: 50%;" Variant="Variant.Filled" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small"></RadzenButton>
    </RadzenStack>
</RadzenStack>
@code {
    [Parameter]
    public string Lotcode { get; set; } = string.Empty;

    private string barcodeImage = string.Empty;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await GenerateBarcode(Lotcode);
        }
    }

    private async Task DownLoadBarcode(string code)
    {
        await JSRuntime.InvokeVoidAsync("downloadBarcode", code);
    }

    private async Task GenerateBarcode(string input)
    {
        await JSRuntime.InvokeVoidAsync("generateBarcode", input);
    }
}
