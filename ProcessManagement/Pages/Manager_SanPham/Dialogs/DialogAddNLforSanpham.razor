@using ProcessManagement.Commons
@using ProcessManagement.Models.KHO_NVL
@using ProcessManagement.Services.SQLServer
@using Radzen.Blazor
@using Radzen
@using ProcessManagement.Models

@inject DialogService DialogService
@inject NotificationService NotificationService
@inject SQLServerServices SQLServerServices

<RadzenCard Style="height: 100%; width: 100%;" Variant="Variant.Flat">
    <RadzenStack Gap="0" Style="height: 100%; width: 100%; margin: 0" Orientation="Orientation.Vertical" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.Start">
        <RadzenStack Orientation="Orientation.Horizontal" Gap="10px" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Style="height: 5%; width: 100%; padding-bottom: 10px">
            <RadzenText Text="@($"Thêm loại nguyên liệu cho sản phẩm")" Style="font-size: 18px; font-weight: 500; color: black"></RadzenText>
            <RadzenText Text="@($"{Sanpham?.TenSanPham.Value?.ToString()}")" Style="font-size: 18px; font-weight: 600; color: darkblue"></RadzenText>
        </RadzenStack>
        <RadzenRow Gap="10px" Style="height: contain; width: 100%; border-top: var(--rz-grid-cell-border); overflow-y: scroll; padding: 0;">
            <RadzenColumn Size="12" SizeMD="12" Style="height: 100%; width: 100%; padding: 15px;">
                <RadzenText Text="Chọn loại nguyên vật liệu" Style="color: darkred; font-size: 16px; font-weight: 500; height: contain; width: contain"></RadzenText>
                <RadzenCard Variant="Variant.Filled" Style="min-height: 300px; width: 100%; padding: 10px; margin-top: 10px; overflow: scroll ">
                    <RadzenStack Style="height: 100%; width: 100%; padding: 10px;" Gap="0" Orientation="Orientation.Vertical">
                        @{
                            // Chon danh muc nguyen vat lieu
                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start" Style="height: contain; width: 100%; padding: 10px; border-bottom: var(--rz-grid-cell-border);">
                                <RadzenStack Style="width: 30%;">
                                    <RadzenText Text="Danh mục NVL" Style="font-size: 16px; font-weight: 600; height: contain; width: 100% "></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 70%; padding-left: 20px; border-left: var(--rz-grid-cell-border);" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenDropDown AllowClear="true" Placeholder="@("*Chọn danh mục nguyên vật liệu")" TValue="string" Style="width: 100%; height: contain; font-size: 14px; font-weight: 600"
                                                    Data=@dsachDanhmucNVL?.Select(dm => dm.TenDanhMuc.Value?.ToString())
                                                    Change="@(args =>
                                                                    {
                                                                        selectDanhmuc = dsachDanhmucNVL?.FirstOrDefault(dm => dm.TenDanhMuc.Value?.ToString() == args?.ToString());
                                                                        dsachloaiNVLs = LoadListLoaiNguyenVatLieu(selectDanhmuc);
                                                                        selectLoaiNVL = null; // reset selected loaiNVL
                                                                        selectNguyenVL = null; // reset selected NVL
                                                                        dsachNVLs = null; // reset danh sach NVL
                                                                    })">
                                    </RadzenDropDown>
                                </RadzenStack>
                            </RadzenStack>

                            // Chon loai nguyen vat lieu
                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start" Style="height: contain; width: 100%; padding: 10px; border-bottom: var(--rz-grid-cell-border);">
                                <RadzenStack Style="width: 30%;">
                                    <RadzenText Text="Loại NVL" Style="font-size: 16px; font-weight: 600; height: contain; width: 100% "></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 70%; padding-left: 20px; border-left: var(--rz-grid-cell-border);" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenDropDown AllowClear="true" Placeholder="@("*Chọn loại nguyên vật liệu")" Disabled="(dsachloaiNVLs?.Count == 0 || dsachloaiNVLs == null)" TValue="string" Style="width: 100%; height: contain; font-size: 14px; font-weight: 600"
                                                    Value="selectLoaiNVL?.TenLoaiNVL.Value?.ToString()"
                                                    Data=@(dsachloaiNVLs?.Select(dm => dm.TenLoaiNVL.Value?.ToString()) ?? Enumerable.Empty<string>())
                                                    Change="@(args =>
                                                                    {
                                                                        selectLoaiNVL = dsachloaiNVLs?.FirstOrDefault(lnvl => lnvl.TenLoaiNVL.Value?.ToString() == args?.ToString());
                                                                        dsachNVLs = LoadListNguyenVatLieu(selectLoaiNVL);
                                                                        selectNguyenVL = null; // reset selected NVL
                                                                    })">
                                    </RadzenDropDown>
                                </RadzenStack>
                            </RadzenStack>

                            // Chon nguyen vat lieu
                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start" Style="height: contain; width: 100%; padding: 10px; border-bottom: var(--rz-grid-cell-border);">
                                <RadzenStack Style="width: 30%;">
                                    <RadzenText Text="Nguyên liệu" Style="font-size: 16px; font-weight: 600; height: contain; width: 100% "></RadzenText>
                                </RadzenStack>
                                <RadzenStack Style="width: 70%; padding-left: 20px; border-left: var(--rz-grid-cell-border);" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                                    <RadzenDropDown AllowClear="true" Placeholder="@("*Chọn nguyên liệu")" Disabled="(dsachNVLs?.Count == 0 || dsachNVLs == null)" TValue="string" Style="width: 100%; height: contain; font-size: 14px; font-weight: 600"
                                                    Value="selectNguyenVL?.TenNVL.Value?.ToString()"
                                                    Data=@(dsachNVLs?.Select(dm => dm.TenNVL.Value?.ToString()) ?? Enumerable.Empty<string>())
                                                    Change="@(args =>
                                                                    {
                                                                        selectNguyenVL = dsachNVLs?.FirstOrDefault(nvl => nvl.TenNVL.Value?.ToString() == args?.ToString());
                                                                    })">
                                    </RadzenDropDown>
                                </RadzenStack>
                            </RadzenStack>
                        }
                    </RadzenStack>
                </RadzenCard>
            </RadzenColumn>
        </RadzenRow>
        <RadzenStack Gap="10px" Style="height: contain; width: 100%; padding-left: 10px;" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Start">
            <RadzenButton Style="width: contain; height: 80%; color: white; background-color: darkgreen" Icon="save" Text="Xác nhận thêm" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Variant="Variant.Filled" Click="@(() => OnAddNewNVLchoSanPham())" />
            <RadzenButton Style="width: contain; height: 80%; color: white; background-color: darkred" Icon="close" Text="Thoát" Size="ButtonSize.Small" Variant="Variant.Flat" Click="@(() => OnCancelAddnewNVLofSP())" />
        </RadzenStack>
    </RadzenStack>
</RadzenCard>

@code {

    [Parameter]
    public SanPham? Sanpham { get; set; }

    private List<DanhMucNVL>? dsachDanhmucNVL;
    private DanhMucNVL? selectDanhmuc;

    private List<LoaiNVL>? dsachloaiNVLs;
    private LoaiNVL? selectLoaiNVL;

    private List<NguyenVatLieu>? dsachNVLs;
    private NguyenVatLieu? selectNguyenVL;


    protected override Task OnInitializedAsync()
    {
        dsachDanhmucNVL = LoadListDanhmucNguyenVatLieu();

        return base.OnInitializedAsync();
    }

    private List<DanhMucNVL>? LoadListDanhmucNguyenVatLieu()
    {
        var danhmucs = SQLServerServices.GetListDanhMucNVLs();

        return danhmucs;
    }

    private List<LoaiNVL>? LoadListLoaiNguyenVatLieu(DanhMucNVL? selectedresult) // load theo danh mục
    {
        int danhmucID = int.TryParse(selectedresult?.MaDanhMuc?.Value?.ToString(), out int dmid) ? dmid : 0;

        var loaiNVLs = SQLServerServices.GetListLoaiNVLs(danhmucID);

        return loaiNVLs;
    }

    private List<NguyenVatLieu>? LoadListNguyenVatLieu(LoaiNVL? selectedresult) // load theo loai NVL
    {
        int loaiNVLID = int.TryParse(selectedresult?.MaLoaiNVL?.Value?.ToString(), out int lnvlid) ? lnvlid : 0;

        var nguyenlieus = SQLServerServices.GetListNguyenVatLieu(loaiNVLID);

        return nguyenlieus;
    }

    private async Task OnAddNewNVLchoSanPham()
    {
        bool? comfirm = await DialogService.Confirm("Thêm nguyên liệu này cho sản phẩm?", "Xác nhận", new ConfirmOptions() { OkButtonText = "OK", CancelButtonText = "Hủy", ShowClose = false });

        if (comfirm.Value)
        {
            if (selectNguyenVL != null)
            {
                NVLofSanPham newNVLofSP = new()
                    {
                        MaNVL = { Value = selectNguyenVL.MaNVL.Value },
                        SPID = { Value = Sanpham?.SPID.Value },
                        NgayThem = { Value = DateTime.Now }
                    };

                // Check nvl da co trong dsnvl cua san pham
                bool isExisting = SQLServerServices.IsNVLofSanPhamExisting(newNVLofSP);

                if (!isExisting) // Chua ton tai 
                {
                    (int result, string error) = SQLServerServices.InsertNewNguyenVatLieuchoSanPham(newNVLofSP);

                    if (result > 0)
                    {
                        ShowNotification("Thêm thành công!", NotificationSeverity.Success, 2000);

                        DialogService.Close(newNVLofSP);
                    }
                    else
                    {
                        await DialogService.Alert($"{error}", "<strong><span style='color: red'>Error!</span></strong>", new AlertOptions() { OkButtonText = "OK", ShowClose = true });
                    }
                }
                else
                {
                    await DialogService.Alert($"Sản phẩm {Sanpham?.TenSanPham.Value?.ToString()} đã tồn tại nguyên liệu này!<br>Hãy chọn nguyên liệu khác", "<strong><span style='color: red'>Error!</span></strong>", new AlertOptions() { OkButtonText = "OK", ShowClose = true });
                }
            }
            else
            {
                await DialogService.Alert($"Chưa chọn nguyên liệu!", "<strong><span style='color: red'>Error!</span></strong>", new AlertOptions() { OkButtonText = "OK", ShowClose = true });
            }
        }
    }

    private void OnCancelAddnewNVLofSP()
    {
        DialogService.Close(null);
    }
    // Notification
    void ShowNotification(string message, NotificationSeverity notifytype, double time)
    {
        NotificationMessage notify = new NotificationMessage
            {
                Style = "position: fixed; top: 0; right: 0;",
                Severity = notifytype,
                Summary = message,
                Duration = time
            };

        NotificationService.Notify(notify);
    }
}
