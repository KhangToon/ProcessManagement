@using Microsoft.AspNetCore.Identity
@using ProcessManagement.Commons
@using ProcessManagement.Models
@using Radzen
@using Radzen.Blazor

@inject IHttpClientFactory HttpClientFactory
@inject NotificationService NotificationService
@inject DialogService DialogService

<RadzenTemplateForm TItem="ResetPasswordModel" Data="@resetPasswordModel" Submit="@ResetPassword">
    <div class="row mb-3">
        <div class="col-md-12">
            <RadzenLabel Text="Email" />
            <RadzenTextBox @bind-Value="resetPasswordModel.Email" Name="Email" class="w-100" />
            <RadzenRequiredValidator Component="Email" Text="Email is required" />
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-md-12">
            <RadzenLabel Text="Reset Token" />
            <RadzenTextBox @bind-Value="resetPasswordModel.Token" Name="Token" class="w-100" />
            <RadzenRequiredValidator Component="Token" Text="Reset token is required" />
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-md-12">
            <RadzenLabel Text="New Password" />
            <RadzenPassword @bind-Value="resetPasswordModel.NewPassword" Name="NewPassword" class="w-100" />
            <RadzenRequiredValidator Component="NewPassword" Text="New password is required" />
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-md-12">
            <RadzenLabel Text="Confirm Password" />
            <RadzenPassword @bind-Value="resetPasswordModel.ConfirmPassword" Name="ConfirmPassword" class="w-100" />
            <RadzenCompareValidator Component="ConfirmPassword"
                                    Value="resetPasswordModel.NewPassword"
                                    Text="Passwords do not match" />
        </div>
    </div>
    <div class="row">
        <div class="col">
            <RadzenButton ButtonType="ButtonType.Submit" Text="Reset Password" Icon="save" ButtonStyle="ButtonStyle.Primary" />
            <RadzenButton Text="Cancel" Icon="cancel" ButtonStyle="ButtonStyle.Secondary" Click="@CloseDialog" />
        </div>
    </div>
</RadzenTemplateForm>

@code {
    private ResetPasswordModel resetPasswordModel = new();

    private async Task ResetPassword()
    {
        try
        {
            var client = HttpClientFactory.CreateClient(Common.ServerAPI);
            var response = await client.PostAsJsonAsync("api/user/reset-password", resetPasswordModel);

            if (response.IsSuccessStatusCode)
            {
                NotificationService.Notify(NotificationSeverity.Success, "Success", "Password reset successfully");
                DialogService.Close(true);
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                NotificationService.Notify(NotificationSeverity.Error, "Error", $"Failed to reset password: {error}");
            }
        }
        catch (Exception ex)
        {
            NotificationService.Notify(NotificationSeverity.Error, "Error", $"An error occurred: {ex.Message}");
        }
    }

    private void CloseDialog()
    {
        DialogService.Close(false);
    }

    public class ResetPasswordModel
    {
        public string Email { get; set; } = string.Empty;
        public string Token { get; set; } = string.Empty;
        public string NewPassword { get; set; } = string.Empty;
        public string ConfirmPassword { get; set; } = string.Empty;
    }
}
